// Code generated by go-bindata. DO NOT EDIT.
// sources:
// transactions/destroy_nft.cdc (1.22kB)
// transactions/generic_transfer_with_address.cdc (2.18kB)
// transactions/generic_transfer_with_paths.cdc (1.888kB)
// transactions/mint_nft.cdc (2.884kB)
// transactions/nft-forwarding/change_forwarder_recipient.cdc (1.257kB)
// transactions/nft-forwarding/create_forwarder.cdc (1.534kB)
// transactions/nft-forwarding/transfer_nft_to_receiver.cdc (2.034kB)
// transactions/nft-forwarding/unlink_forwarder_link_collection.cdc (1.044kB)
// transactions/scripts/borrow_nft.cdc (807B)
// transactions/scripts/get_collection_data.cdc (249B)
// transactions/scripts/get_collection_ids.cdc (464B)
// transactions/scripts/get_collection_length.cdc (628B)
// transactions/scripts/get_collection_length_from_storage.cdc (722B)
// transactions/scripts/get_contract_storage_path.cdc (520B)
// transactions/scripts/get_contract_views.cdc (242B)
// transactions/scripts/get_nft_metadata.cdc (5.632kB)
// transactions/scripts/get_nft_view.cdc (4.367kB)
// transactions/scripts/get_views.cdc (890B)
// transactions/setup_account.cdc (1.326kB)
// transactions/setup_account_from_address.cdc (1.593kB)
// transactions/setup_account_from_nft_reference.cdc (1.374kB)
// transactions/setup_account_to_receive_royalty.cdc (1.621kB)
// transactions/transfer_nft.cdc (2.171kB)
// transactions/unlink_collection.cdc (520B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6f\xdb\x38\x10\xc5\xef\xfa\x14\x2f\x3a\x64\x25\x60\x57\xbe\x2c\xf6\x60\xe4\x0f\xb6\x71\x0d\xf8\x50\xa3\x08\xd4\xf4\x3c\x16\x47\x16\x5b\x86\x14\xc8\x51\x94\xa0\xc8\x77\x2f\x68\xc9\xb1\x94\x06\x29\xd0\x39\xd8\x16\xcd\x79\xf3\xd3\x9b\x99\xc5\x62\x81\xb2\xd1\x01\xe2\xc9\x06\xaa\x44\x3b\x8b\x5e\x4b\xa3\x3c\xf5\x01\x64\xb1\x5d\x97\xa8\xbd\xbb\x87\x34\x8c\xa0\xf7\x96\x7d\x40\xe5\x8c\xe1\xe1\x32\x59\x05\xc5\x41\xbc\x7b\x0a\xd0\x92\x24\xfa\xbe\x75\x5e\x90\x6e\x9d\x5d\x77\x76\xaf\x77\x86\x4b\xf7\x9d\x6d\xfa\xf2\xcf\x27\x16\x52\x24\x74\xa7\xb9\x0f\xa7\xe3\x8f\x8f\x74\xdf\x1a\xde\xae\xcb\x34\x49\x26\x3c\x99\x56\x4b\x7c\xd9\x58\xf9\xef\xdf\x1c\x3f\x92\x04\x00\x22\xf7\x2d\xd7\xec\xd9\x56\x0c\x69\x48\xd0\x6b\x63\xb0\x63\x74\x81\x15\x6a\xe7\x0f\xc0\xae\xb7\xec\xff\x9a\x02\x1f\xd2\x0d\xcb\xe4\xe8\x96\xeb\x25\xa8\x93\x26\x7b\xcd\x5c\x7c\x1d\xad\xc8\x71\x7e\xc2\x2b\x6e\x4e\x6a\x07\xb9\xd6\x73\x4b\x9e\xb3\xc1\x9e\x51\xeb\x83\xf3\xde\xf5\x77\x64\x3a\xce\x71\xfe\x7f\x55\xb9\xce\x4a\x7c\x01\x8c\x31\x87\x58\x91\x10\x2e\x31\xa9\xe2\x39\x38\xf3\xc0\x37\xce\x8a\xa7\x4a\xa2\x5b\x59\x3c\xeb\x7c\xc5\xe5\x53\xcb\x4b\x58\x6d\xfe\xc6\x83\xe6\x7e\x78\x8c\x9f\x17\x33\x73\x8b\xed\xba\xbc\x99\x95\xb8\xca\xf2\x1c\x14\xce\xf0\x9b\x7b\xd7\x2f\x98\x31\xae\xaf\xd1\x92\xd5\x55\x96\xc6\xeb\xb7\x03\x98\x87\x72\x1c\x60\x9d\x60\x44\xc5\x2f\x32\x07\xba\x34\x9f\x89\xbd\x3c\x2c\x16\xd8\x1d\x4c\x02\xc1\x9f\x9a\xe9\xde\xeb\x5c\x8c\xc0\xa6\x2e\x66\xed\xc3\xe5\x38\x9a\x45\x10\xe7\x69\xcf\xc5\x20\x7c\xf1\x67\x5d\xbd\xca\x66\xc0\x31\xe2\x0a\x2c\x5f\xb5\xeb\x58\xec\x33\x49\x33\x4b\xc8\x27\x86\x8d\x8d\x3f\x79\x15\x93\x38\x6e\x96\xdb\x7d\xe3\x4a\x40\x32\xac\x56\xcb\x95\xae\x35\x2b\xb4\x24\x4d\x9a\x0f\x93\xf5\x3c\x7c\xf1\x23\x57\x9d\xf0\x71\xfa\x47\xf3\x8e\x7b\x7a\xc8\x9f\xed\xe9\x3b\xe6\xc5\xa9\xb3\xb5\xe0\xe2\x9f\x37\x7c\x2c\x8e\x92\xd9\xf1\xc7\x66\xb5\x84\x56\xf9\xa9\xee\xb8\xeb\x51\x63\x4a\xd8\xba\x20\x93\xd9\x3e\x7b\x43\x7b\xcf\xb2\x59\x85\x2c\x2f\x2a\x67\x85\xb4\x0d\x99\x56\xf9\x12\x69\x39\xd2\xc7\x92\xaf\xac\xd8\xac\x10\x1a\xd7\x19\x85\x86\x1e\x18\x3b\x66\x0b\xc5\x86\x85\x55\x3a\x56\x7f\x4e\x7e\x06\x00\x00\xff\xff\xab\x4a\x43\x7d\xc4\x04\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x58, 0xcd, 0x49, 0x22, 0xae, 0x5c, 0xae, 0xdf, 0xe, 0xfd, 0x4b, 0x49, 0xb5, 0xce, 0x2a, 0x9e, 0xd, 0x9a, 0xb2, 0x9f, 0x3a, 0x38, 0xdb, 0x4, 0x47, 0x5c, 0x12, 0x71, 0xbe, 0x1f, 0xdb, 0x7b}}
	return a, nil
}

var _transactionsGeneric_transfer_with_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x7d\xd8\x95\x80\x44\xb9\x14\x3d\x08\xd9\xa4\x5b\x07\x06\xf6\x50\xa3\xd8\x7a\xb7\x67\x9a\x1c\xc9\x6c\x65\x92\x20\x47\x76\x8d\xc0\xff\xbd\xe0\x97\x22\xd9\x4e\xbd\x3a\x18\xb2\x38\x33\x7c\xf3\xde\x9b\x91\x3b\xa3\x2d\xc1\x7c\xa5\xd5\xb2\x57\xad\xdc\x74\xb8\xd6\xff\xa0\x9a\xcf\xf2\xc9\xef\x48\x4c\x30\x62\xdf\x25\x1e\xdc\x7c\x36\x7b\x78\x78\x80\x05\x53\x60\x98\x73\x20\x15\x30\x75\x04\xae\x15\x59\xc6\x09\x98\x10\x16\x9d\x03\xa6\x04\x28\xb6\xc3\x10\xbd\xde\x4a\x07\x1d\x92\x83\xa3\xee\x81\x6f\xb5\x76\x08\xb4\x45\x20\x7f\x53\xf8\x78\x60\x8a\x80\x34\x38\x54\x02\x36\xc8\x59\xef\x62\x6e\x08\xb3\x4c\x39\xc6\x49\x6a\x05\xad\x2f\xe3\x3f\xee\x12\x2c\x68\xac\xde\x85\x2f\xc6\xea\xbd\x14\x28\x06\x34\x95\xaf\x30\x1b\x65\x17\xa4\x6b\xf8\x1c\x21\xde\x81\x14\x35\x7c\xfb\xa2\xe8\x97\x9f\xef\x86\x94\x74\x38\x8a\xca\x27\x2b\xb6\xc3\x1a\xfe\x24\x2b\x55\x5b\xc2\xeb\x6c\x06\x00\x10\x9a\x43\x58\x2d\xd7\x60\xd1\xe9\xde\x72\xdf\x14\x6c\x12\xe6\x06\xad\x45\x11\x22\x3b\x24\x20\xdc\x99\xd5\x72\x5d\xc3\xaf\xaf\xe7\x74\x57\xab\xe5\xfa\x34\xd4\x5c\x2d\xd7\x0b\xdd\x75\x18\x40\xbf\xf8\x26\x1d\xd9\x9e\x07\x86\x5a\x24\x30\x8c\xb6\x2e\x34\x3e\xd4\xe6\x93\xf8\x1a\x26\xaa\x55\x17\x05\xe3\x55\xc6\xa2\x61\x16\x0b\x27\x5b\x85\xb6\x06\xd6\xd3\xb6\xf8\x4d\x5b\xab\x0f\xdf\x59\xd7\x63\x09\x1f\x3e\x73\xae\x7b\x45\x43\xc7\x09\x61\x0c\x02\x06\x16\x1b\xb4\xa8\x62\xdf\x5e\x05\xd5\xd0\x9b\x1d\x04\x9a\x4e\x1f\x51\xe4\x43\xef\x19\x14\xc0\x62\xd1\xa1\xa0\x6f\xc0\xf3\xd7\xed\xd1\x7e\xc5\x06\x3e\xf9\x2e\xd3\xcd\xc5\x99\x34\xe5\x90\xe5\x9f\x2a\x9f\xba\x6a\x13\x20\x3d\x7e\xb8\xe0\xf6\xf4\x54\xa8\x20\xde\x58\xca\x69\x99\xe7\x67\x30\x4c\x49\x5e\xcc\x17\xba\xef\x04\x28\x4d\xb0\x79\xbf\x45\xad\xee\x9b\x74\x43\xf2\x70\x2e\x3d\x2f\x27\x34\x7d\x0b\x46\x67\x34\xad\x61\x91\xac\xc4\x7d\x9c\x81\x4b\xad\xf7\x12\x0f\x30\x54\x71\xd8\x35\xd5\x54\x5d\xf8\x34\x66\xab\x4a\xef\x8b\x04\xc1\x2b\x5e\x64\x37\xae\x8f\x06\x6b\x50\xb2\xbb\x0b\x65\xe3\x5f\xff\xfb\x78\xc3\x20\x4f\x45\x59\x02\x73\x3f\xdd\x32\xd2\xf3\x4d\x1e\x13\xbc\xff\x6b\xb6\xd1\x36\x1c\xb7\x72\x8f\xea\x16\xbd\x63\x7e\xdf\xd7\x28\x5a\xfa\xa3\x0b\xb3\xf9\x46\xdf\xc4\x72\x07\x49\x5b\x61\xd9\x21\x5a\x2e\x66\x54\x8e\xb4\x65\x2d\x66\x3b\x85\x91\xb8\x98\xd6\xbf\x52\x66\x09\x97\x76\xab\xde\x3a\x3c\x3d\x15\x13\x7a\xfc\xe3\xa7\xb6\xbe\xa6\x6a\xbe\xf9\x0f\x46\xdb\x49\x56\x39\xa2\x35\x0d\x05\x08\x8d\x2e\xb0\xeb\x93\x10\xd8\xa8\x45\xd0\x9b\xbf\xd1\xaf\x62\x8a\x44\x18\xe4\xb2\x91\x28\xc2\xd6\x18\xfb\x33\x60\x48\x3b\x09\x1e\xef\xc7\x74\x54\xf9\xbd\xc8\x2f\x5f\x5e\x6a\x90\x22\x4e\x4d\x5a\x54\xf8\x2f\xf2\x9e\x10\x5e\xc7\x8a\xf8\xf5\xe4\xaf\xb5\xc8\xa5\x91\xa8\xc8\x81\xe9\x37\x9d\xe4\x79\xe8\x13\xbc\xb3\xd9\x4f\xc1\xd3\xc9\x27\x5d\x5e\x57\x3b\x55\xbc\x10\xdd\x22\x47\xb9\x47\xeb\xde\x53\x3c\x07\x2c\x98\x09\x43\x94\xae\xad\x38\x33\x6c\x23\x3b\x49\x12\x5d\xd5\x22\x5d\xd9\x22\xd5\xd7\x94\x7b\x7a\x2a\xae\xa9\x17\x31\x79\xf1\x6e\xaf\x96\x0b\x92\x3e\x3a\xc8\xe5\x61\x91\xb1\x1c\xc7\x62\x8d\xd1\x47\xbf\x8e\x7a\x49\x66\x2d\x7e\x78\xa9\x5d\x63\x6e\x40\x92\x0b\x9f\xed\xb2\x17\x34\xda\x49\xca\x73\x7c\xce\xf9\x10\x3a\x42\x59\x89\x98\x53\x84\x29\xae\xe1\xf1\x7e\xec\xb9\x6c\xa6\xd3\x7f\x01\x00\x00\xff\xff\xd2\x1e\x30\x30\x84\x08\x00\x00"

func transactionsGeneric_transfer_with_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsGeneric_transfer_with_addressCdc,
		"transactions/generic_transfer_with_address.cdc",
	)
}

func transactionsGeneric_transfer_with_addressCdc() (*asset, error) {
	bytes, err := transactionsGeneric_transfer_with_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/generic_transfer_with_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0x69, 0x13, 0xdb, 0x36, 0x99, 0x48, 0xac, 0x14, 0x8d, 0x50, 0x30, 0xc8, 0xe1, 0x2e, 0x7, 0xb1, 0x46, 0x28, 0x78, 0x3c, 0xe9, 0x61, 0x45, 0x70, 0xae, 0x65, 0xa0, 0xde, 0x99, 0x70, 0x82}}
	return a, nil
}

var _transactionsGeneric_transfer_with_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x41\x8f\xe2\x38\x10\x85\xef\xfc\x8a\x27\x0e\x33\x41\x62\xc2\x65\xb5\x07\x04\x33\xdb\xcb\x08\xa9\x2f\x68\x34\xc3\xee\x9e\x8d\x5d\x21\x9e\x0e\x76\x64\x57\x9a\x45\x2d\xfe\xfb\xca\x76\x12\x42\x43\xab\xb5\x1a\x4e\x4e\xa8\x7a\x55\xf5\xd5\x73\xf4\xa1\xb6\x8e\x31\xde\x58\xb3\x6e\xcc\x5e\xef\x2a\xda\xda\x27\x32\xe3\xd1\x68\x36\x9b\x61\x25\x0c\x6a\xe1\x3d\xb4\x81\x30\x27\x78\xb6\x4e\xec\x09\xb5\xe0\x12\xc2\x28\x38\x92\xa4\x9f\xc9\xa5\x37\xda\x78\x26\xa1\x60\x0b\xfc\x6c\x3c\x83\x4b\x82\xa2\x42\x34\x15\xe7\x51\x6f\x5b\x6a\x8f\x8a\xd8\xe3\x64\x1b\xc8\xd2\x5a\x4f\x31\x8a\x43\xd1\xf8\xf2\x28\x0c\x83\x2d\x3c\x19\x05\xe1\x71\xa4\xaa\x8a\x21\x52\xd4\x62\xa7\x2b\xcd\xa7\xdb\x38\x1d\x8e\xb1\x44\x2c\xf3\x60\x4e\xad\x62\x6c\x4b\x0a\x83\x1d\xc5\x41\x28\x6a\x0a\x03\xe1\xf6\xcd\x81\x0c\xa3\x24\x47\x53\x78\x8b\xa3\xa8\x62\x67\xbe\xb4\x4d\xa5\xa2\x4e\x3a\x42\x96\x24\x9f\x2e\x19\xcf\xa2\x6a\xc8\x87\xda\x07\xf1\x44\xf0\x8d\x4b\x33\x68\xc3\x64\x14\xa9\x61\x69\xed\xbb\xb2\xda\xc4\xf6\xd8\x09\xe3\x85\x64\x6d\x4d\xc6\x76\x8e\x07\xa5\x1c\x79\x3f\x85\x56\x73\xfc\xf5\x68\xf8\xf7\xdf\xa6\x71\x26\x72\xdf\x04\x97\x8f\x8a\x0c\xeb\x42\x93\x9b\xe3\x07\x3b\x6d\xf6\xd3\x9e\xf9\xfd\xff\x27\x78\x19\x8d\x00\x20\xe2\x26\x6c\xd6\x5b\x38\xf2\xb6\x71\x32\x60\x0e\x20\x62\x0f\x05\x39\x47\x2a\x46\x56\xc4\x60\x3a\xd4\x9b\xf5\x76\x8e\x3f\x5e\x5e\x7b\x21\xdf\xac\xb7\xe7\xa4\x59\x3b\xaa\x85\xa3\xcc\xeb\xbd\x09\x25\x45\xc3\x65\xf6\xa7\x75\xce\x1e\xff\x0e\x54\x26\xf8\xf0\x20\xa5\x6d\x0c\xf7\x6d\x74\x05\x5a\xeb\x84\xa6\xb1\xc4\x8f\xcb\x53\xa6\x07\x33\xdc\x9b\x7c\xd2\xeb\x84\xdf\x97\x2f\xa8\x85\xd1\x32\x1b\xaf\xe2\x72\x8c\x65\x48\x6b\x3c\xbb\x46\x32\xc4\xb5\x45\x0b\x67\x0f\x71\x37\xb5\xb3\xcf\x3a\xec\x26\x6d\xa5\xd7\x86\x8f\xd0\xc6\x93\x4b\xb3\xb3\x19\x76\x71\x22\x08\x38\x2a\xc8\x91\x49\xe4\x82\x4e\x1a\xfc\xa3\x8f\x58\xa5\xad\x2a\x8a\xab\xbc\x9a\xf4\xa8\xb9\x54\x4e\x1c\xbf\x53\x81\x65\x9b\x91\xb7\x6d\xe5\x49\x7a\x11\xc1\xdd\x80\xfe\xa7\xcd\x9c\xe0\xc3\xed\x16\x56\x7d\xb5\xf3\xe7\xec\x0a\x49\xf8\x85\x49\xe7\x43\xc8\x57\x11\x93\x01\xb6\x76\x41\x50\x96\x7c\xa4\x17\x92\x08\x62\x30\x0e\xec\xee\x27\x05\x9a\xe9\x0a\xfb\x9a\x64\xa0\x95\xe8\x0d\x59\x79\xaa\x8a\xbc\xb5\x0e\x16\x9f\x86\xa3\xe7\xdd\x39\xeb\x0e\x8f\x5f\xe7\xd0\x2a\x6d\xb3\xf5\x13\xfd\x4b\xb2\x61\xc2\xcb\x15\xc0\xba\xd9\x55\x5a\xb6\x4e\xf9\xd6\x3f\x5c\x19\xe5\xfe\x25\xf8\x7f\x56\x49\x75\x7e\xc9\x29\x7b\x4a\x88\x1c\x49\x5d\x6b\x32\xec\x3b\x55\xd1\x62\x4e\x28\xaf\xe6\xeb\x83\xb1\x0c\x02\xed\x42\x32\xb6\x6f\xb8\xb0\x55\xbc\x31\x63\xc7\xc0\xbf\xe5\xc4\x2e\x60\x25\x6a\x2c\x2f\x65\xf3\xfe\x53\xaa\xc9\xe7\x7b\xe2\xc5\x1d\xbb\x7d\x6f\x73\xcf\x9f\xb3\xcb\x3e\xde\xe7\x7b\x03\xe4\xa3\x47\x27\x85\x55\xff\x09\x1f\x62\x1c\x76\x9a\xee\xcc\xa0\xef\xf6\xc2\x64\xef\x57\x6e\x71\xdd\xa3\xd4\x77\xd2\x09\xbf\xda\xe2\x57\xaa\xad\xd7\xa9\xf1\xe0\xe4\x57\x7c\xfb\xd0\x41\x97\xb9\x4a\x39\x59\xfc\xd8\xcf\xb1\xf8\x34\xbc\x0b\x9d\xc9\xcf\xff\x05\x00\x00\xff\xff\xae\x06\x20\x3f\x60\x07\x00\x00"

func transactionsGeneric_transfer_with_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsGeneric_transfer_with_pathsCdc,
		"transactions/generic_transfer_with_paths.cdc",
	)
}

func transactionsGeneric_transfer_with_pathsCdc() (*asset, error) {
	bytes, err := transactionsGeneric_transfer_with_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/generic_transfer_with_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x9e, 0xda, 0x7b, 0x66, 0x69, 0x94, 0x12, 0xa5, 0x59, 0xef, 0xe0, 0x2, 0xba, 0x45, 0xea, 0x2, 0x92, 0xe5, 0xf9, 0x7f, 0x32, 0x12, 0xb8, 0x17, 0x4b, 0x2a, 0xb0, 0xd7, 0xec, 0x53, 0xc6}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x41\x6f\xe3\x36\x13\xbd\xeb\x57\xcc\xe7\x83\xd7\xc6\x97\xb5\x5b\xa0\xe8\x41\x88\xb3\xd8\x78\x1b\xa0\x87\x0d\x16\x59\x77\x2f\x41\x0e\x63\x6a\x2c\xb1\xa5\x49\x95\x1c\xd9\x31\x82\xfc\xf7\x82\xa2\x44\x8b\x89\x92\xd6\x07\x5b\x26\x67\x1e\x67\xde\xbc\x19\x71\xb9\x5c\xc2\xa6\x92\x0e\x9c\xb0\xb2\x66\x68\x1c\x39\xe0\x8a\xe0\xf6\x66\xf3\x55\x6a\x26\x0b\x96\x9c\x69\xac\x20\x60\x03\x7b\xa9\x19\x10\x34\x1d\xbd\x41\xe6\xbd\x7f\x67\xd8\x37\x8e\x61\x4b\x60\x1b\x0d\x47\xc9\x55\x0b\x80\x42\x98\x46\x33\x70\x85\x0c\x15\x06\xd4\x7d\x0a\xd9\x02\x38\x36\x96\x0a\x90\x1a\x96\xfe\x11\x4b\x5a\xc6\xc3\xbd\x41\x16\x62\x24\xb0\xe6\x84\x8a\x4f\x80\xb6\x6c\xf6\xa4\xd9\x81\xd4\x85\x14\x92\x5c\x8c\x00\x95\x2c\x35\x15\x59\x26\xf7\xb5\xb1\x0c\x93\x5b\xa3\x6f\x1a\x5d\xca\xad\xa2\x8d\xf9\x8b\xf4\x24\xee\xfc\xf6\x88\xfb\x5a\xd1\xed\xcd\xe6\xbc\xf6\x95\x18\x0b\x64\xfc\x21\xe9\xe8\xce\xcb\x2f\x10\x32\xb6\xa8\x1d\x0a\x96\x46\xcf\x32\x00\x00\x4b\x42\xd6\x92\x34\xe7\xf0\xb9\x28\x2c\x39\x77\xd1\xae\x6b\xdc\x53\x0e\xdf\xd9\x4a\x5d\x86\x95\x82\x02\xd1\xd2\xe8\x74\x83\xab\x66\xbf\xd5\x28\x55\xba\x2c\x1a\x76\x39\xdc\xff\x71\x23\x1f\x7f\xfd\xe5\x21\xac\x75\x3c\x7c\x39\x43\x79\x93\xe0\x95\x9a\x5c\x93\xa6\x9d\x14\x12\xad\x24\x6f\xd3\x05\xf7\x90\xcd\xe1\x29\x6b\x0d\x3d\xb7\xca\x08\x54\x70\x40\x2b\x71\xab\x08\x76\xc6\xb6\x35\x91\xba\x4c\x6b\xb6\x23\x4b\x5a\x50\xeb\xa7\x88\xbb\x8d\x1c\xa6\x67\x2a\x17\xe7\xca\x45\xf8\xbb\xde\xd1\x0b\xc8\x03\x5a\x12\x24\x0f\x64\x3f\x38\x10\x46\x29\x6a\x89\x8c\xa8\x91\xcb\x75\xdc\xbb\xa3\x5d\x0e\xd3\xa7\x97\xb5\x5c\xdc\x75\x40\xcf\xe1\xb0\xda\x52\x8d\x96\x66\xce\x6b\xc0\xe6\x80\x0d\x57\xb3\x6b\x63\xad\x39\xfe\x40\xd5\xd0\x1c\xa6\x9f\x83\x28\x63\xfa\xfd\xa1\xe7\x38\xbe\x20\x23\xac\x60\x90\x92\x17\xab\x3a\xd0\xda\x68\xb6\x28\xd8\x6b\x63\xd6\x0b\x78\x73\xaa\x29\x07\x2d\xd5\x05\x1c\x24\x1d\xc3\x5f\xff\x7d\x99\x48\xc9\xd3\xb2\x4e\x8e\xb8\x9a\xcd\xe7\x80\xee\x7f\xf0\x2f\x76\x9f\x62\x98\xfe\xf3\xe9\x13\xd4\xa8\xa5\x98\x4d\xbc\xf9\x5d\x08\xcc\x42\x61\xc8\x81\x36\x0c\x5d\xa8\xf0\x0a\xa6\x8d\x6e\x32\x8f\x60\xf1\x61\xb9\x84\x6d\xcb\x10\xe0\xb9\xc2\x7d\xa1\x46\x66\x80\xd4\xd0\x35\x69\x84\x70\xa4\x76\x8b\x4e\x24\x2b\x08\xe4\x2f\x3a\xa3\x45\x00\xbf\x1c\x95\xc8\xd5\x6c\x67\xcd\x3e\x1f\x72\x1d\x36\xbe\x07\xe7\x6f\xc8\xd5\xfc\x8d\xfc\xbb\x42\x9e\x53\x6f\xa7\x08\xa0\x06\xb3\xfd\x93\x04\x03\x72\x9b\x82\xab\x49\xc8\x9d\xa4\x02\x6a\xe4\x6a\x32\xcf\x86\x99\x07\x6d\xf4\x9a\x0c\xaa\xfb\xe0\xa0\x6e\xb6\x4a\x0a\x9f\xfd\x40\x17\x2f\xf4\x1f\x13\x1f\x97\x2b\xac\xa0\x24\xee\x82\x9c\x45\x9b\xf9\x42\x60\x8d\x5b\xa9\x24\x4b\x72\x91\x9c\x77\x94\x7d\x35\x4b\x08\x68\x47\x42\x52\xd9\x45\x88\xd6\x73\x95\x58\xce\x07\x64\xad\x4d\xa3\x8a\x96\xa5\x32\x34\x58\x8b\x3d\x5a\x6f\x38\xa7\xd1\xc9\xe5\xdc\x5c\xf0\x14\x4f\xf0\x63\x69\xa1\x48\x97\x5c\xc1\x6a\x35\x36\x91\xfa\xdd\xe9\xf4\x0d\xe3\x64\x36\x75\xdb\x39\x4c\x3e\x5b\x8b\x27\xe8\xac\x5d\xd5\x46\xbe\x25\xa0\xbf\x1b\x54\xed\x68\xea\xdf\x02\x96\x14\x32\x15\x50\x10\xa3\x54\x6e\x32\x0c\x96\x1e\x49\x34\x4c\xc3\x2e\x5f\x2e\x61\x6d\x09\x99\x42\xb9\x3b\x90\xce\x39\x5a\x1d\xd0\x42\x10\xd6\x0a\x7e\x4a\x56\x83\x47\x18\xa3\x69\xcf\xde\x05\xac\x07\x58\xc1\xfd\x43\xf4\x39\x56\x52\xd1\x7b\xb9\xc2\x55\x77\xd2\x53\x52\x37\x3f\x8d\xb6\xd1\xfc\x04\xe3\x7c\xdd\xb7\xae\x0f\xef\x79\xae\x7b\xa5\x9d\x52\x31\x0e\x4c\x5e\xc8\xb1\x24\xbe\x9c\x3e\xfd\x77\x21\xfa\x4f\x4a\x45\x49\xdc\xb1\xd1\xfb\x7d\x8b\xea\x9c\xcd\x5f\x01\x0c\x35\x7a\x3d\xc8\x39\x36\x75\x85\x07\x82\x1e\x0a\x84\xd1\x3b\x59\x36\xfe\xb2\x80\x0c\x6f\x1e\x34\x6c\x72\x88\xef\x42\x9f\x20\xd6\x35\xe9\xe2\x75\x22\xa3\xf5\x1c\xcf\xb7\x6f\x9e\x7c\x9c\xea\x8b\x51\x27\xd1\x70\xde\x76\x41\x57\xb6\x71\xab\xe4\x6a\x30\xd2\x51\x63\x35\x6f\x59\xcc\xde\xfe\xd7\x6b\x39\xfc\xfe\x1f\x7e\x8e\xbb\xcf\x59\xd2\x1b\x7e\xf0\xc6\x19\x80\xda\xb7\x55\x6d\x9c\x64\x90\x3c\x78\x6d\xc7\x11\xf9\xe2\xbd\x0d\xc3\x1b\x41\xe1\x21\x2e\x3f\x0e\xdf\x0b\xed\xcf\xed\xcd\x26\xe5\x34\xdc\x8e\xfc\x77\x4a\x48\x42\xc4\xe0\x4f\x6a\x35\xb8\x30\xc5\xc7\x8b\xf1\xc2\xe7\xe7\xc7\xec\x35\x4f\xef\x8c\xf1\x45\xc7\xc2\x8c\x7d\x33\xe4\x70\xf9\x31\x66\x18\x87\xe3\x73\xf6\x4f\x00\x00\x00\xff\xff\xd3\x92\x8d\x2c\x44\x0b\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x62, 0xe0, 0xef, 0xa7, 0x43, 0x24, 0x23, 0xe, 0x15, 0x4f, 0x60, 0x4b, 0xcb, 0x9f, 0xa1, 0x82, 0xca, 0xaf, 0xb4, 0x3a, 0xef, 0xea, 0xee, 0x2a, 0x3a, 0x90, 0x1, 0x58, 0xab, 0xd0, 0x71}}
	return a, nil
}

var _transactionsNftForwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xcb\x8b\xdb\x30\x10\xc6\xef\xfe\x2b\x86\x1c\x16\x1b\x8a\x7d\x0f\xfb\x60\x1b\xc8\xad\x65\x49\x43\xef\x8a\xfc\xd9\x16\xd5\x4a\x46\x1a\xd5\x2d\x4b\xfe\xf7\xe2\xf7\xa3\xa1\x5b\x56\x17\x1b\x69\x34\xdf\xcc\x6f\x3e\xa9\xd7\xda\x3a\xa6\xdd\x57\x6b\x8e\xc1\x94\xea\xa2\x71\xb6\x3f\x60\x76\xd1\x74\x72\x3c\x1f\xad\x6b\x84\xcb\x95\x29\x77\x51\x94\x65\x19\x9d\x2b\xe5\x89\x9d\x30\x5e\x48\x56\xd6\x50\xa8\x73\xc1\xf0\xc4\x15\x68\xbe\x00\x47\x0e\x52\xd5\x0a\x86\x89\x6d\x77\x6a\x0d\xa8\x54\x3f\x61\x48\x70\xb7\xe1\x6b\x48\x55\x28\xe4\xf4\x12\x2e\x5a\xc9\x17\xc1\x55\x2b\x12\x2d\xf2\xc7\x06\xcd\x69\xcc\xf4\x9c\xe7\x0e\xde\xef\x69\xf8\xf9\x44\xd2\x6a\x8d\x2e\x70\x4e\xb1\x5f\xa4\x4b\xe8\x2d\x8a\x88\x88\xb2\x8c\x1c\x0a\x38\x18\x89\xb1\xa0\xae\xdc\xa1\xda\x13\xbc\x0d\x4e\xa2\x0b\xd6\x60\x2a\xc6\x46\x4e\x28\xf6\x24\x02\x57\xf1\x8a\x47\xfa\x25\xb0\xb8\x68\x24\x74\xb7\xde\x5f\x42\x18\xa5\x0f\x53\x99\xd4\x80\x1a\xa5\x35\xe5\xf0\xaa\x34\x82\x41\xc2\x8f\x62\xca\x94\x33\xb6\xa9\x92\x25\x81\x39\xd1\x9e\x0e\xa2\x16\x17\xa5\x15\xff\xbe\xbf\x7b\xdb\x4e\x31\x9d\x23\xaf\x8f\x3d\x82\xda\xa1\x16\x0e\x71\xab\x0b\x37\xf4\xf4\xd9\x3a\x67\x9b\xef\x42\x87\xb6\x93\x67\x29\x6d\x30\xdc\x52\xa3\x61\x65\x19\x5d\xba\x98\x35\xbf\xcd\xa8\x17\xf0\xda\xe5\xa1\x8b\x74\x49\x90\x1e\xa8\x97\x4d\x3d\x5b\x27\x4a\xa4\x7d\xd2\xfb\x0f\x82\x7d\x8c\x27\xad\x71\x15\xce\xbe\xee\x69\x7d\xe5\x5b\x2f\xd6\x19\x6b\x19\x9b\xd0\xd3\x13\xd5\xc2\x28\x19\xef\x0e\x36\xe8\x9c\x8c\xe5\x77\xfb\xdc\x25\xd1\x12\x4b\x09\x5e\x0e\x76\x1e\x47\x57\x4a\xe7\x30\xb7\x71\x2e\x89\x1e\xf0\x1a\xd4\xed\x01\xd3\x43\xab\x30\x4c\xe4\xd6\x33\x48\x52\x39\x4a\x2a\xf8\xb4\x04\xbf\xe7\x83\xbf\xa1\xdd\x7a\x3f\xff\x41\x6a\xd3\xba\xdc\xb4\x3e\xb5\x3d\x12\xbb\xf6\x1f\xfc\x82\x0c\x8c\xb5\xbb\x7c\x6f\xf1\x8d\xf1\x6f\xba\x28\x95\x95\x30\x25\x26\x10\xf1\x3f\xf0\x25\x83\xf0\x35\xfa\x13\x00\x00\xff\xff\x8e\x0f\xef\x7d\xe9\x04\x00\x00"

func transactionsNftForwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingChange_forwarder_recipientCdc,
		"transactions/nft-forwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftForwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0xe2, 0x59, 0x6c, 0x7b, 0x8c, 0x95, 0x17, 0x90, 0x2a, 0x5b, 0x30, 0xb9, 0x17, 0xf7, 0xe9, 0x1d, 0xad, 0x7f, 0x87, 0x88, 0xb6, 0x48, 0x6d, 0xa3, 0xad, 0x8a, 0xac, 0x4a, 0xbf, 0xa2, 0x70}}
	return a, nil
}

var _transactionsNftForwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xe2\x30\x14\xbc\xe7\x57\x8c\x38\xd0\x20\x51\xb8\xa3\x6e\xab\x2e\x12\xd2\x1e\x16\x55\x2d\xdb\xfb\x23\x79\x24\xd6\x06\x3b\xb2\x5f\xc8\x56\x15\xff\x7d\x65\xf2\xe1\xc0\x66\x9b\x93\xf1\xc7\xcc\x78\x66\x8c\x3a\x96\xc6\x0a\x26\x5b\xa3\x37\x95\xce\xd4\xbe\xe0\x9d\xf9\xcd\x7a\x12\x75\x2b\x3f\x59\x28\x25\xa1\x77\xc5\xb5\x0b\xd3\xdb\xcd\x6e\x63\x6c\x4d\x36\x55\x3a\x9b\x44\xd1\x72\xb9\xc4\x2e\x57\x0e\x62\x49\x3b\x4a\x44\x19\x0d\xe5\x50\xe7\x24\x20\x0d\x4a\x12\x53\x69\x41\x6d\xaa\x22\x85\xad\x34\xc4\xc0\xb1\x40\x89\xe3\xe2\x80\xaa\xf4\x13\x87\x06\x12\xdb\xcd\xce\xf9\xdf\x84\x94\x9d\xca\x34\x09\xa7\xb0\x9c\xa8\x52\xb1\x96\x3b\x87\x0b\xdf\x76\xb3\x5b\xac\x4d\x51\x70\xc3\x46\xce\x55\x47\xa5\x33\x48\xce\x61\xb3\x17\x91\x18\x7d\x50\x59\x65\x39\xf5\x0c\x97\xf5\x4c\x9d\x58\x7b\x04\x04\x04\x0f\x1a\x0d\xf4\xc7\x3d\xc8\x73\x9a\x5a\x76\x6e\x85\x76\x30\x47\xd2\x9f\x7a\xa9\xf6\x85\x4a\x5e\x48\xf2\x15\xc2\x78\x86\xcf\x28\x02\x80\xd2\x72\x49\x96\x63\x7f\x0d\xb6\x2b\x50\x25\x79\xfc\xdd\x58\x6b\xea\x77\x2a\x2a\x9e\xe3\x87\x73\x15\xbf\x89\xb1\x94\xf1\x9a\x4a\xda\xab\x42\xc9\xc7\xda\x68\xb1\x9e\xc4\xce\x1b\x58\x97\x87\xc5\x39\xde\xe8\xc4\xed\xf9\x5f\xba\xbc\x5d\x9f\x61\xfa\xdc\x18\xee\x75\xa0\xfd\xfa\xc1\x72\x89\x8c\x65\x70\x73\x84\xa3\x38\x58\x73\xbc\xb6\xb0\xbd\x74\x97\x61\x0f\x53\xb0\x84\x4d\x01\x6c\x4d\x25\xbe\x79\x82\x56\xc2\x3f\x36\xce\x16\x49\x47\xa7\xd8\x2d\x32\x96\x87\xe9\xe7\x6d\x03\x07\xc9\x9e\x1f\xe3\x9e\xb3\xfb\xc6\xfc\xbf\xda\x34\xc3\xd3\x13\x4a\xd2\x2a\x89\x27\xaf\xc3\x32\x68\x23\xc3\x42\xd4\x4a\xf2\x9b\x1e\x80\x64\xd0\x91\x92\x24\x9f\xcc\xa2\xa1\x79\x89\x65\x12\x06\x41\x73\x8d\xf0\x12\xd8\xc2\xb2\x33\x95\x4d\x18\x53\x38\x3a\x31\x94\x86\x6b\x92\x9d\x77\xe5\xbe\x34\xd4\x5c\x3b\x7c\xe7\x86\x35\x1c\xfa\x7b\xe8\xa1\x1f\xee\x71\xf5\xe8\x16\x8d\x8a\x2d\xd7\x43\x05\xc1\xec\xd5\x7f\xb2\x99\xf5\xf8\x4d\x25\x17\xad\xc0\x85\x17\x1c\x3f\xdc\xf7\x8c\x73\x88\x59\xdd\x70\xb6\x35\xbd\x34\xfc\xca\x92\xaa\x2b\x21\xf8\x8f\x72\xe2\x2f\x39\x30\x74\x98\x77\x53\xb0\x91\xd4\x5a\x39\x57\xdd\xe8\x61\xe3\xb1\xc0\x47\x53\x99\xa2\x53\x42\x81\xf7\xa3\x7f\xf8\xc1\xd0\x3a\x67\xcb\x97\xb9\x80\xdd\xfe\x3f\x69\x63\x8f\x54\x14\x1f\xd8\xf3\x78\x1a\xaf\x9c\xb0\x3a\xb1\x6d\xba\x3e\xa6\xbc\x73\x55\xf9\xd7\x3d\xd6\xef\x0e\xe2\xfc\x18\x7f\xe1\xf1\x57\xe6\x74\xd6\x8c\xa9\x9a\x83\x64\x35\xfa\x4a\x5a\xd3\xce\xd1\x39\xfa\x1b\x00\x00\xff\xff\xb7\x88\xc7\x7e\xfe\x05\x00\x00"

func transactionsNftForwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingCreate_forwarderCdc,
		"transactions/nft-forwarding/create_forwarder.cdc",
	)
}

func transactionsNftForwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x5c, 0xd7, 0xb2, 0xc0, 0xd1, 0xfd, 0x3a, 0xc2, 0x66, 0x5, 0x1, 0x5e, 0xea, 0x7e, 0x61, 0xbe, 0x75, 0xce, 0xe7, 0xb1, 0xf5, 0xb1, 0xe, 0x88, 0x85, 0xf5, 0x34, 0xf5, 0x3f, 0x3b, 0x40}}
	return a, nil
}

var _transactionsNftForwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x41\x6f\xdb\x3a\x0c\xbe\xfb\x57\xf0\xf9\xd0\xda\x40\xeb\x5c\x1e\xde\xc1\x48\x5b\xf4\x25\x28\xd0\xc3\xb2\xa1\xcb\xba\xb3\x22\xd3\xb1\x36\x47\x32\x24\x3a\x59\x11\xe4\xbf\x0f\xb2\x65\xc7\xb2\xd3\xf5\x30\x1f\x02\x45\x14\xc9\x8f\xdf\x47\x52\xec\x2a\xa5\x09\xc2\x95\x92\x4f\xb5\xdc\x8a\x4d\x89\x6b\xf5\x13\x65\x18\x74\x96\x57\x81\x87\x17\x34\xaa\xdc\xa3\x3e\xdf\x7e\x42\x62\x19\x23\x66\xad\x26\x0c\x82\xd9\x6c\x06\xeb\x42\x18\x20\xcd\xa4\x61\x9c\x84\x92\x20\x0c\xe4\x4a\xb7\x57\x39\x6a\x2d\xe4\x16\x98\x84\xd5\xd3\x1a\x72\xad\x76\xa0\x24\x02\xe3\x5c\xd5\x92\x80\x14\x50\x81\xa0\x91\x8b\x4a\xa0\xa4\x6b\x03\x2f\xc8\x51\xec\x51\xdb\xe0\xc1\x20\x6e\x14\x00\x00\x70\x25\x49\x33\x4e\x8f\x59\xa6\xd1\x98\x14\xdc\xe1\xc6\xb3\xae\xd8\x0e\x53\xf8\x4a\x36\x77\x6b\xe9\x33\x8c\x3c\x0e\x82\x8a\x4c\xb3\xc3\xf3\x32\x85\x6f\xcf\x92\xfe\xfb\x37\x88\xe1\x18\x34\xb6\xd9\x0c\x34\xe6\xa8\x51\x72\xec\x90\x76\xef\x51\x5f\x1b\xe0\xaa\x2c\xb1\x01\xd7\xbc\x2f\x91\x7a\xfb\x0b\xe6\x29\xb0\x9a\x8a\x68\xcc\x71\xf2\xdd\x3d\x89\xe1\xea\x38\x31\x2e\xfa\x90\xa7\x29\x06\x95\x37\x18\x3a\x86\x2c\xa6\x0c\x2b\x65\x04\x35\xf7\x96\x61\x52\x3d\x14\x67\x6a\x90\x5c\xc8\xd4\x45\x39\xb5\xc5\x56\x1a\x2b\xa6\x31\x32\x62\x2b\x51\x3b\xec\xff\x2b\xad\xd5\xe1\x95\x95\x35\xc6\x70\xf5\xd8\x8a\xd6\xf3\xe3\xf0\x6d\xb1\x4d\x7f\x66\x03\x6c\x8f\xb4\x62\x77\xb8\x3a\x65\x7a\x47\x8b\x50\xe6\xb4\x70\xf7\x70\x67\xe3\xb8\x0c\xd1\x48\xe5\x38\xe9\x2e\x4c\xb2\x69\x20\xcd\xaf\x8e\xc3\x0e\x3d\xdd\x47\xb2\x91\x7c\xd8\x00\x71\x9f\xcb\x7e\x0f\x0f\x50\x31\x29\x78\x14\x2e\x54\x5d\x66\x20\x15\x41\x1b\x0b\x86\x91\xa6\x8a\x77\x21\x43\x3f\x9e\x57\xc8\xb9\xf4\xa5\xad\xfc\x6e\x58\x59\xa2\xdb\xd0\xdd\x7f\x9b\x2d\xb2\x77\xb5\xe6\xb8\x7e\xab\x30\x05\x29\xca\x1b\xd8\x0b\x3c\xb4\x7f\xed\xef\xdc\x1b\xb5\x64\xf5\xb4\x5e\x78\x39\xee\xa3\x38\x06\x66\xe0\x83\x67\x0f\x1f\x72\xe0\xd0\xc1\xc4\xb5\x01\x14\xc6\x9e\xd4\x8e\x30\x36\x65\xa9\x6d\x9b\x6b\xe3\xc4\xf6\xe6\xc2\x7e\x06\xcb\x3c\x19\x0c\x07\xdc\x39\x97\xc4\x90\xd2\x6c\x8b\x9d\xb0\x7f\x37\x33\xf7\x91\x57\xb0\xfd\x6c\x1b\xa6\x23\x85\xba\xa4\x5f\x18\x15\x9e\x43\x3c\xe0\xc8\x35\x23\x64\x0a\x4d\x43\x95\x75\x42\xbb\xca\xd4\xe6\x07\x72\x02\xd6\xf6\xbd\xa9\x90\x8b\x5c\x60\x06\x15\xa3\xe2\x3d\xc6\xaa\x7a\x53\x0a\x3e\x25\xee\xe2\xea\xf3\x58\x3b\xcf\xb1\x3f\x24\xbd\x67\x9c\x70\x56\xb1\x8d\x28\x05\x09\x1c\x4c\xc8\xfb\x23\x7f\x81\xa6\x11\x41\x2d\xdc\x3f\xf2\x33\x99\xa3\x0b\x6d\x71\xa9\x3a\x37\x48\x6e\xef\xe0\x2f\xe4\x35\xe1\x68\xa7\x74\x9d\xd2\xef\x8f\x7e\x99\xa8\x83\xbc\xb4\x7b\x07\x2b\x05\xe6\xb7\x93\x76\xeb\xcf\xd1\x70\xe1\x9f\xcf\xbe\x68\xcb\xd1\x52\x15\xd2\x2f\xe6\x3d\x7d\xba\x63\x44\x96\xee\x14\xe6\xb7\x32\x27\xaf\xda\x4a\x19\x82\x63\xef\xff\xcf\x04\xe7\x16\xe9\x79\x69\xa2\x76\xe3\x31\x21\xcd\x00\x70\x9c\x42\xf8\x59\x8b\xad\x90\xac\x6c\x79\x00\x53\xf4\x22\x14\x6c\x8f\x3d\x62\x26\xdf\x76\x4a\x63\xe8\x72\x9f\x82\xdf\x01\x00\x00\xff\xff\xe1\xac\x8f\x54\xf2\x07\x00\x00"

func transactionsNftForwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingTransfer_nft_to_receiverCdc,
		"transactions/nft-forwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftForwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x47, 0x5f, 0x6b, 0xc0, 0x65, 0x27, 0xe1, 0x83, 0x20, 0xc9, 0xf6, 0x49, 0xd9, 0x76, 0xc8, 0xe2, 0x47, 0xff, 0x95, 0xd0, 0xec, 0xd4, 0x4a, 0x4e, 0xf7, 0x4b, 0xa9, 0xed, 0xc8, 0x0, 0x96}}
	return a, nil
}

var _transactionsNftForwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4d\x8b\xdb\x40\x0c\xbd\xfb\x57\xbc\xee\x21\x24\xe0\xda\xf7\xd0\x2d\x94\x40\xa0\x87\x86\xa5\x4d\x7b\x57\x6c\xc5\x16\x75\x66\x8c\x46\xde\x10\x96\xfc\xf7\xe2\xc4\x19\x3b\xdb\xd0\xfa\x34\xd6\x8c\xf4\x3e\xf4\x12\x39\xb4\x5e\x0d\x4f\x1b\xef\xd6\x9d\xab\x64\xd7\xf0\xd6\xff\x66\xf7\x14\x6f\xbe\xb1\x51\x49\x46\xbf\x84\x8f\x61\x2c\x6f\xd6\xdb\xb5\xd7\x23\x69\x29\xae\x7a\x4a\x92\x3c\xc7\xb6\x96\x00\x53\x72\x81\x0a\x13\xef\xa0\xdc\x36\x54\x70\xc0\xf8\x98\x15\xdf\xb9\x60\x79\x65\xc5\x8a\x5a\xda\x49\x23\x26\x1c\x70\x14\xab\x41\x28\x7c\xd3\xf0\xb5\xdb\x3c\xc4\x02\xda\x6e\xd7\x48\x81\x60\x5e\xa9\x62\xd0\xde\x58\x51\xd3\xab\xb8\x0a\x85\x77\x7b\xa9\x3a\xe5\xb2\xc7\xef\x5f\x4f\x91\x92\x3c\xcf\x93\x09\x9f\xf9\x38\xfc\xc7\x75\xda\x0b\x59\xbd\xc4\xe4\x27\x85\x0e\xec\x5e\x2e\xb0\xd7\x07\xe3\x79\x81\xb7\x24\x01\x80\x56\xb9\x25\xe5\x79\x90\xca\xb1\x2e\x41\x9d\xd5\xf3\xaf\x21\x74\x3c\x4c\x8b\xe2\x4e\x2b\xef\x4c\x7b\x64\x4d\xaf\x93\x42\x3d\x5e\xa6\xf8\xe9\xda\xf7\xc5\x05\x66\x5f\x8a\xc2\x77\xce\x7a\x3c\x0c\x5f\x3c\xe4\xf9\xbd\x51\x12\x40\x8d\x32\x95\x27\x0c\xa3\xb8\x4c\x51\x7a\x38\x6f\x75\x6f\xd3\x47\x28\x1f\xf8\xb0\x63\x45\x76\xb7\x0a\xef\x9a\xd3\xc5\x44\xaf\x87\xd0\x1b\xbe\x59\x6f\xb3\xdb\x7e\x22\x9e\xec\x71\x95\x99\x15\x93\x8d\x65\x15\xdb\xa7\xd9\xdb\xfb\xe0\x64\xab\x48\xec\xfc\x79\xfe\xb7\x9b\x0b\x7c\x78\x86\x93\x66\x22\xac\xff\x94\xad\x53\x17\x4b\xe7\x64\xaa\xd6\x5b\xcd\x7a\x94\xc0\x29\xba\x9b\x5b\xb0\x9a\x47\xb9\x63\x96\x4e\xb1\xf1\x11\xe7\xd8\xfe\x88\xd9\x1d\x66\xa1\x4c\xc6\x98\xdd\x30\x7a\xcb\x23\x06\xf6\x5e\x2f\x04\xc6\x2d\xc4\xde\x86\x6d\x52\x5e\x51\x8b\xe7\x87\x54\x86\x40\x67\xd2\x87\xe6\xbf\x46\x3e\x8c\xee\xe2\x9f\x5a\x6f\x4a\xef\xc8\xa4\x20\x5b\x3e\x08\xf9\x20\xfe\x9c\x9c\x93\x3f\x01\x00\x00\xff\xff\xdd\xe5\x14\x40\x14\x04\x00\x00"

func transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
		"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftForwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x55, 0x81, 0x16, 0x4b, 0x2b, 0xae, 0x53, 0xd2, 0x2f, 0x9b, 0x5c, 0x19, 0x9, 0x86, 0x50, 0x66, 0x56, 0xeb, 0xd0, 0x5a, 0xd6, 0x75, 0x68, 0x9e, 0x78, 0xa2, 0x43, 0x74, 0xe7, 0x8e, 0x6}}
	return a, nil
}

var _transactionsScriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x2f\x3a\x14\x09\x82\x7c\x29\x3d\x98\x38\x26\x75\x2b\xe8\xa1\xa2\x04\xb5\xd7\x32\x5e\x8d\xe2\xa1\xeb\x5d\xb1\x3b\x8a\x13\x42\xbe\x7b\x91\x15\xcb\x76\x63\xe8\x1e\x84\x76\x77\xfe\xfc\xde\xdb\x99\xcd\x50\x6f\x24\x22\x9a\x20\x9d\x62\xed\x43\xf0\xbb\x08\x72\xa8\xca\x1a\x6d\xf0\x5b\x10\x8c\xb7\x96\x8d\x8a\x77\x49\x22\xdb\xce\x07\x45\x5a\x79\x57\xf6\xee\x41\xd6\x96\x6b\xff\x87\x5d\x3a\xdd\x7c\x7d\xa2\x6d\x67\xb9\x2a\xeb\xe3\xd9\x77\x56\x6a\x48\xe9\x97\xf0\x2e\xa6\x49\x42\xc6\x70\x8c\x19\x59\x9b\xa3\xed\x1d\xb6\x24\x2e\xa3\xa6\x09\x1c\xe3\x1c\x77\xe3\xcf\x35\xa4\x99\xe3\xe7\x37\xa7\x9f\x3e\xe6\x78\x49\x00\xc0\xb2\x82\x8c\xf1\xbd\x53\x2c\xf0\xc0\x7a\x37\x6e\x0e\xc9\x79\x32\x85\x1d\xa9\xbf\x90\x12\x16\x38\x82\x15\x81\xa3\xb7\x8f\xbc\xf2\x4e\x03\x19\x1d\xb0\xb2\xe1\xac\x0f\x86\xeb\xe7\x8e\xe7\x70\x62\xaf\xf1\x28\xbc\x1b\xb7\xc3\xf7\xe6\x4c\x45\x51\x95\xf5\xea\xac\xc5\x6d\x96\xe7\xa0\x78\x85\xff\xc4\x2d\xf7\x88\xc3\x5a\x2e\xd1\x91\x13\x93\xa5\x43\xe8\xfd\x08\x15\xd0\x78\x8e\x70\x5e\xf1\x86\x89\x77\x25\xf6\x64\xe9\x45\xb1\xf7\xdc\x62\x71\xf0\xa8\x30\xd4\xd1\x5a\xac\xa8\x70\x2c\xc6\xd7\xbd\xf9\xf0\xf2\xef\xe3\x15\xc7\xea\xaf\xb7\xd9\x84\x37\xac\x73\x17\x8b\xae\x5f\x5b\x31\x3f\x48\x37\x53\x54\x7e\x22\x63\xe5\x7b\xdb\xec\xd1\xc7\x5e\x98\xfa\x3f\x8f\xc3\x34\xe6\x9f\x54\x3d\x88\x98\xcd\xf0\x79\x4c\x21\x04\x6e\x39\xb0\x33\x0c\xf5\x20\xc4\x8e\x8d\xb4\x62\xf6\x23\x29\x0e\xba\xe1\xd3\x91\x3c\x58\xf0\x1b\x8b\x73\x1b\xde\xf4\x56\x65\x9d\x49\x93\x5f\x30\x7d\xa8\x37\x79\xcd\x4f\x12\xf5\x7d\xf9\xab\x34\x4f\x5e\x93\xbf\x01\x00\x00\xff\xff\x08\xdd\x96\x13\x27\x03\x00\x00"

func transactionsScriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsBorrow_nftCdc,
		"transactions/scripts/borrow_nft.cdc",
	)
}

func transactionsScriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := transactionsScriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xcc, 0x49, 0x70, 0x34, 0x62, 0x60, 0xa0, 0xc0, 0x2e, 0xb3, 0x11, 0x50, 0xd0, 0xe1, 0x66, 0x97, 0xf7, 0xe9, 0x17, 0x64, 0xfe, 0x84, 0x75, 0x13, 0xd1, 0x82, 0x6b, 0x34, 0x33, 0xde, 0x20}}
	return a, nil
}

var _transactionsScriptsGet_collection_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\xbf\x0a\xc2\x30\x10\xc7\xf1\x3d\x4f\xf1\xa3\x53\xb2\xf4\x01\x8a\xa8\xa0\x76\xb3\x53\x70\x3f\xea\x55\x02\xf9\x53\x92\x2b\x2a\xe2\xbb\x8b\x50\xb0\x9d\x5c\x6e\xf8\xf1\xe1\xbe\x2e\x8c\x29\x0b\xce\x2c\x74\x25\xa1\x8b\xe3\x7b\xc1\x90\x53\x40\xb5\xda\x2a\x35\xcb\xd3\x83\xc2\xe8\xb9\x6b\xed\xcc\x7e\x43\xa5\x14\xf5\x3d\x97\xa2\xc9\x7b\x83\x61\x8a\x08\xe4\xa2\x36\xcd\xfa\x7f\xdd\xb5\xf6\x90\xbc\xe7\x5e\x5c\x8a\x47\x12\xda\xe1\xa5\x00\x20\xb3\x4c\x39\x2e\x1a\xf5\x8d\x65\x4d\x75\x1c\xc4\x3e\x47\x6e\xf0\xbd\x9b\xfd\xc2\x76\xad\xdd\x6a\x63\x40\xe5\x6f\x4f\xbd\x3f\x01\x00\x00\xff\xff\xb1\x9c\x4d\xb5\xf9\x00\x00\x00"

func transactionsScriptsGet_collection_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_collection_dataCdc,
		"transactions/scripts/get_collection_data.cdc",
	)
}

func transactionsScriptsGet_collection_dataCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_collection_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_collection_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0x65, 0x71, 0xe4, 0x18, 0xa1, 0xec, 0x42, 0xe9, 0x76, 0xea, 0xa0, 0x89, 0x8f, 0x83, 0xeb, 0x97, 0xd8, 0x6e, 0x93, 0x33, 0x3a, 0xa8, 0x2c, 0xe3, 0x97, 0xee, 0xac, 0xd4, 0x88, 0xdc, 0x15}}
	return a, nil
}

var _transactionsScriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x6b\xeb\x30\x10\x84\xef\xfa\x15\x83\x0f\xef\xd9\xf0\x70\x2e\x8f\x1e\x42\xd3\x10\x92\x06\x72\x09\xa1\x4d\x4f\xa5\x07\x59\x5e\x27\xa2\xf2\x4a\x48\x6b\xda\x12\xf2\xdf\x4b\x9b\xda\x49\x4b\x75\x5a\xb1\x3b\xdf\xcc\x8c\x46\x23\xdc\x9b\x68\x83\x40\x3c\x76\x24\x58\x2f\xb7\x58\x2d\x12\x2c\x43\x33\xb4\x31\xbe\x63\xf9\x9b\x60\xbc\x73\x64\xc4\x7a\x56\xca\xb6\xc1\x47\x41\xb6\xf6\xbc\xec\x78\x67\x2b\x47\x5b\xff\x4c\x9c\x0d\x9b\xdb\x57\xdd\x06\x47\xeb\xe5\x36\x53\x4a\x1b\x43\x29\xe5\xda\xb9\x02\x4d\xc7\x68\xb5\xe5\x5c\xd7\x75\xa4\x94\xc6\x98\x9d\x86\x7f\x17\x0e\x9b\xae\x72\xd6\x6c\xb4\xec\xc7\x38\xcf\xc5\x18\x8f\x0f\x2b\x96\xab\xff\x4f\x38\x28\x00\x70\x24\x7d\x42\x4c\x3e\xd2\xcf\x4e\x9f\x1e\x5e\xa8\xe1\xec\x0c\xbf\xa3\x06\x93\x5e\x56\x1a\x1d\x74\x65\x9d\x15\x4b\xa9\xac\x7c\x8c\xfe\xe5\xfa\xcf\xe1\x67\xb1\x72\x3e\xc8\x8f\x37\xf9\x27\xb4\x7f\xbf\xa5\x1e\x0e\x0a\x4c\xa7\x08\x9a\xad\xc9\xb3\xb9\xef\x5c\x0d\xf6\x82\x93\x0d\x06\xeb\x37\x34\xd1\xb7\x17\x24\x68\x41\x0a\x64\x6c\x63\xa9\x46\xd0\xb2\xcf\xbe\xaa\x44\x92\x2e\xf2\xf7\x36\xe5\x8e\x64\xb5\x48\x79\xa1\x8e\xea\x3d\x00\x00\xff\xff\xbd\x0f\x9a\x7e\xd0\x01\x00\x00"

func transactionsScriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_collection_idsCdc,
		"transactions/scripts/get_collection_ids.cdc",
	)
}

func transactionsScriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0x82, 0x9f, 0x84, 0xef, 0x6d, 0x1a, 0x4, 0x5d, 0x4f, 0x4b, 0x30, 0x9f, 0x84, 0x8c, 0x59, 0x9a, 0x47, 0x98, 0x70, 0x24, 0xbf, 0x56, 0x75, 0xfc, 0xee, 0x9b, 0x44, 0xad, 0x57, 0x5f, 0xf3}}
	return a, nil
}

var _transactionsScriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xdf\x6a\xab\x40\x10\xc6\xef\x7d\x8a\x39\x5e\x1c\x14\x0e\x3e\x40\xc8\x1f\x42\x4e\x03\x85\x36\x94\x20\xbd\x1f\xd7\x89\x59\xba\xee\xc8\xee\x6c\xd2\x10\xf2\xee\xc5\x58\x4d\x6c\x0b\x9d\x0b\x71\xc6\x6f\x66\x7e\xdf\xa8\xeb\x86\x9d\x40\xbc\x61\xbb\x0e\xb6\xd2\x85\xa1\x9c\xdf\xc8\xc6\x51\xff\xe5\xe1\x1d\xeb\xc6\xd0\x66\x9d\xdf\x6a\xcf\x24\x58\xa2\xe0\xab\xa6\xa3\x8f\xa3\x08\x95\x22\xef\x13\x34\x26\x85\x5d\xb0\x50\xa3\xb6\x09\x96\xa5\x23\xef\x27\xb0\xec\x5e\xd2\x09\x3c\x5a\x81\x73\x04\x00\x60\x48\x00\x95\xe2\x60\x05\x66\x50\x91\x2c\xbb\xa4\xef\x4a\xa3\x41\xa6\xd8\x18\x52\xa2\xd9\xfe\x47\x41\x98\xc1\x8d\x28\x73\xe4\xd9\x1c\x68\xc5\x56\x1c\x2a\x69\x79\x92\xb6\x16\x9c\xa2\xfc\xd4\xd0\x04\xac\x36\xff\xe0\xa0\xe9\xd8\xa5\xed\x73\x3a\xc2\xcf\x36\xeb\x7c\x35\x5a\x31\x4f\xd2\x14\xd0\xff\x81\x5f\x74\x8b\x2b\x62\x1b\x8b\x05\x34\x68\xb5\x4a\xe2\x56\xba\xed\xa0\x1c\x94\x4c\x1e\x2c\x0b\x7c\x62\xc2\xb7\x11\x57\xb2\xf8\x47\xb3\x5b\xda\xc1\xac\xbf\x51\xa6\xb0\xc1\x42\x1b\x2d\x9a\x7c\x56\xb0\x73\x7c\x9c\xfe\x3d\x7f\xfd\x6b\xd9\x6d\xfa\x65\x9e\x0c\x78\x6d\x8c\xaf\x98\x35\xa1\x30\x5a\xbd\xa0\xec\x07\x55\x7a\x67\x63\xc5\xc1\x94\x57\xf4\x6e\x17\x0c\xfb\x4f\xb0\x73\x5c\x43\xd7\x7f\x37\xb5\x37\xe1\x48\x82\xb3\x63\x1f\x59\x45\xf2\x44\xb6\x92\x7d\x92\x46\x97\xe8\x23\x00\x00\xff\xff\x0d\x59\xc7\x16\x74\x02\x00\x00"

func transactionsScriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_collection_lengthCdc,
		"transactions/scripts/get_collection_length.cdc",
	)
}

func transactionsScriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0xe8, 0xde, 0x78, 0xf2, 0xf, 0x47, 0x19, 0x4, 0xbf, 0x1b, 0x55, 0x2f, 0x63, 0x49, 0xae, 0x20, 0x35, 0x9f, 0xf6, 0xa5, 0x32, 0xc2, 0x2f, 0x8d, 0xbd, 0x45, 0x61, 0x6a, 0xe1, 0xb6, 0x87}}
	return a, nil
}

var _transactionsScriptsGet_collection_length_from_storageCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x5d\x8b\xdb\x30\x10\x7c\xf7\xaf\xd8\xfa\xe1\x90\xa0\xf8\x07\x84\x7c\x90\xa6\x0d\x14\xda\x50\x8e\x70\xef\x7b\xf2\xc6\x16\x95\xb5\x46\x5a\x5d\x5a\x8e\xfb\xef\xc5\x9f\x17\xa7\x85\xea\xc1\xd8\xe3\x61\x76\x66\x56\xb6\x69\x39\x08\x9c\xd8\x1f\x93\xaf\xec\xb3\xa3\x33\xff\x24\x0f\x97\xc0\x0d\xe4\xf7\x70\x9e\x8d\xfc\xef\x24\x58\xa2\xe0\x93\xa5\x6b\x1c\xc9\x0b\x6c\x66\x7e\xf9\x85\x4d\xeb\xe8\x74\x3c\x8f\xb4\x77\x20\xcf\x32\x34\x86\x62\x54\xe8\x9c\x86\x4b\xf2\xd0\xa0\xf5\x0a\xcb\x32\x50\x8c\x2b\xd8\x0f\x2f\x7a\x05\x5f\xbd\xc0\x6b\x06\x00\xe0\x48\x00\x8d\xe1\xe4\x05\x36\x50\x91\xec\x93\xd4\xfb\x01\x58\x63\x92\x5a\x7d\xe2\x10\xf8\xfa\x84\x2e\x91\x86\x87\xf1\xd7\x76\x52\xd5\xd9\x2c\x63\xd8\x39\x32\x62\xd9\x7f\x46\x41\xd8\xdc\x78\x2d\x02\x45\x76\x2f\x74\x60\x2f\x01\x8d\x74\x99\x54\x87\xa5\x60\xe8\xfc\xbb\xa5\x15\x78\xeb\x3e\xc2\x8b\xa5\xeb\xf0\xd9\x3d\xd7\x8b\x0a\x8a\xd3\xf1\x7c\x58\x8c\xd8\x2a\xad\x01\xe3\x07\xf8\x0f\x6f\xd7\x5b\xec\xce\x6e\x07\x2d\x7a\x6b\x54\xde\x51\x1f\x07\x53\x01\x4a\xa6\x08\x9e\x05\x46\x9b\xf0\x97\x44\xef\x2c\xff\x67\xd8\x47\xba\xc0\x66\xea\xb0\x88\xc2\x01\x2b\x2a\x9e\xfb\xd6\xd6\x0f\xaf\xf7\x3b\x2f\xde\x85\xdf\xb6\x6a\x76\xd6\x9d\x6e\xa1\xab\xbb\x1a\x27\xc1\x1f\x28\xf5\x4c\xd6\x37\x41\x0e\x9c\x5c\xd9\x9b\x1f\x46\x42\xa0\x0b\x05\xf2\x86\x40\xf8\x46\x6c\xb8\x2e\xa3\xda\x94\x24\x90\xa4\xe0\x97\x61\x8a\x8a\xe4\x1b\xf9\x4a\x6a\xa5\xb3\xb7\xec\x4f\x00\x00\x00\xff\xff\xff\x54\x7d\x90\xd2\x02\x00\x00"

func transactionsScriptsGet_collection_length_from_storageCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_collection_length_from_storageCdc,
		"transactions/scripts/get_collection_length_from_storage.cdc",
	)
}

func transactionsScriptsGet_collection_length_from_storageCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_collection_length_from_storageCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_collection_length_from_storage.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x49, 0xf, 0xf9, 0x9f, 0x53, 0xae, 0x86, 0x7, 0x0, 0x95, 0x20, 0x95, 0x33, 0x36, 0xde, 0xf2, 0xcc, 0xa3, 0x64, 0x3, 0x2f, 0xa4, 0xfe, 0xe, 0x64, 0x28, 0x3b, 0x36, 0x94, 0x1e, 0x12}}
	return a, nil
}

var _transactionsScriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\x4d\x6b\xf3\x30\x0c\xbe\xfb\x57\xa8\x39\xbc\x24\x50\xf2\x03\x4a\xd3\x52\xfa\xb2\xdb\xc6\xd8\xca\xee\xaa\xac\x76\x06\xd7\x2e\xb2\xd2\x32\x4a\xff\xfb\x70\xdc\xaf\xb1\xc3\x74\x08\xd1\x13\x3d\x1f\x52\xdc\x6e\x1f\x45\xa1\x7a\x66\x45\x8b\x8a\x1f\x8e\x8f\xa9\x32\x57\x38\xb7\x6f\x9c\xa2\x3f\xb0\x54\xc6\x20\x11\xa7\x54\xa3\xf7\x0d\x6c\xfa\x00\x3b\x74\xa1\x46\x6b\x65\x02\x0b\x6b\x85\x53\x1a\x43\xc0\x1d\x4f\xe0\x5d\xc5\x85\x6d\x93\x5f\xa2\xe0\x96\x5f\x51\x3f\xe7\x70\x32\x00\x00\x9e\x15\x14\x3a\x58\x7d\xed\x79\xfa\xc3\xb8\x7d\x79\x5a\x2d\xa3\xf7\x4c\xea\x62\xf8\x8f\x8a\xb3\xba\xb9\x71\xd6\x51\x24\x1e\xd9\x2e\x63\x50\x41\xca\x12\x5b\xd6\x05\x51\xec\x83\x0e\x31\x9a\x96\x2e\xdf\x52\x5b\xa6\xa7\xff\x4e\x8f\x3b\x9c\x67\x75\xc9\x97\x9f\x45\x39\xd7\x7c\x0e\x7b\x0c\x8e\xea\xea\xca\x07\x8a\xbd\xb7\x10\xa2\xc2\x9a\x6f\xce\x55\x63\x6e\x69\x0e\x8e\x8f\xd0\xfd\x0a\xd5\x4a\xb1\xba\xf6\xd9\xbd\xce\x58\x2f\xc4\x79\xe3\x09\x04\xe7\xc7\x03\xbd\xb4\x5a\x72\xb8\xcd\x45\xb2\xcb\x03\x97\x53\xe5\x12\xd6\x5e\x42\x06\x07\xe8\x7c\x8f\x40\x16\xba\x81\x34\x02\x4c\x23\xf8\xe3\x94\xe6\x41\x8c\x6c\x9b\xee\x3f\xc6\x9c\xcd\x77\x00\x00\x00\xff\xff\x67\xf6\xa7\x43\x08\x02\x00\x00"

func transactionsScriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_contract_storage_pathCdc,
		"transactions/scripts/get_contract_storage_path.cdc",
	)
}

func transactionsScriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0xf9, 0xcc, 0x3a, 0xae, 0xcb, 0x3c, 0x60, 0x5c, 0x28, 0x64, 0xe7, 0x97, 0xe1, 0xfe, 0xeb, 0x6, 0xbb, 0xf6, 0x60, 0xd4, 0xb2, 0x7, 0xd6, 0x1b, 0x52, 0x8b, 0x8d, 0x18, 0x66, 0x14, 0x91}}
	return a, nil
}

var _transactionsScriptsGet_contract_viewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x31\x4f\xc4\x30\x0c\x46\xf7\xfc\x8a\x4f\x9d\xda\xa5\xdd\x6f\x45\xb0\xc1\x54\x58\x10\x83\xe5\xba\xd7\x88\x34\x89\x6c\x17\x38\x21\xfe\x3b\x0a\x42\x70\xab\xad\xf7\xbe\x37\x4d\x13\xe6\x2d\x1a\x8c\x35\x56\x07\x6f\xc2\xaf\x06\x4a\x09\xbe\x09\xec\xa8\xb5\xa8\xcb\x82\xb7\x28\xef\x86\x55\xcb\x1e\x1a\xd3\x9e\xb7\x1f\xb4\xd7\x24\x0f\x77\x33\xb8\x64\x57\x62\x1f\xf1\x68\xb2\x60\x2d\x0a\x17\xf3\x98\xcf\x28\x39\x5d\xc6\x10\xe2\xde\x44\xe8\xfe\xa1\xee\xef\x76\x2f\x4e\x0b\x39\x3d\xb5\x8d\x2e\x04\x62\x16\xb3\x9e\x52\x1a\xb0\x1e\x19\x3b\xc5\xdc\x0f\x27\x3c\xcf\x97\x2a\x2f\xf8\x0c\x00\xa0\xe2\x87\xe6\xab\x88\xf1\x2c\x7e\xf3\xdb\xf1\x63\xea\x55\xac\x1c\xca\xd2\xb0\x13\x72\x4c\x43\xf8\x0a\xdf\x01\x00\x00\xff\xff\xa2\xd2\xe3\x3a\xf2\x00\x00\x00"

func transactionsScriptsGet_contract_viewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_contract_viewsCdc,
		"transactions/scripts/get_contract_views.cdc",
	)
}

func transactionsScriptsGet_contract_viewsCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_contract_viewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_contract_views.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0xae, 0xdb, 0xf6, 0x4a, 0xa3, 0xd1, 0x47, 0x47, 0x29, 0xb9, 0xcc, 0x89, 0xcc, 0x1e, 0xb4, 0x54, 0xd6, 0x81, 0xb9, 0x23, 0x25, 0xc7, 0x10, 0xb9, 0x8a, 0xee, 0xbe, 0x9c, 0xfb, 0xe8, 0xa2}}
	return a, nil
}

var _transactionsScriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x4d\x6f\xdb\x38\x13\xbe\xfb\x57\x4c\x7c\x78\x61\x01\x7d\x95\x3d\x2c\xf6\x60\x54\x0d\xba\x4d\xb2\x28\x90\x1a\x45\xe2\xee\xa5\xe8\x81\x96\x46\x0e\x11\x9a\xf2\x92\x54\x53\x23\xc8\x7f\x5f\x90\x94\x44\x52\x22\xad\xec\x1e\x36\xd6\xcc\x33\x33\xfc\x98\x87\x33\xd3\xcb\xcb\x4b\xd8\x3e\x52\x09\xb2\x14\xf4\xa8\x60\x8f\x4a\x02\x61\x0c\xd4\x23\xc2\x4f\x8a\xcf\xff\xdf\x11\x89\x15\x1c\x50\x91\x8a\x28\x02\x44\xca\xa6\xa4\x44\x61\x05\xcf\x54\x3d\x1a\x9c\x3c\x62\x49\x6b\x8a\x15\x6c\x6e\xb7\x0b\xed\x92\xf0\x0a\x04\xaa\x56\x70\x09\x54\x01\x91\x40\x40\x52\xbe\x67\x08\x52\x89\xb6\x54\x8b\x05\x3d\x1c\x1b\xa1\x60\x79\xf3\x8b\x1c\x8e\x0c\x37\xb7\xdb\xe5\x20\xfb\xd2\x45\xfb\x9b\xe2\xb3\x5c\x2e\x16\xa4\x2c\x51\xca\x15\x61\x2c\xeb\xec\x75\x24\x78\x59\x00\x00\xf8\x4a\x86\x0a\x38\x39\xe0\x1a\x1e\x94\xa0\x7c\x1f\x05\x54\x68\x37\x4b\x1b\x7e\x16\xa7\x1e\xdb\xc3\x8e\x13\xca\xce\xa2\x9a\x67\x8e\x62\x0d\x1f\xab\x4a\xa0\x94\x71\x47\xa7\xe3\xf9\x15\x89\xe6\x44\x98\xa2\x28\xd7\xf0\x3d\xd8\x7b\x7e\x6f\x34\xa7\x1f\x51\x33\xfc\xa5\x50\x70\xc2\xbe\xdd\xdf\x9d\x75\x2f\x51\x50\xc2\x36\xed\x61\xa7\x57\xfa\xed\x33\x57\x7f\xfc\x1e\x05\x96\x0d\x63\x58\xea\x83\xf9\xda\xee\x18\x2d\xbf\x12\xf5\xb8\x06\xf7\x7b\xc6\xe8\x41\x35\x82\xec\xd1\x5a\x79\x1f\x6f\x8a\x75\x76\x07\x63\xf0\x1d\xe5\x4f\x58\x6d\xe7\xce\xd5\x99\x6d\xe6\x92\xc2\x41\xaf\xdf\x98\x1e\xce\xe2\xe6\x8d\xf7\xe0\x9d\xd4\x3f\x2d\x11\xf8\xf9\x40\xf6\x6f\x5d\xd5\x9f\x84\x73\x14\xff\xc5\xe2\x41\xf3\x94\xc9\x35\xbc\x58\x78\x6f\xf6\x1a\xcf\xa5\x8a\xda\x1d\x87\xf9\x77\x63\xc5\xf1\xb4\x16\x84\x2a\x39\xb6\xd8\x1a\x69\xd4\xe0\x80\x15\x25\x13\x83\x2f\x46\x7a\x15\xb5\x60\xb4\x44\x2e\x71\x6c\x72\x67\xc5\x57\x0b\x63\x44\x39\x55\x2b\xf3\x4b\xff\xe7\xd3\xff\xdd\x20\x8d\x70\xde\x29\x27\x44\x77\xaa\x90\xdd\x4e\xce\x6b\xe5\x67\x9f\x53\xcc\x53\xd9\x61\x23\xfc\x75\xca\x18\x69\x9d\x76\x8e\xa9\x31\x64\x8a\x9e\x69\xaf\xd3\x55\xcd\x13\x31\x86\xdd\x44\xef\xe4\x2c\xe5\x62\xb0\x08\xcf\xa2\xfb\x9c\x92\x2b\x06\x8b\x30\x2a\xea\x2d\x45\x23\xef\x1e\xcf\x72\xc7\xcb\xb3\x33\x84\x71\xa8\xb3\x2c\x71\xb0\x39\x6a\x68\x4c\xd6\x95\x48\x9b\x4f\xac\xce\x35\x39\xa0\x30\x1c\x09\x15\x1e\x3f\xa0\xf0\xd9\x12\xc2\x06\xa6\x40\xe1\x58\x13\x42\x0c\x63\xa0\xb0\xcc\x19\x59\x9f\x8e\x26\xba\xe5\x4e\xa8\x1b\x78\x03\x85\xe3\x50\x08\xf1\xe8\x02\x85\x4f\x9e\x10\xe6\x13\x07\x8a\x80\x47\x21\x30\xc6\x21\x28\xa2\xd4\x4a\x19\x7a\x2c\x0a\x2c\xc7\xc5\x2f\x19\x33\x12\xef\xbc\x81\x23\x5c\xc4\xd4\x29\x53\x4e\x36\x36\x01\x42\x41\x0a\x7c\x1d\x24\x45\x54\x9e\x32\xbd\x09\xee\x2a\x2a\x4f\x9e\xa9\xa3\x6f\x78\xa6\x4e\x9e\x32\xf5\x28\x1d\x98\x7a\xf2\x64\x54\x4b\xf3\x30\xa2\x95\x8d\xb2\xd0\xb2\x5a\x67\xa0\x57\x1b\x5d\x8e\x1b\x36\x6b\x7a\xb8\x3a\x38\x28\x2d\xb5\xa1\xe8\x38\x1e\x2a\x3b\x42\x43\xd1\x53\xdb\xa8\x5f\x17\xaf\x61\xff\x5b\xb7\x1c\x0e\x84\xf2\x15\xb1\x35\xc9\x15\x27\xa0\x55\x5f\x28\xb2\xb5\xd7\x20\xeb\x42\x4a\xca\xb2\x69\xb9\x82\x42\x77\xf8\x1f\xed\x47\xef\x21\x5b\x0c\x30\xef\x8e\x75\xb3\x5f\x80\xeb\xce\x73\x81\xb2\x61\x3f\xf1\x53\xc3\x95\x20\xa5\xd2\xcf\xcd\x4a\xcb\x5a\x51\xa2\x2d\x00\x9c\xb2\x77\x66\x68\xb0\x9f\xfa\xff\xef\xc3\xd7\x69\x73\xbb\xfd\x14\x84\xf8\xb0\xca\x32\x20\xf2\x02\x66\x70\x57\xc3\x59\x5d\x5d\xc1\x91\x70\x5a\xae\x96\x1a\x7a\x6f\x17\x25\xa0\x6a\x50\x02\x6f\x14\x74\xcb\x84\x89\x0b\xb3\xb2\x65\x66\x1c\x45\x36\x0c\x45\x7f\x48\x79\x49\x8e\x64\x47\x19\xd5\x4f\x50\xbe\x6b\x84\x68\x9e\xdf\xff\xcf\x3b\x09\xe7\xf7\x83\xeb\x3b\x20\xac\x68\x44\x91\xfc\x38\x7d\x3f\x32\x6f\xfd\x9f\x9a\x96\x55\x66\xcd\x36\x06\x10\x10\x58\xa3\x40\x5e\x22\xa8\xc6\x8c\x56\xce\xe3\xd2\xbb\x26\x5e\xab\x20\x51\xbb\x45\x6e\x6e\xb7\x2b\x5a\x65\x91\xa3\x9a\x0b\x45\xb8\xc9\x97\x61\xa2\xdb\xd3\x9f\xc8\xe1\xf3\x75\x1f\xf4\xf2\x12\xfe\x32\x13\x11\xc2\x8e\x48\x5a\x42\x45\xe5\x91\x91\x13\x50\x5e\x37\xe2\x40\xcc\x01\xd6\x8d\x00\xa5\x67\x49\x3d\x05\xf6\x4b\xed\x81\xc5\xe8\x86\xf7\xa8\xae\xad\x6a\xc5\x6b\x95\x5d\x4c\xe2\xd8\x22\x10\x8b\xd0\x2f\xcf\x0f\xd3\xa1\xb5\xef\x58\xa8\xfb\xbe\xa2\xf8\xc1\x46\x23\x54\xcc\xce\x7b\xae\xc6\x96\xde\x5d\xa7\xb7\x18\x26\x61\xb0\x5f\xef\x2e\x1d\x24\xb5\xfe\x49\x32\x8f\x57\xc3\x6b\xd5\xb5\x1b\x29\x17\x9d\x5a\x8e\xc2\xfb\xe5\x31\x65\xfa\x60\x30\xe3\x90\x61\x6b\x6c\xeb\xba\xad\xfe\x17\x79\xf7\xb2\x04\xbb\xdc\x0e\xd5\x5f\xfb\xd4\x5f\xab\xe8\xcb\x93\x6c\xb8\xa0\x80\x17\x3b\xbc\xe8\x3c\x78\x42\x9d\x1b\xd3\x6b\xc8\xa5\xb5\xcf\x9f\xf0\x24\xbd\xfe\x67\x12\xe0\xfb\x13\x9e\x7e\x84\x75\x2d\xf4\x60\x00\x17\x79\x2b\x58\xf7\x12\x0f\x8b\x1d\x1e\xf9\xc9\x51\xd9\x66\x6e\x7c\x54\xc3\xbb\x3f\xc1\xdb\xb6\xce\xe0\x07\xb4\x2b\x04\x13\x78\xd7\xdd\x59\xbc\x31\xb0\xff\xca\xa2\xb9\x30\x1e\x81\x3a\xe6\x99\x9e\x2f\x31\x08\xf5\x10\x4f\x18\x9d\x8a\x7a\xdc\x20\xca\x5b\x41\x57\xd9\x64\x4c\x32\x7f\x22\x43\x52\xf7\x23\xa7\x15\x72\x45\x6b\xea\x83\xbc\x81\xc9\x23\x71\x48\xda\x2c\x31\x33\x79\x1f\xfa\x9a\x52\xc3\xd3\x38\xc7\x73\x6e\x7e\xce\x4d\x53\x13\x66\x7a\x0f\xfa\xec\x7c\x35\x35\x96\x6f\x9b\xb8\x52\x51\x9d\x30\x7a\x8c\xe7\x06\xb3\x94\x4b\x87\x99\x71\x69\xe7\xb7\x29\x51\xc2\xd4\x4a\xcc\x73\x53\xb3\x68\xba\x25\xc6\xbc\xa9\x75\xf2\xd2\x13\x13\x60\x84\xdf\x4e\x9d\xd7\x94\xe1\x38\x9b\x13\x33\xe2\xd4\xd1\xce\xa9\x67\x1c\x0d\x8f\xda\x44\x14\x19\x23\xc3\xc7\x3c\xd7\x15\xf0\x8e\x4a\xf5\xfd\xb7\x1f\xd3\x59\x52\xc5\xa7\x47\xfb\x67\x3a\x2d\xfa\xad\x65\xb6\x78\x5d\xfc\x1b\x00\x00\xff\xff\xbc\xc6\x0b\x5e\x00\x16\x00\x00"

func transactionsScriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_nft_metadataCdc,
		"transactions/scripts/get_nft_metadata.cdc",
	)
}

func transactionsScriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0x56, 0xf8, 0xa7, 0xd7, 0x14, 0x36, 0x75, 0x3d, 0x9e, 0x30, 0xf1, 0x4, 0x14, 0xe3, 0x16, 0xd5, 0x28, 0xa4, 0x5c, 0x6f, 0xc, 0x92, 0xcc, 0x7e, 0x68, 0x33, 0xc7, 0x57, 0x5e, 0x56, 0xc2}}
	return a, nil
}

var _transactionsScriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xcd\x6e\xdb\x38\x10\xbe\xeb\x29\xc6\x39\x2c\x2c\x20\xd0\x69\xb1\x07\xa1\x6a\xd1\x4d\x13\xa0\x40\xd7\x28\x12\x77\x2f\x45\x0f\xb4\x34\x76\x06\xa1\x29\x2f\x49\x25\x35\x82\xbc\xfb\x82\x92\x25\x92\x16\x29\x39\x39\x04\xe6\xcc\x37\x3f\x9a\xf9\x86\x1c\xda\x1f\x6a\xa9\xe1\xea\xf6\x37\xdb\x1f\x38\xae\xee\xd6\x57\x49\x2f\xfb\x07\x35\xab\x98\x66\xff\x12\xbe\x28\x2b\x36\xc7\x7b\x54\x35\x7f\x46\x79\x95\x24\xac\x2c\x51\xa9\x25\xe3\x3c\x05\xa5\x65\x53\x6a\x58\xdd\xad\x0d\x08\x5e\x13\x00\x00\x17\xc0\x51\x03\x55\x39\xfc\xf8\x2a\xf4\x5f\x7f\x06\xd5\x4d\x33\x03\x10\x6c\x8f\x39\x3c\x68\x49\x62\x17\x04\x54\xa8\x4a\x49\x07\x4d\xb5\x98\xc4\xe9\xc7\x66\xbf\x11\x8c\xf8\x24\x4a\xd6\x47\xc6\x35\xa1\xca\xe1\xa7\x57\x91\xec\xbe\xd5\x1c\x7f\x05\xcd\xf0\xb7\x46\x29\x18\xff\x71\xff\x6d\xd2\x7d\x59\x73\x8e\xa5\xc9\xf5\x7b\xb3\xe1\x54\x7e\x67\xfa\x31\x07\xfb\x7b\xc6\xe8\x41\xd7\x92\xed\xb0\xb3\x72\x0e\x17\xc5\x7a\x57\x62\xdf\x48\x3c\x61\xb5\x3e\x1e\xa6\x8b\x6f\xcd\x56\x73\x7d\xb2\xd0\x2f\x17\x76\xcc\x5a\xdc\xbe\xbb\xbc\x0f\xff\x35\x4c\xe2\xd7\x3d\xdb\x5d\x9a\xd5\xdf\x4c\x08\x94\xef\xb1\x78\xa8\x4b\x62\x5c\xe5\xf0\xda\xc1\x7b\xb3\xb7\x30\xff\x24\x23\xad\x72\xf0\x59\xb5\x6e\xa5\x49\x6b\x41\x82\xf4\xb2\xfd\xd5\x9e\x86\xb9\xb8\x1e\x64\xee\xb4\x58\xa9\x3b\x22\x56\x1a\x98\x0b\xab\x1c\x0d\x83\x55\xcd\x4f\x80\xc5\x06\x68\x6f\x95\x73\x5c\x0f\x21\x63\x04\x8f\x7b\x9d\x8f\x3b\xa6\x72\x08\xbb\x0a\x16\x71\x92\xb4\x21\x58\x80\xa9\xc1\xef\x1c\xd3\x33\x04\x0b\x70\x32\xe8\x2d\x46\x44\xa7\xe1\x53\xec\x33\x80\xf4\x74\x7f\x9b\x3f\x85\x7c\x9b\x51\x05\x05\x50\xe5\x0b\x0d\x01\xa1\x68\x79\xe8\x2b\x0c\x07\xa1\x68\xa9\xe8\x2b\x1c\x1a\x42\xe1\x92\xd2\x87\x0d\x84\x84\xc2\x92\xd3\x87\x0c\xc4\x84\xc2\x92\xd4\x87\x38\x7c\x84\xc2\x65\xa7\x0f\x0b\x31\x13\x8a\x20\x61\x63\x86\x0e\x37\x3d\xcb\xf3\x4b\x39\x1a\x33\x10\x6f\xda\xc0\xd2\x38\x60\x6a\x95\x31\x27\xab\xae\x41\xbe\x20\x06\xfe\xe2\x35\x2d\x28\x8f\x99\xde\x7a\x2d\x08\xca\xa3\x35\xb5\x43\xe1\xd7\xd4\xca\x63\xa6\xce\xa0\x78\xa6\x8e\x3c\x1a\xb5\x1b\x1e\x3f\x62\x27\x3b\xa3\x68\x3b\x2c\x86\x9f\x76\x6a\xde\x92\x37\x7f\x27\xda\x36\x02\xf6\x8c\xc4\x92\x55\x95\x44\xa5\x72\xf8\xdc\xfd\xb8\x76\x2e\xf4\x34\x3f\x5b\x9a\xcc\xfb\xc0\xca\xb2\x6e\x84\x86\x02\x76\xa8\x3f\x77\x87\xde\x4b\x9a\x0c\x30\xa7\x19\x4c\x33\x28\xc0\xee\x72\x99\xec\xf6\xb4\x9b\x5a\x68\xc9\x4a\x6d\x02\x2c\x8d\xac\x91\x25\x76\xf7\x9f\x20\x7e\x0d\xcf\x84\x2f\xdd\xd1\xfc\xff\xe0\x5f\x09\xab\xbb\xf5\x8d\x17\xe2\xe3\x32\x4d\x81\xa9\x05\xcc\xe0\x3e\x0d\xd5\xfa\xf4\x09\x0e\x4c\x50\xb9\xf4\x96\x47\xa8\x6a\x54\x20\x6a\x0d\xa7\x34\x61\xe4\xa2\xcd\xec\x2a\xf8\xb1\x50\xf4\x05\xca\x4a\x76\x60\x1b\xe2\x64\xc6\x3f\xdb\xd4\x52\xd6\x2f\x1f\xfe\x70\xaa\x60\x7d\x7e\xb4\xaf\xa9\x7f\x61\x9a\x60\xd9\x61\x3c\xe4\xa9\x93\xfb\x4d\xdd\xf0\xaa\xcd\xb7\x8b\x01\x0c\x24\x6e\x51\xa2\x28\x11\x74\x0d\xfa\x11\x1d\x8f\x6e\xd6\xcf\xee\x57\xbb\xb4\x3a\x65\xeb\x56\x65\x69\x58\x41\xd5\x64\x60\xd9\xfb\x7a\x21\xfd\x08\x3b\x7a\x46\x01\x54\xb9\x11\xc5\xb6\x6d\x36\x14\x67\x4d\xda\xa1\x3e\x11\xed\x14\xe7\xda\x4f\x2e\xf7\x8e\xc1\xc2\x47\xdf\x16\x28\xe0\xb5\xdb\x74\xb6\xb5\x84\x27\x3c\x02\x89\x3e\x11\xf7\x2a\x21\x75\xe0\xec\xb8\xc8\x54\xe7\x28\x7b\xc2\xa3\x72\xde\x9a\x51\xa4\x9f\x4f\x78\xfc\x65\x9e\x92\x59\x57\x2d\x72\x91\x35\x92\x9f\x66\xb1\xcb\x5f\xa2\x6e\xa4\xe8\x27\xcc\x5f\xa8\x7a\xa7\x54\x9d\x2f\x55\xbd\xc6\x9c\xce\x57\xab\x5e\x57\xf5\x09\x18\x71\x64\xd3\x1a\x61\x1d\x6d\x70\xff\x1a\x19\x0c\xba\xac\x91\xb4\x4c\x83\x9b\x59\x6f\x34\x88\x16\xa6\xd7\xf7\xfd\xc9\xb5\xf2\x76\xb4\xde\xce\x11\xb6\x05\x9c\xdb\xda\x02\xcd\x60\x9a\x2d\x9c\x19\x9a\xdd\xe6\x62\x2e\xd4\x65\x5b\xde\x74\x06\x76\xe6\x33\xaa\x50\x68\xda\x12\xca\xcb\x56\xc2\x69\xc7\x16\x39\xe3\x78\xe5\x31\x25\x40\x5a\x9f\x33\x91\xc5\x72\xc2\x3e\xc8\xa3\xc8\xe2\x39\xe1\xc6\xe9\x7c\xac\xf1\xde\x72\x3a\x35\x86\x16\x97\x6d\x89\xe3\x39\x5f\x23\x7b\xec\x84\xc7\x8d\xc5\xcd\x78\x1c\xae\xa5\x91\x68\xbc\xf3\xf6\x01\xbb\xf3\xa2\x03\xa4\xc9\x5b\xf2\x7f\x00\x00\x00\xff\xff\xda\x82\x25\x02\x0f\x11\x00\x00"

func transactionsScriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_nft_viewCdc,
		"transactions/scripts/get_nft_view.cdc",
	)
}

func transactionsScriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x9a, 0x39, 0x5e, 0x7a, 0xc6, 0x87, 0x9a, 0xd2, 0xc9, 0xab, 0xe6, 0x93, 0x72, 0x88, 0x66, 0xa1, 0xcf, 0x5, 0x78, 0xb6, 0xf0, 0x9a, 0xa0, 0x93, 0x27, 0x77, 0xc9, 0x45, 0x8e, 0x72, 0x67}}
	return a, nil
}

var _transactionsScriptsGet_viewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xc1\x6a\xdb\x40\x10\xbd\xeb\x2b\x5e\x75\x28\x12\x04\xf9\x52\x7a\x30\x71\x4c\xea\xd6\xd0\x43\x4d\x09\x4a\x2f\xa5\x87\xf1\x6a\x24\x2f\x59\xef\x8a\xdd\x91\x53\x13\xf2\xef\x65\x25\x47\x8a\xda\x40\xf7\x20\xb4\xbb\x33\xef\xbd\x79\xfb\x16\x8b\x05\xca\x83\x0e\x08\xca\xeb\x56\xa0\x0e\xac\x1e\x02\xc8\x18\xc8\x81\x11\xba\xb6\x75\x5e\xb8\xc2\x49\xf3\x63\x40\xed\xdd\x31\x89\x3d\x84\x46\x9f\xd8\x62\xb7\x2d\x0b\xdc\x07\xae\x50\x3b\x0f\xe1\x20\xda\x36\x70\xd6\x9c\x8b\x24\xd1\xc7\xd8\x8c\x74\xe7\xec\xb6\xb3\x8d\xde\x1b\x2e\xdd\x03\xdb\x74\xbc\xf9\xc6\x42\x15\x09\xfd\x88\xe8\xd3\xf1\x97\xdf\x74\x6c\x0d\xef\xb6\x65\x9a\x24\xa4\x14\x87\x90\x91\x31\x39\xea\xce\xe2\x48\xda\x66\x54\x55\x9e\x43\x58\xe2\x76\xf8\xb9\x82\xae\x96\xb8\xff\x6a\xe5\xe3\x87\x7c\x89\x9f\xe5\xb9\xe5\x5f\x78\x4a\x00\xc0\xb0\x80\x94\x72\x9d\x15\xac\xd0\xb0\xdc\x0e\x9b\x17\x90\x3c\x19\xcb\x94\x33\x86\x95\x68\x67\x3f\x93\x10\x56\x98\x94\x14\x9e\x83\x33\x27\xde\x38\x2b\x9e\x94\x44\xc9\x59\x3c\xeb\xbc\xe2\x48\xb7\x84\xd5\xe6\xaa\x37\x6a\xd8\xc6\xef\xf5\x6c\xc2\x62\xb7\x2d\x37\x33\x8a\x9b\x2c\xcf\x41\xe1\x1d\xfe\x53\xb7\xee\x25\xc6\xb5\x5e\xa3\x25\xab\x55\x96\xc6\xd2\xbb\x41\x94\x47\xe5\x38\xc0\x3a\xc1\x45\x26\xfe\x81\xe8\x95\xa5\x79\x0f\xf4\xc6\xc0\x77\x5c\x63\xf5\xe2\x53\xa1\xa8\xa5\xbd\x36\x5a\x34\x87\x62\xef\xbc\x77\x8f\xd7\xef\x9f\xfe\x7e\xc8\x62\x62\x78\xbe\xc9\x46\x89\x71\xcd\x9d\x2c\xda\x6e\x6f\xb4\xfa\x4e\x72\x18\xab\xf2\x57\xa3\x6c\x5c\x67\xaa\x5e\xfe\xc0\x85\x91\xff\xdc\x67\x0e\x43\xff\x2b\xd4\xf4\xf2\x6a\x8b\x05\x3e\x0d\x2d\x04\xcf\x35\x7b\xb6\x8a\x21\x0e\x84\xd0\xb2\xd2\xb5\x56\xd1\x0a\x68\xdb\x07\x7a\x02\x18\x2d\xb0\x75\x8c\xc5\xcc\x88\xcb\xc4\xbb\x6d\x99\xe9\x2a\x7f\xc3\xfa\x49\x6f\x13\xc3\x35\x67\x8e\x3c\x31\xba\x43\xa3\x67\xe9\xbc\x8d\x2c\x45\xc3\x7d\x6a\x42\x96\x27\xcf\xc9\x9f\x00\x00\x00\xff\xff\x96\xf3\xba\x0a\x7a\x03\x00\x00"

func transactionsScriptsGet_viewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsScriptsGet_viewsCdc,
		"transactions/scripts/get_views.cdc",
	)
}

func transactionsScriptsGet_viewsCdc() (*asset, error) {
	bytes, err := transactionsScriptsGet_viewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/scripts/get_views.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4f, 0xa6, 0xb6, 0xdf, 0x85, 0xc8, 0x47, 0xf1, 0x60, 0x12, 0x86, 0x49, 0x38, 0x9, 0x73, 0x9f, 0xdd, 0x66, 0x1b, 0xdd, 0x9a, 0xc6, 0xa4, 0xa4, 0x52, 0x24, 0x19, 0xb4, 0x6b, 0x66, 0x1e, 0x62}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\x41\x6f\x1a\x31\x10\x85\xef\xfb\x2b\x5e\x38\x44\x8b\x44\xe0\x1e\x91\xa4\x2d\x0d\x52\x0f\x45\x51\xb2\xcd\x7d\x58\x86\xac\x55\x63\x5b\xf6\x18\x8a\xa2\xfc\xf7\xca\xbb\x61\xd9\x25\x34\xf5\x01\xb1\xf6\xcc\xf8\x9b\xf7\xc6\x93\xc9\x04\x45\xa5\x02\xc4\x93\x09\x54\x8a\xb2\x06\x2a\x60\x57\x91\x80\x0c\xa8\x2c\x6d\x34\x82\x9d\x8d\x7a\x05\x1f\x4d\x96\x32\xc4\x22\xb0\x40\x49\x60\xbd\x46\x74\x69\xc3\x73\xc9\x6a\xcb\x58\xcc\x8b\x90\x65\x6a\xe3\xac\x17\x0c\x16\xd6\xcc\xa3\x79\x51\x4b\xcd\x85\xfd\xcd\x66\xd0\x9e\xdc\xff\xa1\x8d\xd3\xbc\x98\x17\xc7\xbd\x9f\x2c\xb4\x22\xa1\x67\xc5\xbb\x30\xc8\xb2\x2e\xd4\x6b\x96\x01\x80\xf3\xec\xc8\x73\x1e\xd4\x8b\x61\x7f\x0d\x8a\x52\xe5\xdf\xac\xf7\x76\xf7\x4c\x3a\xf2\x08\x3f\x42\x88\xfc\x24\xd6\xd3\x0b\xcf\xc8\xd1\x52\x69\x25\xfb\x99\x35\xe2\xad\xd6\xec\x47\x78\x88\x4b\xad\x42\x75\x3c\x1c\xe1\x89\xb6\xfc\x9e\xff\xcb\xb8\xd3\xf3\x21\x2e\xbf\x36\x42\x0c\xf1\x5a\x63\xa4\xd5\xfe\xd1\x2c\x28\x53\xed\x9a\xf4\x3b\x09\xe1\x06\xc7\xfe\xc6\x9e\x83\xd5\x5b\xae\x11\xa8\x94\xd4\x5d\x9e\xf6\xa2\x2f\xb9\xd8\x3b\xbe\x86\x51\x7a\x84\xad\xe2\x5d\xf3\x99\x7e\xa7\x3d\x31\xc6\x8b\x79\x31\xeb\x5d\x71\x9b\x0f\x87\xa0\x70\x81\xff\xc4\xdd\xb5\x98\x69\xdd\xdd\xc1\x91\x51\x65\x3e\x48\xe1\x8f\x0d\x98\xc7\xca\x72\x80\xb1\x82\x77\x54\x7c\x28\x53\xd3\x0d\x86\x59\x5b\x6d\x32\xc1\x23\x4b\xf4\x06\x4c\x5e\xef\xa1\xd6\x90\x8a\xdb\x81\x21\xed\x99\x56\x7b\x54\x14\x40\x1d\x75\xda\x7c\xb5\x46\xe3\xe1\x38\x34\x5e\x8d\x97\xb5\x8b\xd3\xcb\x8e\x72\x47\x86\xdb\x7c\xed\xed\xe6\xfa\x44\xe7\x43\xee\x03\x49\x35\xc4\xc5\x4d\x12\xb2\xe3\x50\x5a\xbe\x86\x6c\xb7\xde\x7a\x1d\xcc\x3c\x93\x30\x08\x86\x77\xe0\x8d\x93\xfd\x39\xd4\xbe\xbf\x98\x5e\x75\xcd\x2d\xeb\x12\xf7\x29\xf7\x48\x9b\x9b\xb5\x74\xac\xfc\xd2\x89\x5f\xcc\x8b\x64\x5d\x0f\x23\xd0\x96\xa1\x24\x3d\xa3\x8e\x86\x6d\xc4\x89\x4e\x29\x3a\x9f\x5e\x1d\x89\x46\x10\xfb\xa9\x32\xbd\xcb\xca\x43\xcf\xf5\x98\x97\x28\xdb\x31\xc7\xda\xfa\x1a\xe0\x8c\x06\xef\x0c\x6d\xb0\xe2\x30\x8e\x87\x97\x92\x9f\xdc\xdd\x54\x6e\xae\x3e\x2f\xe2\x8c\x1c\x6e\xce\x16\x3d\x74\xa9\xd2\x33\xfe\xe7\x30\x7c\xd6\xec\x67\xc8\x1f\x81\x67\xe4\x46\x20\xf9\xa0\xdf\x69\x0f\x6f\xd9\x5b\xf6\x37\x00\x00\xff\xff\xa7\x28\x04\xb0\x2e\x05\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0xd1, 0x77, 0xc, 0xab, 0x2a, 0x8c, 0xa8, 0x1b, 0x6f, 0xda, 0x9e, 0xf6, 0x80, 0xba, 0xcb, 0x54, 0x41, 0x1c, 0x16, 0x77, 0x65, 0xde, 0xae, 0x56, 0xce, 0xc7, 0x8, 0x5b, 0x8a, 0x9e, 0x80}}
	return a, nil
}

var _transactionsSetup_account_from_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\xf0\x97\x43\x61\x03\xa9\x73\x0f\xd2\x16\xfd\x79\x2b\xb0\xc3\x82\x62\xcd\x7a\x67\x64\x3a\x16\xea\x4a\x82\x44\xdb\x08\x8a\x7c\xf7\x41\xfe\x97\xc8\x6d\x57\x4c\x87\xc0\x31\xc9\xc7\xc7\xe7\x47\xad\x56\x2b\xd8\x95\xd2\x01\x5b\x54\x0e\x05\x4b\xad\x40\x3a\x68\x4b\x64\x40\x05\x28\x84\xae\x15\x43\xab\xeb\x2a\x07\x5b\xab\xc8\x57\xb0\x06\x47\x0c\x92\x1d\x55\x05\xd4\xc6\xbf\xb0\x24\x48\x36\x04\xdb\x87\x9d\x4b\x7b\xcc\xa2\x56\x1d\x60\x57\x53\x3b\x72\xd0\x48\x6a\x9d\xcf\x7e\x51\xba\x85\xb6\x24\x4b\x23\x98\x47\x29\x09\x84\xae\x2a\x3a\x57\x49\x05\x8e\xb5\xc5\x03\x01\xaa\xdc\xe7\x0a\x4b\xc8\xd4\xe5\xd2\xab\xe1\xe3\x45\x45\x1a\x45\xf2\xd5\x68\xcb\xb0\xd8\x6a\xf5\x50\xab\x83\xdc\x57\xb4\xd3\x2f\xa4\x16\x53\xe4\x27\x31\xe6\xc8\xf8\xec\xa9\x2c\xa2\xe8\x62\xf0\x58\x68\xc5\x16\x05\xdf\xe7\xb9\x25\xe7\xd6\x30\x3c\x2c\x61\x8c\x6c\xf1\x95\xd6\xf0\xc4\x56\xaa\x43\x02\x6f\x51\x04\x00\x60\x2c\x19\xb4\x14\x3b\x79\x50\x64\xd7\x80\x35\x97\xf1\x0f\xe7\x6a\x7a\xea\xb9\x67\x68\x70\x2f\x2b\xc9\xc7\xcc\xe3\x78\xc2\x76\x09\x8f\xf5\xbe\x92\xae\x3c\x07\x97\xf0\x84\x0d\x3d\x63\x55\x53\x02\x57\xf7\xbd\xf4\xbe\x0b\x0c\x67\xb5\x82\xff\xb5\xb5\xba\x05\x04\x4b\x05\x59\x52\xa2\x13\xd0\xab\xa1\x0a\x9e\x68\x42\x4e\xa6\xd2\x47\xca\xc7\xa0\x41\xe7\x28\x1f\x3f\xe7\x04\x58\x11\x83\x25\xa7\xab\x86\xec\x2f\x2a\xe0\x06\x0e\xc4\x43\xe3\xb9\x1a\xc9\x54\xe5\x4f\x3a\x46\x5d\xba\xef\x28\x6d\xae\xde\xe6\xa2\x9f\x6e\x63\xd5\xe9\x75\xa9\x5e\x08\x73\x77\x07\x06\x95\x14\xf1\x22\xeb\x1c\xa6\x34\xc3\xfe\xf3\x11\xb5\xba\x2e\x86\x0e\xc0\xbe\xc5\x04\xbd\x48\xa2\x4b\x99\x7e\x3b\x6f\x11\xe4\x10\xc3\x12\x5b\x49\x4d\xef\x9e\xed\xc3\x2e\x9b\xac\xf3\x0d\x19\x3b\x77\x42\xa0\x8d\x08\x13\x6e\x2e\xc5\x4a\x87\xe7\x6c\x60\xe0\x0d\x15\xfb\x77\xb5\x15\xb4\x3b\x1a\x5a\x83\x92\xd5\xb2\x43\xed\xff\xfa\xdf\x4d\xe0\xbf\xf4\x1d\x89\xdb\x38\x49\x00\xdd\x7f\xf0\x45\xde\xdd\x97\x32\x0e\xf4\xfe\x36\x6b\xa1\x6d\x17\x3e\xc8\x86\xd4\x3f\xa8\x9b\xf5\x3b\x88\xa0\xa8\x7d\xb7\x85\x2e\x50\xb0\x8b\x9e\x7b\xc3\xe6\x7a\x26\x6a\xda\x2f\xf4\xf7\x30\x2f\x0e\x1b\x3a\x6c\x08\x24\x8f\x3e\x98\xdb\xb8\x5f\xbc\x74\xb8\x29\x52\x9f\x1d\x6f\xae\x67\xad\x97\xc0\x7a\x3d\x6f\x3e\x94\x3c\x22\x97\x61\x47\x31\x8e\x68\xfc\x96\x0a\x10\xd3\x96\x4e\xaa\x5d\x5c\x55\x1f\x7b\x26\x43\x03\x37\x23\xb9\x09\x40\x92\x9b\x98\x4a\x7f\x49\x7c\xb0\x39\xe9\x99\xf6\xe9\x36\x0e\x3e\xb5\x3f\x9f\x0f\x11\xa4\x26\x73\x81\x02\x0e\xa6\xbf\x7e\xe2\x80\xef\x12\x90\xdf\x89\xd4\x4b\xd0\x6b\xe4\xd1\x4e\xd1\x29\xfa\x13\x00\x00\xff\xff\xad\x8f\x80\x4c\x39\x06\x00\x00"

func transactionsSetup_account_from_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_addressCdc,
		"transactions/setup_account_from_address.cdc",
	)
}

func transactionsSetup_account_from_addressCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0xd5, 0xda, 0xc2, 0x14, 0x52, 0xcb, 0x3b, 0x70, 0xef, 0x90, 0xad, 0x19, 0x43, 0x47, 0x3b, 0x8f, 0x93, 0xf1, 0xf3, 0xa2, 0x8, 0x7d, 0x31, 0x89, 0xaf, 0x6f, 0xf8, 0xbb, 0x95, 0xd4, 0xb7}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\x41\x6f\xe2\x3c\x10\xbd\xe7\x57\xbc\x72\xa8\x12\x89\x86\xcb\xa7\xef\x80\xa0\x55\x95\x5d\xa4\x1e\x16\x55\x5b\xb6\xf7\x21\x19\x88\xd5\xd4\x8e\xec\x09\x11\xaa\xf8\xef\x2b\x63\x02\x24\xbb\x55\x0f\xeb\x53\x14\xbf\x79\xf3\x9e\xe7\xcd\x64\x32\xc1\xaa\x54\x0e\x62\x49\x3b\xca\x45\x19\x0d\xe5\xd0\x96\x24\x20\x0d\xca\x73\xd3\x68\x41\x6b\x9a\xaa\x80\x6d\x74\xe4\x2b\xc4\xc0\xb1\x40\x89\xe3\x6a\x83\xa6\xf6\x3f\x2c\xe7\xac\x76\x8c\xe5\x62\xe5\xd2\xc0\xb9\x69\xf4\x91\xf0\x58\xd3\x38\x76\xd8\x29\x6e\x9d\x47\xbf\x69\xd3\xa2\x2d\xd9\x72\x47\xe6\x59\x4a\x46\x6e\xaa\x8a\x2f\x55\x4a\xc3\x89\xb1\xb4\x65\x90\x2e\x3c\x36\xb7\x4c\xc2\x47\x2c\xbf\xd7\xb2\xbf\xaa\x48\xa3\x48\xbd\xd7\xc6\x0a\x46\x4b\xa3\x17\x8d\xde\xaa\x75\xc5\x2b\xf3\xc6\x7a\x74\xbe\xf9\xc1\x42\x05\x09\xbd\x7a\x29\xa3\x28\xba\x32\x1e\x53\x51\x58\x76\x6e\x8a\xc7\xf0\x31\x46\xdd\xac\x2b\x95\x3f\x93\x94\x53\x3c\x9f\xbf\xc7\x50\xc5\x14\xbf\x9e\xb4\xfc\xff\x5f\x82\x8f\x28\x02\x80\xda\x72\x4d\x96\x63\xa7\xb6\x9a\xed\x14\xd4\x48\x19\x3f\x39\xd7\xf0\x4b\x70\x90\x51\x4d\x6b\x55\x29\xd9\x67\x46\x8b\xf5\xb2\xed\x38\xb0\xba\xf2\x72\x39\xc6\x0b\xed\xf8\x95\xaa\x86\x13\xdc\x3e\x86\x01\xf8\x2e\x38\x9d\x8a\xe5\xca\x34\xe6\xd8\xb2\x9c\x60\x9d\x83\x24\xcd\x3b\x3e\xc5\x2e\x5d\x1b\x6b\x4d\x3b\xbb\xfd\x18\x3e\x4b\x9a\x9d\x79\x0e\xf7\xf1\xc5\x6c\x72\x6e\xe6\xcf\xc3\x03\x6a\xd2\x2a\x8f\x47\xd9\x31\x06\xda\x08\x02\x25\x08\x96\x37\x6c\x59\xe7\xc7\x41\xf6\x27\x38\x4a\xa2\x9e\x68\xbd\x91\x9f\xbc\xc1\xfc\x7a\x64\x81\x67\xb9\x58\xc5\xaa\xf8\x97\xae\x05\x3b\x65\xb9\xf0\xf1\x1b\x5d\x78\x3e\x79\xb3\x6f\x24\x84\xf9\x49\x4f\x6a\xd9\x99\x6a\xc7\x3e\x10\xf1\x6a\x5f\xf3\xac\x17\x91\x74\xb9\x58\x65\xbd\xca\xfb\x38\x49\x6e\x40\xee\x06\x5f\x00\x2f\xee\x27\x13\x64\x21\xb7\x04\xcd\xed\x1f\xc9\x75\x3d\xa1\xc7\xdb\x0b\x15\x66\x77\x03\xed\x69\x58\x82\xef\x7d\x5c\x9c\xf4\x1a\x3a\xda\x31\x94\x74\x0f\x74\xda\xe4\x33\x22\xc4\x34\x3d\x6d\x57\xea\xd1\xf1\xec\x6e\xd0\x7a\x0c\x31\xd3\x61\xf3\x53\x49\xc8\xc9\x75\xc7\xbc\xb3\x18\x82\x84\x73\x06\xf7\xd8\x18\x3b\x5c\xef\xbf\x8f\x26\xa3\x1a\xf3\x4e\x5c\x2f\xc4\x9d\x52\xe5\x57\xea\xcb\x2c\xf7\xa2\xe4\xcf\xe7\x26\x7a\xd0\x64\xf8\x40\x3d\x0d\x75\x58\xd6\xb8\xa7\x77\x0c\x92\x29\x86\xcb\x73\x88\x0e\xd1\xef\x00\x00\x00\xff\xff\xee\x86\x5e\x75\x5e\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0x2d, 0xc8, 0x94, 0xcf, 0x69, 0x7a, 0x6b, 0xbb, 0x2b, 0x5f, 0x46, 0x34, 0x5f, 0x9f, 0xc1, 0xac, 0x46, 0x1a, 0x48, 0x2b, 0xda, 0xc1, 0x28, 0x52, 0xf0, 0x34, 0x6a, 0x30, 0x6b, 0xa0, 0xb0}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5d\x6b\xeb\x38\x10\x7d\xf7\xaf\x18\xf2\xd0\x3a\x60\xe2\xf7\xb2\x2d\x74\xb3\x14\x0a\xbb\x6c\xe9\xd7\xbe\x66\x22\x8f\xed\xa1\x8a\x24\xa4\x71\x53\x53\xf2\xdf\x17\xc9\x1f\x49\xee\x2d\x85\xfb\x74\xf3\x16\x6b\x74\xe6\xcc\x39\x67\x54\x96\x25\x3c\xb7\x1c\x40\x3c\x9a\x80\x4a\xd8\x1a\xe0\x00\x08\x42\x3b\xa7\x51\x08\x6a\xeb\xe3\xdf\xe3\x79\x16\x2f\x89\x05\xe5\x29\x9e\x23\x18\xda\x83\x66\xf3\x06\x6c\x40\x5a\x62\x0f\xa8\x94\xed\x8c\xc4\xaa\x2d\x41\x17\xa8\x4a\x30\x9e\x14\xf1\x3b\x9b\x06\xbc\xed\x51\x0b\x53\xc8\xbe\x64\xa0\xd0\x9c\x5d\x44\xd3\x43\xdd\x99\x86\xb7\x9a\x40\xec\x1b\x99\x02\xf6\x2d\xab\x36\x72\x0d\x8e\x14\xd7\x4c\x15\x6c\xfb\xd8\x1f\x36\xef\xd8\x69\x79\x40\x69\x37\x80\xbe\xe9\x76\x64\x24\xf6\x49\xbd\xee\xeb\x54\x33\x31\xdc\xa3\x91\x10\x79\x0e\xdc\xe8\xc8\x2c\x4e\x73\xf7\xf7\xbf\xff\x15\xb1\xbe\xbf\xd4\x3a\xd2\x81\x4d\x19\xc4\x7a\x6c\xa8\xac\xb5\xdd\x3f\x47\x2a\xaf\xb1\xdb\xe6\x04\xbc\x4f\xa8\xa7\xa0\x2c\x11\xed\xe5\xe9\xaf\x75\x31\x16\xd8\x4e\x57\x09\xf0\x8e\x51\x12\xcc\x2a\xe1\x3c\x0d\xe8\x91\x7c\x42\x44\x53\x41\xb0\x60\xcd\x6a\x54\x8a\xc0\xa1\xb4\x47\x69\xe2\x30\xae\xdb\x6a\x56\xa3\x07\x61\x74\x24\x95\x49\x8b\x32\xda\x02\x75\x27\x9d\xa7\x22\x56\xd0\x87\x23\x25\x54\x9d\x70\x9c\xbb\x35\x64\xc8\xb3\x3a\x97\x59\x25\xbe\xdb\x94\x86\x3d\xfa\x6a\xb8\x9a\x84\x74\xce\x5b\xe7\x39\x46\x21\xe9\x9e\x65\xbc\x73\xd6\x0b\x2c\xee\x46\xc7\xd2\x78\x8b\xf9\xf3\x3f\x24\x58\xa1\xe0\x2b\xd3\x3e\x2c\xb2\xec\xc4\xf8\x7c\x76\xee\x0a\x4e\x94\x58\xc2\x67\x96\x01\x00\x38\x4f\x0e\x3d\xe5\x81\x1b\x43\xfe\x0a\xb0\x93\x36\xff\xd3\x7a\x6f\xf7\xaf\xa8\x3b\x2a\xe0\x3e\x84\x8e\xc6\xab\x6b\x74\xb8\x65\xcd\xd2\xaf\xad\x11\x6f\xb5\x26\x5f\xc0\x43\x14\x2b\xb4\xc7\xc3\x02\x5e\x8c\xfb\xf1\xe3\x12\x2e\x6e\x87\x88\xcc\xcd\xe3\xaf\x2c\xe1\x91\xa4\xf3\x06\x08\xbd\xee\x81\xcf\xd3\x54\x59\x0a\xe6\x52\xa0\xc5\xf7\xb8\x18\x67\x02\x40\xf2\x77\x46\xe2\x1a\x86\x29\x56\x63\xa0\x56\xdb\x34\xc7\x1f\x17\x9f\x67\xd7\x86\x58\x1c\x6e\xf2\xda\xdb\xdd\x15\xcc\x02\x2d\xe1\xfa\x1a\x0c\x6b\xf8\x9c\x21\x93\x42\x68\x58\xe5\x8b\xdb\xa1\x70\x4e\xc8\x71\x47\xce\xd7\x68\x48\x49\xa4\x0d\xc6\x0a\xd0\x07\x07\x59\x2c\x67\xc4\x43\xf6\x0d\x5f\xe9\x1d\xe5\x28\xbf\x91\x53\x59\xc2\x7a\x7a\x84\xc6\x1d\x50\xb3\x83\x53\x40\x93\x7e\xc3\x22\x58\xa3\xfb\x98\x7d\x1b\x28\x9c\x82\xc4\xb2\x8a\x9c\x0d\x2c\x91\xcb\xf0\x06\x49\xeb\x6d\xd7\xb4\xe9\xf0\x71\xd8\x11\x0f\x6c\x84\x7c\x8d\x8a\xe6\xeb\xa3\x28\x73\x5f\xa6\xb0\xea\xa6\x3c\xe5\x67\x59\x5f\x35\x24\x8f\xe9\x79\xe9\x27\xc0\x14\x46\x15\xb5\xcb\x97\xc7\x11\x35\xc9\xa0\xd5\x1a\x1d\x5c\x7f\xd9\x62\x32\x81\x63\xde\x7f\xca\xcc\x04\x7f\xb8\x39\x6e\xd4\xf2\x5b\xca\x13\xe1\xa9\x6d\x01\xd1\xd9\x5f\xa7\x7f\xc8\x0e\xd9\xff\x01\x00\x00\xff\xff\x54\x63\xfe\xc9\x55\x06\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0x70, 0x1a, 0x5a, 0x42, 0x17, 0x5d, 0x10, 0xa0, 0x99, 0x82, 0xf5, 0xae, 0xad, 0xea, 0xff, 0x7d, 0x3b, 0x1d, 0x1f, 0x5f, 0x41, 0xdf, 0x9c, 0x56, 0xeb, 0x74, 0xcd, 0x60, 0xaa, 0x25, 0xe8}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x7c\x48\x24\x20\x51\x2e\x45\x0f\x82\xed\x20\x75\x1a\x20\x87\xba\x85\xeb\xcd\x9e\x69\x69\x24\x71\x57\x26\x05\x72\x64\x27\x30\xf2\xdf\x17\x14\x29\x9a\x92\x93\xcd\x02\xab\x83\x21\x93\xf3\xf1\xe6\xcd\xcc\xd3\xed\xed\x2d\x6c\x2a\xae\x81\x14\x13\x9a\x65\xc4\xa5\x00\xae\xa1\x90\xca\x1e\x15\xa8\x14\x17\x25\x30\x01\x7f\xbf\xb0\x5d\x53\xe3\xea\x71\x03\x85\x92\x3b\x90\x02\x81\x65\x99\x6c\x05\x01\x49\x60\x42\x52\x85\x6a\x32\xe1\xbb\x46\x2a\x82\xe9\x33\xc7\xc3\x1a\xb5\xac\xf7\xa8\xa6\xfe\xf4\x1f\x24\x96\x33\x62\xe6\x56\x9f\x8e\x57\x52\x3c\xb6\xa2\xe4\xdb\x1a\x37\xf2\x3b\x8a\xe9\x64\x12\x40\x8a\x32\x29\x48\xb1\x8c\xee\xf3\x5c\xa1\xd6\x29\xb8\x97\x6b\xe8\x6f\x56\x6c\x87\x29\xfc\x4f\x06\xed\x35\x28\xcc\x78\xc3\x51\x50\x60\x79\xe0\x54\xe5\x8a\x1d\x9e\x1e\x52\xf8\xf2\x24\xe8\xcf\x3f\x62\x38\x4e\x26\x00\x00\x86\x86\x35\x16\xa8\x50\x64\x68\x8a\xa1\x0a\xbd\x3d\xaa\x2b\x0d\x99\xac\x6b\xec\xb0\x74\x0e\x35\x92\xbf\x5f\x63\x91\x02\x6b\xa9\x8a\xc6\x45\x24\x5f\x9d\x49\x0c\x97\xc7\xb3\xcb\xa5\x0f\xf9\xf6\x1e\x0a\x59\x74\x28\x4e\x89\x0d\xae\x1c\x1b\xa9\x39\x75\x37\xa6\x11\x24\x3d\x1c\x85\x19\xf2\x3d\xaa\x0e\xce\x3b\xe9\xd6\xee\xde\x25\x6b\x14\x36\x4c\x61\xa4\x79\x29\x50\xb9\x02\xfe\x92\x4a\xc9\xc3\x33\xab\x5b\x8c\xe1\xf2\xde\x36\xd7\xb3\x64\x31\xc2\xb6\x33\xf2\x10\xfa\x06\x00\xd3\x10\xb6\x1c\x54\x5f\x8a\x77\x36\x30\xf7\xa1\xc9\x1c\x4a\x24\x97\x66\xdc\xe3\x38\xe9\x0f\x74\x62\x53\xce\x2e\x8f\x61\x82\xb7\x45\x24\xba\xa6\x87\x23\x10\xfb\x64\xe6\xb9\xbb\x83\x86\x09\x9e\x45\xd3\xa5\x6c\xeb\x1c\x84\xa4\x1e\xfe\x00\xaa\x2c\xa0\xe4\x7b\x14\x60\x02\xda\xe9\x66\x16\xc5\x34\x1e\xd4\xae\xac\x47\x50\xbc\xef\x8e\x19\x6a\xeb\x3a\x66\x66\x50\xff\xc9\xe3\xc1\x38\xcc\x07\x84\x24\x2e\xfe\xd2\x79\x1a\x90\x91\x39\x6b\x55\x86\x9b\xd7\x06\x53\x10\xbc\xbe\xee\x7c\xec\x5f\xf3\x3b\x1b\xec\x54\xb2\x7a\xdc\x2c\x07\x49\x16\x51\x1c\x03\xd3\x17\xf0\x89\xdd\xdd\x07\xdc\x0d\xa8\xca\x25\xea\x8e\xc7\x9e\x8a\xb3\x30\x1d\xba\x11\x6f\x8e\x74\x76\x1a\x8a\x7e\xcb\xec\xfc\x5d\xe9\x11\x9d\xde\x59\x63\x5d\x24\xc1\xaa\xc1\xdc\xb9\x24\x9a\xa4\x62\x25\xf6\xc3\xf1\x7b\x1b\xb8\x88\x06\xc5\x9b\xc7\xf4\x32\x1d\xf5\xab\x4f\xfa\x1f\xa3\x6a\xe0\x10\x07\x7c\xb9\x81\x3e\x51\x65\x9c\xd0\x48\xa8\xdc\x7e\x43\xb3\x29\x76\x81\x75\x83\x19\x2f\x38\xe6\xd0\x30\xaa\x46\x8c\x95\x68\x8d\xbc\x92\x69\x68\xda\x6d\xcd\x33\xaf\xb9\x36\xd8\x60\xb8\xbc\xf1\x70\xb3\xfc\xf1\x07\x4d\x71\x81\xcf\x7a\xd3\x4b\xca\x99\xfc\x8d\x35\x67\xc9\x1a\x98\x9f\xb2\x27\x19\x6b\xd8\x96\xd7\x9c\x38\xea\xa4\x44\x9a\xfd\x4c\x8f\x16\xd1\x88\x63\x0b\xc7\x50\xfc\xf9\x36\x9f\xd1\x74\xa5\xa1\x8f\x0c\xcb\x1e\xc6\x6b\x48\x6e\x37\x51\x81\x5a\x5a\xe4\x7d\x1d\x6e\x9c\xa2\x5f\x16\x92\xf7\x58\xf3\x50\xfa\xc0\x7d\x7e\x27\xbe\xf8\x82\x59\x4b\x18\x0a\xab\xa1\x53\x14\x04\xb3\x9b\xb3\x91\xf7\xef\x51\xf8\x09\x3b\xbd\xc7\x1f\x96\x96\xb8\xef\x45\x44\x86\xf2\x14\x66\x37\xa2\xa0\x21\x94\x46\x6a\x82\xa3\x8f\x70\x71\x96\xbc\x44\x7a\x7a\xd0\x91\x95\x63\xc6\x85\x0e\x50\xc4\x29\x4c\xff\x55\xbc\xe4\x82\xd5\x20\x0f\x02\x15\xe8\xca\x13\x54\xb1\x40\x29\x99\x78\xdd\x49\x85\x53\x97\xfb\x6d\xf2\x23\x00\x00\xff\xff\xc6\x80\x65\x85\x7b\x08\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xfb, 0xd0, 0x61, 0xa6, 0x14, 0x50, 0xcb, 0x4c, 0x96, 0x60, 0xc7, 0x61, 0xee, 0xec, 0x9e, 0xb1, 0xa4, 0xd4, 0x9, 0xf2, 0xd5, 0x47, 0xe6, 0xf3, 0x1, 0x98, 0xea, 0x7d, 0x18, 0xa3, 0x3d}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4f\x4f\xf3\x30\x0c\xc6\xef\xfd\x14\xcf\xdb\xc3\x4b\x2b\xa1\xee\x3e\x01\x13\x1a\xec\xc6\x34\xa1\xc2\xdd\xcb\x2c\x6a\x91\x25\x51\xe2\x6e\x4c\x68\xdf\x1d\xb5\xdd\x5f\x71\xc0\x87\x48\x71\x9c\xe7\xf9\xd9\x1e\x8d\x46\xa8\x1b\x49\xd0\x48\x2e\x91\x51\xf1\x0e\xad\xb3\xe2\x3e\x13\x92\x7c\x38\x8e\x37\x09\xa1\x5d\x5a\x31\x98\x52\xa0\xa5\x58\xd1\x1d\x48\x61\xc8\x79\x27\x86\xec\xf1\x39\x90\x36\x59\x26\xeb\xe0\xa3\x22\x7f\x61\xa5\x15\x29\xbd\x0b\x6f\x53\x7e\x4a\x3f\x7f\xd1\x3a\x58\x9e\xcf\xea\x3c\xcb\x2e\x4d\xbf\x33\x00\x08\x91\x03\x45\x2e\x06\xeb\x31\xa8\xd5\xa6\x78\x73\xbd\x43\x6a\x0e\x00\xba\x2b\xf1\xff\xd1\x18\xdf\x3a\x2d\x0f\x1f\xbb\xb0\xac\x30\xde\x5a\xee\x15\x9f\x48\x09\xf7\x38\x1b\x56\x91\x93\xb7\x1b\x9e\x7a\xa7\x91\x8c\x76\x64\x45\x97\x6b\xa3\xe1\x7a\x17\x78\x0c\x27\xf6\x16\x1b\xe1\xed\x70\xed\xce\xbb\xab\x46\xaa\xf9\xac\x9e\x5e\x59\x3c\x14\x65\x09\x4a\xff\xf0\x47\xdd\xe4\x84\xd9\xc5\x64\x82\x40\x4e\x4c\x91\x77\xe5\xaf\x03\x58\xc4\xca\x73\x82\xf3\x8a\x03\x2a\x7e\xc9\xf4\x74\x79\x79\x12\x1b\x06\x55\x99\xe3\x6a\x84\x53\xd5\x1e\xe7\x55\x5c\x34\x7f\x96\x59\xf4\xeb\x5a\x90\x36\x83\xcc\x3e\xdb\x67\x3f\x01\x00\x00\xff\xff\x1d\x92\x1e\x7f\x08\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbe, 0x37, 0x93, 0x6, 0xcd, 0xb3, 0xed, 0xa7, 0x85, 0x4f, 0xb4, 0x46, 0x6d, 0x76, 0x5b, 0x7c, 0x78, 0x34, 0xb, 0xc4, 0x3a, 0x8e, 0x6a, 0xb9, 0x4c, 0x5d, 0x87, 0xd0, 0xc2, 0x32, 0x7b, 0x12}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"transactions/destroy_nft.cdc":                                     transactionsDestroy_nftCdc,
	"transactions/generic_transfer_with_address.cdc":                   transactionsGeneric_transfer_with_addressCdc,
	"transactions/generic_transfer_with_paths.cdc":                     transactionsGeneric_transfer_with_pathsCdc,
	"transactions/mint_nft.cdc":                                        transactionsMint_nftCdc,
	"transactions/nft-forwarding/change_forwarder_recipient.cdc":       transactionsNftForwardingChange_forwarder_recipientCdc,
	"transactions/nft-forwarding/create_forwarder.cdc":                 transactionsNftForwardingCreate_forwarderCdc,
	"transactions/nft-forwarding/transfer_nft_to_receiver.cdc":         transactionsNftForwardingTransfer_nft_to_receiverCdc,
	"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc": transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
	"transactions/scripts/borrow_nft.cdc":                              transactionsScriptsBorrow_nftCdc,
	"transactions/scripts/get_collection_data.cdc":                     transactionsScriptsGet_collection_dataCdc,
	"transactions/scripts/get_collection_ids.cdc":                      transactionsScriptsGet_collection_idsCdc,
	"transactions/scripts/get_collection_length.cdc":                   transactionsScriptsGet_collection_lengthCdc,
	"transactions/scripts/get_collection_length_from_storage.cdc":      transactionsScriptsGet_collection_length_from_storageCdc,
	"transactions/scripts/get_contract_storage_path.cdc":               transactionsScriptsGet_contract_storage_pathCdc,
	"transactions/scripts/get_contract_views.cdc":                      transactionsScriptsGet_contract_viewsCdc,
	"transactions/scripts/get_nft_metadata.cdc":                        transactionsScriptsGet_nft_metadataCdc,
	"transactions/scripts/get_nft_view.cdc":                            transactionsScriptsGet_nft_viewCdc,
	"transactions/scripts/get_views.cdc":                               transactionsScriptsGet_viewsCdc,
	"transactions/setup_account.cdc":                                   transactionsSetup_accountCdc,
	"transactions/setup_account_from_address.cdc":                      transactionsSetup_account_from_addressCdc,
	"transactions/setup_account_from_nft_reference.cdc":                transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":                transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/transfer_nft.cdc":                                    transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                               transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"transactions": {nil, map[string]*bintree{
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"generic_transfer_with_address.cdc": {transactionsGeneric_transfer_with_addressCdc, map[string]*bintree{}},
		"generic_transfer_with_paths.cdc": {transactionsGeneric_transfer_with_pathsCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"nft-forwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftForwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftForwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftForwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftForwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"scripts": {nil, map[string]*bintree{
			"borrow_nft.cdc": {transactionsScriptsBorrow_nftCdc, map[string]*bintree{}},
			"get_collection_data.cdc": {transactionsScriptsGet_collection_dataCdc, map[string]*bintree{}},
			"get_collection_ids.cdc": {transactionsScriptsGet_collection_idsCdc, map[string]*bintree{}},
			"get_collection_length.cdc": {transactionsScriptsGet_collection_lengthCdc, map[string]*bintree{}},
			"get_collection_length_from_storage.cdc": {transactionsScriptsGet_collection_length_from_storageCdc, map[string]*bintree{}},
			"get_contract_storage_path.cdc": {transactionsScriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
			"get_contract_views.cdc": {transactionsScriptsGet_contract_viewsCdc, map[string]*bintree{}},
			"get_nft_metadata.cdc": {transactionsScriptsGet_nft_metadataCdc, map[string]*bintree{}},
			"get_nft_view.cdc": {transactionsScriptsGet_nft_viewCdc, map[string]*bintree{}},
			"get_views.cdc": {transactionsScriptsGet_viewsCdc, map[string]*bintree{}},
		}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_address.cdc": {transactionsSetup_account_from_addressCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
