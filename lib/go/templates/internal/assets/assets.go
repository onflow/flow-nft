// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (581B)
// ../../../scripts/get_collection_ids.cdc (557B)
// ../../../scripts/get_collection_length.cdc (465B)
// ../../../scripts/get_contract_storage_path.cdc (541B)
// ../../../scripts/get_nft_metadata.cdc (5.673kB)
// ../../../scripts/get_nft_view.cdc (4.482kB)
// ../../../scripts/get_total_supply.cdc (118B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.433kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.663kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.617kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.199kB)
// ../../../transactions/destroy_nft.cdc (914B)
// ../../../transactions/mint_nft.cdc (3.168kB)
// ../../../transactions/setup_account.cdc (1.023kB)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.458kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.487kB)
// ../../../transactions/transfer_nft.cdc (1.638kB)
// ../../../transactions/unlink_collection.cdc (604B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\x1f\x16\x1b\x16\xfb\xb2\xec\x21\x34\x0d\x69\x68\xa0\x97\x10\x8a\x7b\x2e\xf2\x78\x9c\x0c\x95\x25\x21\xcb\xb4\x25\xe4\xbf\x97\xc4\xb1\x9d\xa6\x54\x27\x09\xbd\x6f\xa4\xf7\x49\xe3\xac\x0f\xd8\x58\xb3\xee\xcc\x4e\x4a\xcd\x85\x7d\x63\x83\xda\xdb\x06\x71\x96\xe5\x59\x96\x93\x35\xc1\x2b\x0a\x6d\x7e\x1b\xcb\xa8\xa2\x38\xba\xcc\x78\xfc\x50\x8d\xd3\xbc\x59\x17\xbf\xd0\x53\xa0\xe7\xa2\x3c\x47\xb1\x97\x16\x2d\x79\x71\x01\xa5\xf5\xde\xbe\xb7\x50\x06\xe3\x10\x05\xb2\x5a\x33\x05\xb1\x26\x72\x5d\x89\xba\x33\x68\x94\x98\x44\x55\x95\xe7\xb6\x9d\x61\xd9\x6f\xfe\x42\xaa\x19\x5e\x9e\x4c\xf8\xff\x2f\xc5\x21\x02\x00\xcd\x01\x8a\xc8\x76\x26\x60\x8e\x1d\x87\x65\x7f\x18\xe0\x34\x1a\x63\xd3\x33\xcf\x5c\x63\x3e\x60\xe7\xfb\xd3\xca\x76\x1c\x56\xca\xa9\x52\xb4\x84\xcf\xe4\xaa\xcb\x6a\x24\xb7\x5d\xa9\x85\xb6\x2a\xec\xd3\x89\xeb\x5b\xdd\xfd\x39\xfc\x90\x77\x0b\x1e\xef\x93\x89\x5b\x2c\xe0\x94\x11\x4a\xe2\x95\xed\x74\x05\x63\x07\x41\xa0\xf1\x1b\xbd\x23\x77\xa6\xaf\x1a\xc4\x97\x5e\x79\x8e\x87\x1e\x51\xf0\x5c\xb3\x67\x43\x8c\x60\xa1\xd0\x3a\x26\xa9\x85\xce\xa6\xc5\x20\xec\xf9\xda\xf4\x60\xe5\x15\xf3\xef\x66\x2e\x75\x36\xeb\x22\x39\xe9\x96\x2a\x8d\x8e\xd1\x57\x00\x00\x00\xff\xff\x42\x5e\x85\x9f\x45\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0x35, 0x85, 0x35, 0xa5, 0x35, 0x7c, 0x4e, 0xec, 0x2f, 0xd1, 0x85, 0x20, 0x1, 0xe5, 0x41, 0x36, 0x46, 0x72, 0xa9, 0x90, 0x9b, 0x8e, 0xae, 0x8b, 0x7, 0x11, 0x8c, 0xbe, 0x9f, 0xe5, 0xe6}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xc1\x4f\xc2\x30\x18\xc5\xef\xfb\x2b\x5e\x76\xd0\x2d\x31\xdb\xc5\x78\x20\x22\x21\x20\x09\x17\x42\x14\x4f\xc6\x43\xd7\x75\xd0\xd8\x7d\x6d\xba\xaf\x51\x43\xf8\xdf\xcd\x18\x30\x44\xdd\xe9\x5b\xfa\x7e\xef\x7b\xaf\xd5\xb5\xb3\x9e\xb1\xb0\x34\x0b\xb4\xd6\x85\x51\x2b\xfb\xae\x08\x95\xb7\x35\xe2\x2c\xcb\xb3\x2c\x97\x96\xd8\x0b\xc9\x4d\x7e\x29\xcb\x64\x29\xe3\xe8\xe0\xf1\xf8\x29\x6a\x67\xd4\x62\xb6\xfa\x87\xee\x05\x1d\x17\xe5\x79\x8e\x67\xe9\xb5\x63\xb0\xc5\x5a\x31\x5a\x78\x3e\x6d\xa0\x09\x82\x20\xa4\xb4\x81\xf8\xba\x81\xb4\xc6\x28\xc9\xda\x52\x0b\x45\x2e\x14\xa8\x02\xa1\x16\x9a\x12\x51\x96\x5e\x35\xcd\x00\xe3\x6e\xb8\x39\x53\x2f\x43\x61\xb4\x5c\x0a\xde\x0c\xd0\xcf\xe9\x00\xaf\x2f\x73\xe2\xbb\xdb\x37\x6c\x23\x00\x30\x8a\x8f\xdb\x30\x6c\x93\x8c\xbb\x9f\xa3\x79\x1a\x9d\x64\xbd\xf9\x93\xaa\x30\x3c\x62\xfb\xf3\xf6\xcb\xd6\x8a\x27\xc2\x89\x42\x1b\xcd\x5f\xc9\x5f\x59\xd2\x5e\x5c\x58\xef\xed\xc7\xfd\xd5\xf6\xd7\xd5\x4e\x2e\xc0\xdd\x43\xd2\x73\xa3\x11\x9c\x20\x2d\x93\x78\x62\x83\x29\x41\x96\xd1\x59\x41\x9e\x76\x77\xcf\xe0\xf6\xf4\x59\x6c\x08\x46\xe3\x94\xd4\x95\x56\x25\x9c\xe0\x4d\x7c\xa8\xe7\x15\x07\x4f\x3f\x1b\xb6\x75\xe6\xd3\x26\x49\xa3\x5d\xf4\x1d\x00\x00\xff\xff\x1c\x39\xf9\x2e\x2d\x02\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x82, 0xe0, 0xf7, 0x8c, 0xeb, 0xc6, 0xd3, 0xea, 0xfd, 0x51, 0xa0, 0x2b, 0xae, 0x94, 0xb8, 0xa1, 0xda, 0x41, 0x1a, 0x1d, 0x64, 0x61, 0xa3, 0xe2, 0x18, 0x3c, 0xdc, 0xf, 0x91, 0x9c, 0x3f}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfa\x8a\xc5\x87\x62\x5f\xe4\x7b\x68\x1a\x82\xdb\x40\x2e\x21\x94\xfc\x80\x2c\xcb\x8e\xa8\xbc\x2b\xe4\x15\x6d\x09\xf9\xf7\x12\xab\xb1\xd3\x94\xe8\x20\x24\x76\xde\xb0\x33\xb6\xf7\x14\x18\x76\x84\x9b\x88\x9d\xad\x9d\x39\xd0\x87\x41\x68\x03\xf5\x90\x49\x59\x4a\x59\x6a\x42\x0e\x4a\xf3\x50\xde\xcb\xa4\x6e\x74\x26\x7e\x3d\xde\xbe\x54\xef\x9d\xd9\x6d\x0e\x0f\xe8\x59\x90\x38\xe1\x63\x0d\x6d\x44\xe8\x95\xc5\x5c\x35\x4d\x30\xc3\xb0\x80\x75\x7a\x14\x0b\xd8\x22\xc3\x49\x00\x00\x38\xc3\xa0\xb4\xa6\x88\x0c\x4b\xe8\x0c\xaf\xd3\xe7\x4a\x15\x62\x92\x69\x72\xce\x68\xb6\x84\xef\xa6\x85\xe5\x15\x1b\xe7\x97\x23\x3b\xc3\x95\xf2\xaa\xb6\xce\xf2\x77\x7e\xb3\x54\x35\x91\xfb\x58\x3b\xab\xf7\x8a\x8f\xc5\xcc\xd5\x14\x02\x7d\x3e\x3f\x9d\xfe\xb5\x70\x0f\x9e\x5f\xf2\x99\x5b\xad\xc0\x2b\xb4\x3a\xcf\x2a\x8a\xae\x01\x24\x86\x64\x05\x7a\x5a\x23\x35\xe6\x47\xfa\x26\x41\x96\x6c\xc6\x2b\x18\x8e\x01\xff\xc6\xbb\x64\xd9\xbe\x0e\x79\x21\x9d\xc1\x8e\x8f\xe2\x2c\x7e\x02\x00\x00\xff\xff\xaa\x92\x4e\x73\xd1\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc0, 0x89, 0xcd, 0xef, 0x5d, 0x12, 0xb7, 0x51, 0x37, 0xc7, 0x80, 0x78, 0xf2, 0x33, 0x27, 0xa0, 0x48, 0xa5, 0xb7, 0x52, 0x63, 0x43, 0xcd, 0x14, 0xbe, 0x1b, 0x93, 0xd9, 0x22, 0x5f, 0x57, 0x8f}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x6b\xc2\x40\x10\x85\xef\xfb\x2b\x9e\x39\x94\x04\xca\x7a\x17\xa3\x88\xa5\xb7\x96\xd2\x4a\xef\xeb\xee\x68\x17\x92\xdd\x30\x3b\x51\x4a\xf1\xbf\x97\x98\x34\x2a\xa5\xf4\x12\xc2\xf0\xbe\x79\xdf\x8e\xaf\x9b\xc8\x82\x27\x12\xe3\x8c\x98\x77\x4f\xc7\x84\x1d\xc7\x1a\x99\xd6\x53\xad\xa7\x36\x06\x61\x63\x25\x4d\x6f\x32\xda\x3a\x9b\xa9\x81\xee\x26\xaf\x94\x62\x75\x20\xfe\x03\xbe\x8e\xf4\xac\x6a\xda\x2d\x76\x6d\x40\x6d\x7c\xc8\x8d\x73\x3c\xc3\xca\x39\xa6\x94\xee\x11\x4c\x4d\x33\xbc\x09\xfb\xb0\x2f\xba\x9f\xc8\x66\x4f\x2f\x46\x3e\x96\xf8\x52\x00\x50\x91\x40\x50\x62\xf3\xd9\xd0\xfc\x56\xed\xf9\x71\xb3\x8e\x55\x45\x56\x7c\x0c\x0f\x46\xcc\x22\x2f\x46\x66\x1b\x99\xe3\x91\xdc\x7a\x50\x43\x89\x3d\xc9\xca\xda\xd8\x06\x39\x6b\x14\x7a\xd4\xd6\x7d\x7a\x7e\x77\xad\xbf\xc8\x7b\xbb\xee\x5b\x60\xb9\x44\x63\x82\xb7\x79\xf6\x43\xc1\xc6\xb6\x72\x08\x51\xb0\xa5\xb1\x2f\x2b\xd4\xe8\x70\xf0\x74\x44\xf9\x4b\x45\x73\xdf\xd0\x95\xe5\xd2\x2b\xfb\xdd\x90\x2e\x11\x7c\x35\xbc\x1d\x60\x92\x96\x43\x37\x3a\x0f\x4e\x97\xdd\xd6\xa1\x3c\x23\x13\x98\x34\xc1\x3f\x97\x51\x57\xcb\xac\xd3\xe9\x72\x67\x75\x52\xf8\x0e\x00\x00\xff\xff\xa2\x42\xb5\x3b\x1d\x02\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf3, 0xb8, 0xc5, 0xad, 0x39, 0xa, 0xa4, 0x7b, 0x30, 0x78, 0x95, 0x59, 0xb6, 0x31, 0x8c, 0xf4, 0x4, 0x9c, 0x39, 0x2f, 0xde, 0xa9, 0xdf, 0x55, 0xda, 0x1a, 0x51, 0x86, 0x8f, 0x4c, 0xd6, 0xe9}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x41\x6f\xe3\x36\x13\x3d\x5b\xbf\x62\x92\xc3\x07\x1b\xd8\x4f\xee\xa1\xe8\xc1\xa8\x1a\x6c\x93\x6c\xb1\x40\xd6\x58\x24\xde\x5e\x82\x1c\x68\x69\xe4\x10\x91\x28\x95\xa4\x92\x35\x82\xfc\xf7\x82\xa4\x64\x92\x12\x69\xbb\xb9\x58\x9a\x79\x33\x43\x8a\xf3\x48\xbe\xd0\xba\x6d\xb8\x84\xdb\x9f\xa4\x6e\x2b\x5c\x7f\xd9\x40\xc9\x9b\x1a\x2e\xd3\x74\x99\xa6\xcb\xbc\x61\x92\x93\x5c\x8a\xa5\x05\xa4\x79\x91\x5f\x26\x7d\xdc\x37\x94\xa4\x20\x92\xfc\x4d\xf1\x4d\x44\x42\x3d\x8c\x89\x4e\x96\xcb\x25\x6c\x9e\xa9\x00\x91\x73\xda\x4a\xd8\xa1\x14\x40\xaa\x0a\xe4\x33\xc2\x2b\xc5\xb7\xff\x6f\x89\xc0\x02\xea\x3e\x16\x88\x10\x4d\x4e\x89\xc4\x02\xde\xa8\x7c\xd6\x38\xd1\x62\x4e\x4b\x8a\x05\xac\xbf\x6c\x74\x4a\xc2\x0a\xe0\x28\x3b\xce\x04\x50\x09\x44\x00\x01\x41\xd9\xae\x42\x10\x92\x77\xb9\x4c\x92\xb6\xdb\xf6\xcf\x2a\x0a\xde\x13\x00\x00\x65\xac\x50\x02\x23\x35\xae\xe0\x41\x72\xca\x76\x9e\xa3\x40\x33\x50\xda\xb0\xa0\x5f\x3e\x77\xf5\x96\x11\x5a\x05\xbd\xcd\x1b\x43\xbe\x82\xcf\x45\xc1\x51\x08\x3f\x70\xdf\x86\x2b\xf2\x66\x4f\x2a\x49\x51\xac\xe0\xd1\xff\x82\xf7\xda\xb3\x7f\xf2\xe0\xf8\x53\x22\x67\xa4\xfa\x71\x7f\x17\x4c\x27\x90\x53\x52\xad\xbb\x7a\xab\x46\xf2\xe3\x2b\x93\xbf\xfd\xea\x01\xf2\xa6\xaa\x30\x57\x13\xfc\xde\x6d\x2b\x9a\x7f\x27\xf2\x79\x05\xf6\x39\x02\x7e\x90\x0d\x27\x3b\x34\x68\xe7\x25\x96\x9b\x37\xaf\xb4\x40\xde\x67\xe7\xf4\x95\xc8\xa3\x78\x5d\x3f\x38\xa3\x31\xe8\x8e\xb2\x17\x2c\x36\xb1\xef\x39\x1d\xc3\xd9\x01\xeb\x58\x57\x58\xc8\xcd\x89\xfe\xb0\xc8\xdb\x13\x0b\xe5\x7c\xda\x7f\x3a\xc2\xf1\x6b\x4d\x76\xa7\xaa\xff\x49\x18\x43\x7e\x0e\xf2\x41\x91\xa8\x12\x2b\x78\x37\xb0\x01\xfe\xe1\x37\x53\x41\xcd\x4c\xfc\xc6\xbb\x35\x66\xbf\x7f\x39\xa1\x52\x8c\x91\x1b\x6d\x4d\x66\xb3\x01\x56\x63\x41\xc9\x04\xf6\x4d\x5b\xaf\x1c\x5c\x45\x73\x64\x02\xc7\xc0\x3b\x63\xbe\x4a\x74\x6d\xca\xa8\x9c\xeb\x27\xf5\xe7\x72\xf6\xd3\xc1\x1a\x20\xac\x75\x4e\xd8\x6a\x5d\x3e\x55\xad\x9d\x95\xd2\xed\x14\xeb\x38\xcd\x53\x8b\x0d\x90\xd4\x3a\x43\x0c\xb5\xde\x53\xf4\x0c\x21\x63\xdc\x0c\x66\x8d\x11\x33\x3e\x84\xe9\x14\x4e\x53\xf2\x58\xe9\xf3\xd0\xeb\xe0\x72\x1f\x65\x62\x08\x16\xa0\x61\xf0\x13\x4e\x39\x18\x82\x05\x08\x18\xcc\x16\x63\x9f\xd3\x22\x47\xa9\xe7\xb4\xf0\x11\xde\x7d\x4a\x66\xb3\xd9\xac\xa7\x5c\x90\x71\x06\x31\x90\x2d\xc2\x35\x55\x66\xd1\x1f\x90\xa6\x41\xab\x32\x55\x6c\x83\x4c\x93\xce\x77\x38\x84\x83\xcc\xa5\x9f\x0f\x3b\x50\x0f\x32\x4b\x43\x1f\xa2\x29\x08\x99\xa1\xe2\x28\x7a\xdf\xea\xea\x86\x8c\xbe\xef\x40\x44\xc8\x2c\x29\x7d\x88\xc3\x3f\xc8\x5c\x36\xfa\x30\x97\x89\x90\x79\xc4\xf4\x81\x21\x52\x42\x16\xe4\x6a\x2c\xd0\xa1\xa5\x17\x39\x3e\x4a\x43\x35\x1d\xca\xfa\x55\x1d\xc7\xf1\x01\x07\x06\x7b\x3c\xc0\x72\x34\x10\x6a\x9d\xa7\x86\x1c\x4b\x33\x71\xc7\x12\xad\x4d\x1b\xfa\x86\x18\xf8\xc6\x6b\xcd\xa0\x3d\x16\x7a\xeb\x75\x4c\xd0\x1e\x5d\x59\xbb\x75\xf8\x2b\x6b\xed\xb1\x50\x67\x3b\xf1\x42\x1d\x7b\xb4\xaa\xd9\x62\xfc\x8a\xc6\x36\xe2\x82\xd9\x51\x14\x0f\x9c\x63\xdd\x32\x4d\xef\x24\x8a\xa4\xc3\x51\x3e\x9b\x69\x87\xd9\x56\x32\xf3\x63\xcd\xfd\x5e\x92\xf5\xbf\x3a\xd9\x47\xf2\x61\xee\xdb\x65\xc7\xa0\x26\x94\xcd\x89\x39\x56\xed\xf9\x0a\xb4\x18\xce\xba\xc5\xca\xb9\x90\xab\xbb\x00\xc9\xf3\xa6\x63\x12\x32\xa5\x0e\x3e\x9b\x97\x21\xc3\x22\x39\xc0\xec\x3c\x21\x1b\x62\x0e\x73\x49\x77\x28\xaf\x49\x4b\xb6\xb4\xa2\x72\x3f\x77\x54\xcc\x75\x80\xa4\x0b\x1b\xb7\x6d\x38\x6f\xde\x7e\xff\xdf\xbb\x13\x62\x1f\xc7\xc1\x1f\x7f\xcc\x6d\xec\xd5\x15\xb4\x84\xd1\x7c\x7e\x79\xdd\x74\x55\x01\xac\x91\x60\xd2\x01\x01\x8e\x25\x72\x64\x39\x82\x6c\xb4\x88\xb1\xc3\xbf\x74\x26\xc5\x4a\xe9\x2d\x61\x3f\x1e\x3b\x82\xb9\xfa\x70\xb4\x58\x5c\x98\x98\xe5\x12\xfe\xd2\x32\x04\x61\x4b\x04\xcd\xa1\xa0\xa2\xad\xc8\x1e\x28\x2b\x1b\x5e\x13\xfd\x79\xca\x86\x83\x54\xa2\x4b\xc9\xa5\xa1\xd2\x00\xcc\x46\x47\xc9\x0e\xe5\x8d\x71\xcd\x59\x29\x03\x75\xcc\x1e\x1b\xaa\x80\xb0\xa3\xaf\xc8\xbc\x32\x3d\x5a\xe5\x0e\x95\xba\x1f\x36\x6c\xb7\xd8\x48\xd7\x84\xe2\x1c\x1e\x8e\x23\x1d\x9e\xc7\xa7\xe8\xad\xa5\x3f\x5f\x67\x29\x2c\x24\x36\x7e\x3f\x0f\x91\x64\x3c\x1a\x56\xca\xfe\x0c\x8f\xa5\xe8\xdd\x62\x54\xde\x3d\x7d\x62\xa1\x0f\x1a\xe3\x04\x1e\xa2\xfd\xeb\xac\x39\x3a\xcd\x01\x7b\x91\xf6\x54\xf2\x66\xba\x39\x1c\xb0\x2a\xaf\x7a\x9b\x07\xa9\x16\xbd\xc9\x40\x06\xef\x46\x4c\xa8\x5e\x78\x41\xd5\x1f\xd3\xa5\x48\x85\x89\x4f\x5f\x70\x2f\x9c\x2b\xc6\xa4\xc0\xe3\x0b\xee\x9f\xfc\x4d\xdb\xcf\xa0\x01\x17\x69\xc7\xab\x7e\xcb\x49\x66\x33\xab\x4b\x42\x1f\xcb\xdc\x91\x86\xf5\x31\xe8\x7e\x53\x9b\x60\xcd\x75\x49\x63\x7b\xe4\xb0\xcf\x4d\xa0\xfd\xb5\xc9\x60\xf5\x58\xcc\x3f\x22\x14\x0b\xc6\x62\xa5\xe7\x9c\xbe\x4c\x45\x24\xcb\x00\x71\x8c\x41\xfd\x32\xe0\x0e\xa6\xb4\xe3\x74\xbe\x98\x08\x1a\xfd\x13\x90\x33\xfd\x43\x4a\x0b\x64\x92\x96\xd4\x05\x39\xd2\xc6\xa1\xaf\x4f\xd7\x45\x44\xdd\x38\x2f\x6a\x71\x62\x32\x67\xdc\xdd\x29\xd3\x8f\xa7\x74\xcf\x84\x93\x69\x7b\xbe\x12\x9a\x06\x8b\xff\xa2\x8d\x02\xb5\x1d\xff\x31\xb9\x14\x1b\xb5\x35\x06\x97\xe1\x98\xaa\x8a\xa5\xb4\x98\x53\x29\x03\xe2\x2b\x3e\xc3\xb3\xd3\x1a\x95\x36\x65\xad\xdf\xf1\x11\xd5\x36\x0d\x0b\xb2\x20\x22\xe6\xa6\xd1\xd1\x5e\x8c\xe8\xbc\xc0\x66\x63\xdd\x69\x49\x2b\x1c\x93\x2c\xa2\x04\xa7\x89\xb6\xd6\x7d\x22\xd1\x61\x87\x9d\x98\x02\x62\xd1\x3f\x5d\x52\x75\x24\xdf\x51\x21\x1f\x7f\x79\x9a\x2a\x46\x39\xd5\x88\xe6\xc7\x17\x85\xee\x45\x6e\x91\x7c\x24\xff\x06\x00\x00\xff\xff\x60\x87\x1e\x62\x29\x16\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x60, 0xef, 0xe5, 0xc1, 0xf1, 0x65, 0xcb, 0xd2, 0x1, 0x98, 0xd, 0x7, 0xb2, 0xcc, 0x82, 0xfb, 0x7d, 0xfc, 0xa, 0xc4, 0x67, 0x4a, 0xe3, 0x4a, 0x2c, 0xd0, 0x7b, 0x22, 0xd6, 0xda, 0xb2}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xdb\x38\x10\xbd\xfb\x2b\xc6\x39\x2c\x6c\x20\x50\x2e\x8b\x3d\x08\xab\x2d\xba\x69\x0a\x14\xe8\x1a\x45\x92\xf6\x52\xf4\x40\x4b\x63\x67\x10\x9a\xd4\x52\x54\x12\x21\xf0\xbf\x2f\x24\x59\x22\x29\x91\x92\xd6\x27\x6b\xe6\xbd\xe1\x88\x7c\x43\x3d\x3a\xe5\x52\x69\xb8\x7b\x63\xa7\x9c\xe3\xee\xf3\x23\x1c\x94\x3c\xc1\x55\x14\xdd\x44\xd1\x4d\x2a\x85\x56\x2c\xd5\xc5\x8d\x01\x44\x69\x96\x5e\xad\x2e\xbc\x7f\x50\xb3\x8c\x69\xf6\x83\xf0\xb5\x08\x50\x1d\x4c\xcb\x5e\xe5\xe5\x1e\x0a\xad\xca\x54\xc3\xee\xf3\x63\x9d\x81\xf7\x15\x00\x40\x9d\xe0\xa8\x81\xb2\x18\xbe\x7f\x11\xfa\x8f\xdf\x9d\x70\x59\x06\x12\x82\x9d\x30\x86\x07\xad\x48\x1c\x9d\x44\x86\x45\xaa\x28\xd7\x24\x85\x37\xaf\x9f\xca\xd3\x5e\x30\xe2\xde\xac\x92\x15\xe3\x9a\xb0\x88\xe1\xa7\xfb\x1e\xf7\x4d\xa6\xfa\xe5\xc0\xf1\x4d\xa3\x12\x8c\x7f\xbf\xff\xea\x2d\x97\x4a\xce\x31\xad\x7b\xf9\x56\xee\x39\xa5\xdf\x98\x7e\x8a\xc1\xfc\x0f\x80\x1f\xb4\x54\xec\x88\x2d\xda\x7a\x08\xd5\x56\xf2\x85\x32\x54\x97\xea\x8a\x5e\x98\x9e\xc4\x37\xeb\x2f\x6a\xf8\x2b\x89\x67\xcc\x1e\xab\xdc\xbf\xd9\xe3\x1e\x16\x13\x76\xa1\x03\x34\x90\x4f\x33\x47\x69\x90\x77\x8b\xcf\xe1\xe1\xdf\x92\x29\xfc\x72\x62\xc7\xb9\xd5\xff\x66\x42\xa0\x5a\x82\x7c\x90\x29\x31\x5e\xc4\xf0\xde\xc2\x3a\xf8\xd9\x15\x9e\x62\xa4\x8b\xd8\x1d\xa1\xe8\xb1\x89\xae\x1a\x24\x09\xd2\x9b\xe6\x5f\xf3\xd4\x0b\xff\xba\x8f\xd9\xe3\x60\xa2\xf6\x2c\x98\xa8\x67\x10\x4c\x72\x34\x05\x26\x35\x3f\x02\x06\xeb\xd1\xbf\x49\xce\x89\xdf\x87\x0c\x29\xdf\x5b\x35\x24\xfb\x70\x0b\xf3\x4d\x8e\xf5\x3b\xb5\xf4\x32\xf4\xce\x7b\x3e\x93\x3a\xf7\xc1\x3c\x22\xf7\x6e\xe1\x58\xe1\x3e\x98\x47\xde\xde\x6a\x21\x6d\x5b\x5a\x9a\x12\x76\x0d\xd8\x5e\xee\xfa\xfa\x57\x20\x3f\x44\x94\x41\x02\x94\xb9\xc1\x5a\xdb\x90\x34\x12\x77\x13\xb5\xbc\x21\x69\x54\xee\x26\x2c\x85\x43\x62\xeb\xdd\x85\xf5\x5a\x87\xc4\xe8\xde\x85\xf4\x9a\x87\xc4\xe8\xdf\x85\x58\x52\x87\xc4\x16\xbe\x0b\xf3\x89\x1e\x12\xef\x2c\x84\x88\x96\xec\x1d\xe6\xf0\x43\xe0\x5b\xd3\x1a\x09\x77\x55\x2b\x31\xdd\xb0\xa7\xd9\x69\x82\x99\x01\x0f\xd5\x24\xe7\x5a\x0e\x95\x19\xa5\x43\x85\x76\xad\x4c\xdc\x40\x08\xfc\xc9\x91\x8e\x37\x1e\xa2\xde\x39\x42\xf0\xc6\x83\x27\x6b\x46\xd3\x3d\x59\x13\x0f\x51\xad\x71\x75\xa8\x56\x3c\xb8\x6a\x3b\xc2\xee\x8a\x6d\x6c\x30\x28\xcd\xc8\xd6\x53\x62\x66\xf7\xbc\x3a\xb7\xee\xed\x50\x0a\x38\x31\x12\x1b\x96\x65\x0a\x8b\x22\x86\x8f\xed\x9f\x6b\xeb\x4b\xb5\x8d\x07\xf6\xae\xfe\xf0\xb1\x34\x95\xa5\xd0\x90\xc0\x11\xf5\xc7\xf6\xa1\xab\xb2\x5d\xf5\x30\xd3\x1c\x24\x1d\xa7\xef\x2f\x3a\xa2\xbe\x65\x39\xdb\x13\x27\x5d\x6d\x2c\x77\x7a\xeb\x99\xac\xad\xe1\xed\xa5\x52\xf2\xf5\xcf\xdf\xde\x07\x9f\x32\x2c\x24\x7f\x41\x65\xd8\xe7\xbf\x36\x86\xf6\xe1\x03\xe4\x4c\x50\xba\xb9\xba\x95\x25\xcf\x40\x48\x0d\x6d\x25\x60\xa0\xf0\x80\x0a\x45\x8a\xa0\x25\xe8\x27\xb4\x3a\xbf\xb2\xde\xe7\x85\xf0\xb5\x5b\xc6\xd9\xfb\x4b\x4f\x3f\xac\xfc\xa6\xde\x42\xca\xb6\x6b\x43\x17\x07\xdd\xec\x63\x32\xb8\x57\x8f\xa8\x2f\x5b\x7c\x21\x5d\xbb\x2b\xc5\xce\xa3\x77\x7f\x83\x77\x3a\x24\xf0\xde\x9a\x96\x83\x54\xf0\x8c\x15\x90\xe8\x1a\xb1\x87\x87\x8a\x9c\xb3\x6a\x1d\x15\x6d\xa1\xe8\x19\xab\xc2\xba\xe3\x47\x2b\xfd\x7c\xc6\xea\x57\x7d\x85\xcf\x96\x6a\x90\xeb\xa8\x54\xfc\xa2\xbe\xb6\x7f\x85\xba\x54\xa2\xd3\x96\xeb\x91\xba\xa2\x94\x0d\x7d\x52\x97\xa9\x9f\x86\x6e\xa9\xcb\x65\x5d\x03\x75\x38\x60\x9e\x46\x58\x2b\xeb\xb5\x54\x23\x42\x9f\x8b\x4a\x45\x9b\xad\xd7\x6c\x75\xa4\x3e\xb4\xae\xcf\xfa\xbe\x7b\xb2\x59\x8e\xed\xea\x78\x56\xb0\xd9\xc0\x39\x23\xe6\x39\x0c\xa6\xd9\x3a\xca\x97\x1b\xb4\x50\x89\xe2\xff\x18\xb7\x60\x1f\x16\x6a\xca\xd1\x4d\xbf\x87\x19\xf0\x88\x32\x14\x9a\x0e\x84\x6a\x99\xfd\x9b\x2e\x6c\x90\x73\x85\x3d\x5e\x71\xee\x9d\x17\x17\xdf\x39\x62\xf6\xcc\x95\x2b\xeb\x80\xe7\x9c\xe0\x7b\xa5\x1e\xf0\xa4\x13\x65\x2c\x71\x86\xb4\xe9\xf8\xd6\xa9\x9b\xc2\xe0\xa2\x03\x71\x1c\x8e\x54\xc0\xe2\x4e\x54\xdc\x1b\xdc\x4c\xc5\xfe\xe6\x1c\x85\xc6\x76\xb8\x5b\xb0\x7d\x5e\xb7\x80\xed\xea\xfc\x5f\x00\x00\x00\xff\xff\x0f\x9c\x02\xeb\x82\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd3, 0x3a, 0x5e, 0xb0, 0xbf, 0xf3, 0xf9, 0xc6, 0xd6, 0x66, 0xe4, 0x28, 0x70, 0xbc, 0xad, 0xaf, 0x4c, 0xdd, 0x65, 0x54, 0x2e, 0x8f, 0xd8, 0x14, 0x16, 0x10, 0xa4, 0xd5, 0x28, 0xe6, 0xe9, 0x11}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x31\x0a\x42\x31\x0c\x06\xe0\x3d\xa7\xf8\x79\x93\x2e\xe9\x22\x0e\xee\x0a\x2e\x2e\xea\x01\x6a\x7d\x0f\x0a\x6d\x1a\x62\x02\x8a\x78\x77\x47\xdd\x3f\xbe\xda\x75\x98\x63\xff\xcc\x5d\xdb\x7c\x3a\x5c\xb0\xd8\xe8\x98\x98\x13\x73\x2a\x43\xdc\x72\xf1\x47\xfa\x01\x2e\xf7\x32\x11\x69\xdc\xb0\x84\xa0\xe7\x2a\xab\xf5\x0e\xd7\xa3\xf8\x76\x83\x37\x01\x80\xcd\x1e\x26\x7f\x2b\xfb\xf0\xdc\xce\xa1\xda\x5e\xf4\xa1\x6f\x00\x00\x00\xff\xff\xab\xdd\xb2\x0f\x76\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0x9, 0x60, 0xa2, 0xa5, 0x58, 0x7b, 0xb8, 0xa2, 0x87, 0x3a, 0x50, 0x8b, 0x97, 0x82, 0xd3, 0xf7, 0x78, 0xfa, 0x17, 0x8a, 0xda, 0xc8, 0x54, 0x76, 0x3b, 0xe3, 0x9c, 0x92, 0x0, 0x29, 0x87}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x8e\xa3\x3c\x0c\xbd\xe7\x29\x3c\xbd\x18\xd1\x1b\xb8\x47\xf3\xa3\x7e\xd5\xd7\xbd\xda\x6a\xd4\xe9\x0b\x84\x60\x20\x6a\x9a\x20\xc7\x0c\xb3\x1a\xf5\xdd\x57\xfc\x95\xc0\x76\xba\xda\x5c\x00\x52\xec\x63\x9f\xe3\x63\xd4\xb9\xb2\xc4\xb0\xb7\x66\x57\x9b\x42\xa5\x1a\x8f\xf6\x84\x06\x72\xb2\x67\x58\x45\x51\x1c\x45\xb1\xb4\x86\x49\x48\x76\xf1\x32\x2c\x92\x99\x5c\x05\x03\xc6\xff\x9f\xe2\x5c\x69\xdc\xef\x8e\xdf\x64\x4f\x01\xb3\xbc\xfd\xee\xb8\xb3\xd4\x08\xca\x94\x29\xbe\x49\xad\x59\x69\xc5\xbf\xe2\x59\x6c\x8f\x12\xc4\x71\x0c\xc7\x52\x39\x60\x12\xc6\x09\xc9\xca\x1a\x50\x0e\x9a\x52\x30\x08\x03\x42\x4a\x5b\x1b\x86\xc6\xd6\x3a\x03\xaa\x4d\x97\xc1\x16\x64\x29\x4c\x81\xc0\x25\x7a\x3d\x20\x01\xa1\x54\x95\x42\xc3\x41\xe0\x41\x86\x06\x9b\xc3\x78\xb3\xc9\x32\x42\xe7\x12\x18\x3e\xd6\xf0\x15\x04\x00\x00\x2d\xf4\x01\x73\x24\x34\x12\xdb\x22\x57\xf4\x01\xfc\x80\xce\xd6\x24\xb1\x8b\xd6\xc8\x90\x8f\x75\x0f\x98\x27\xf0\x38\x67\xe8\xf7\x75\xc5\xdf\x5a\xad\xb1\xa7\xd9\x20\x34\x4a\x6b\xc8\xd0\xa9\xc2\x08\x46\x10\x6e\x44\x6c\xd5\x9c\xa8\x8c\xe5\x7c\x16\x13\x50\x02\x5b\x51\x89\xb4\x13\xf9\xe9\xf1\xeb\x8f\x39\x4f\x91\x6f\x75\xaa\x95\xbc\xbc\xf4\x74\x2b\xc2\x4a\x10\x86\x6d\x75\xa4\x04\x36\x35\x97\x9b\x5e\xef\x56\x12\x18\x4e\x1c\xc3\x7f\x96\xc8\x36\x40\xbe\x36\x0b\xd5\x3d\x61\xda\xe3\x50\xe7\x91\xaf\x0e\x3c\x43\x5f\xe7\x1a\xd2\x9e\x28\xed\x90\x9f\xee\x28\xf7\x12\xb6\xae\x4a\xe6\x4e\x8b\xde\xd9\x92\x28\xf0\x4d\x70\xb9\x9e\x21\xbe\xbe\x42\x25\x8c\x92\xe1\x6a\xdb\x59\xc6\x58\x86\xf4\x2f\xed\xaf\xd6\x81\xcf\xf6\x07\x32\x1c\x50\xa2\xfa\x40\xf2\xa4\xed\xdd\xdd\x5a\x82\x16\x4e\x1a\x5d\x3a\x67\x7f\x7b\x58\xf0\x0c\x05\xf2\x20\xf3\x2d\x5b\xce\xe9\x44\x05\xf2\xbf\x4e\x37\xf4\x76\x75\x79\xdb\x0b\xe6\xb3\xfd\x29\x4e\x08\xae\xa6\x7e\x97\x96\xf1\x20\x27\xfe\xca\xc1\x87\xd0\x2a\x83\x14\x73\x4b\x08\x67\x65\xb8\xf5\xe9\xb0\x25\x57\x50\x95\xc3\xc3\x1d\x05\x22\x59\xa2\x3c\x85\xbe\xc5\x3a\x37\x8e\x53\xbb\xdb\x40\x3b\xce\xae\x89\x87\xd5\x24\xd4\x25\xe8\x9f\xdd\x0b\x3f\x51\xd6\x8c\x73\x03\xbf\xf7\xcb\xb3\x58\xa9\x9b\x46\x8d\xfa\x3f\xcb\xb5\xf1\xd9\x8c\x92\x7b\xa3\x5d\x0f\x6d\x5c\x82\xdf\x01\x00\x00\xff\xff\xc1\xd3\x6a\x39\x99\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6c, 0xfe, 0x69, 0x63, 0x87, 0xf, 0x8, 0xfc, 0xf2, 0x23, 0xcd, 0x40, 0x30, 0xfb, 0xf, 0xe2, 0x6c, 0x7b, 0x36, 0x6b, 0x8, 0x54, 0x9, 0x64, 0x6d, 0x45, 0x7d, 0xea, 0x58, 0x70, 0x32, 0x47}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcf\x6f\xe2\x3a\x10\xc7\xef\xf9\x2b\x06\x0e\x7d\x41\xda\x4d\xee\x88\x22\x55\xe8\xf1\x4e\x8b\x56\x2c\x7a\x77\xe3\x4c\x12\x8b\x60\x47\xf6\x84\xb4\xaa\xf8\xdf\x57\xce\x6f\x27\x50\x5a\xa9\x39\xa5\x65\x7e\x7e\xe7\xe3\x71\xc4\x39\x57\x9a\x60\xa7\xe4\xb6\x90\x89\x38\x66\x78\x50\x27\x94\x10\x6b\x75\x86\x79\x10\x84\x41\x10\x72\x25\x49\x33\x4e\x26\x1c\x9b\x05\x3c\xe2\x73\xaf\x89\xf1\x0b\x89\x45\x8c\xd8\xff\x02\x4b\x73\x27\x80\x63\xe3\x78\xff\xfb\xca\xce\x79\x86\xbb\xed\xe1\x8e\x6b\x6f\xe0\xf8\xed\xb6\x87\xad\xd2\x25\xd3\x91\x90\xc9\x1d\xd7\x82\x44\x26\xe8\x2d\x74\x6c\xeb\x28\x5e\x18\x86\x70\x48\x85\x01\xd2\x4c\x1a\xc6\x49\x28\x09\xc2\x40\x99\x32\x02\x26\x81\x71\xae\x0a\x49\x50\xaa\x22\x8b\x40\x17\xb2\xf2\x20\x05\x06\x09\x04\x19\xcc\x62\x28\x72\xfb\x8f\xb8\x0e\x6d\x2b\x32\xf6\x6f\x06\x11\x1a\x91\x48\x46\x18\x55\x4e\x1a\xb9\xc8\x05\x4a\xfa\xc7\x00\x57\x59\x86\x55\x32\xcf\x1b\x64\xf6\x3b\x9b\x97\x28\xd2\x68\xcc\x12\x9a\x97\x05\xbc\x7b\x1e\x00\x40\xae\x31\x67\x1a\x7d\x1b\x1a\xf5\x12\x5e\x0a\x4a\x5f\xea\x22\xad\x0d\x34\x4f\x18\xc2\x26\x65\x32\xc1\x3e\x2d\x30\x19\x81\x46\x2a\xb4\x04\x11\x03\xa5\xd8\x75\xc7\x32\x8d\x2c\x7a\x83\x94\x19\xdb\x74\x2f\x14\xea\x2e\xa2\x88\xa1\xce\x19\x1c\x95\xd6\xaa\x5c\x3d\xb9\x7a\x0e\x9d\xd6\xbe\x9d\xc4\xd2\x9d\x4e\xf0\x87\x94\x66\x09\xfe\x66\x94\x2e\x60\xf6\x0c\x52\x64\x6d\x57\xed\x93\x21\xb5\x42\xa2\xde\x63\x0c\xcf\xdf\x99\x74\x36\xc9\x25\xb1\xdc\xb7\xfa\x6c\xba\x99\xc0\x33\x24\x48\x8d\xaa\x93\x99\x2c\x9c\x28\xf6\x09\x12\xa4\x0d\xcb\xd9\xb1\xe2\x6c\xf5\xf4\x3e\x39\x28\x7d\xec\xdf\xc5\x31\x13\xfc\xba\xf6\x07\x40\x8f\x7f\xad\x8a\x75\x85\x09\x43\xf8\xc5\x4e\x08\xa6\xd0\x58\x8d\x6e\xec\x03\xbc\x2b\xc0\xf2\x7b\x61\x99\x88\xe0\x88\xb1\xd2\x08\x67\x21\xc9\x1e\x0f\xeb\xb7\xdb\x1e\x9c\xc0\x22\x86\xd9\x6d\x15\x02\x9e\x22\x3f\xf9\x43\xaa\xda\x27\x67\x52\x70\x7f\xbe\x1f\x10\xfd\xa0\x1e\xa9\xa8\xae\x69\x36\x77\xf5\xbb\x4e\xfa\xfc\x53\xcf\xa5\x07\xd7\x31\x18\xd2\x11\xf0\x0a\xf1\xae\x0c\x7f\xd8\xc8\xf2\xce\x70\xdd\xf4\xf5\x79\xf0\x6e\x54\x13\x86\xf0\x1f\x12\xec\x91\xa3\xb8\xa0\x86\x7e\xc0\xf5\x9a\xb1\x62\x8e\xd1\x68\x0f\x94\x37\x64\x4c\x4f\x6b\xd8\xb0\xfc\x2b\x8c\x8d\xf8\x9a\x8c\xe3\x33\xc0\x39\x4e\x6b\x7f\x12\xe3\x01\x8e\x8e\xfd\xc2\x51\xe9\xfb\xb9\xb4\x4c\xde\x56\xad\x67\xb2\x65\xf0\x0b\xdc\x8d\xa6\xbb\xd1\xc8\x08\x81\x55\xb0\x0d\x17\x09\x68\x34\xaa\xd0\x1c\x9d\x31\x76\xe0\xc1\xea\xe7\x68\xc7\xf0\x2a\xd2\x0e\xcb\x61\x94\x7e\xa6\xcb\x3b\x08\xb8\x32\x1a\x76\x41\x10\x64\xaf\x8e\xc1\x6a\xee\x2c\x9a\x35\x68\xad\xfc\xd5\xcf\xae\x98\x1f\x40\xea\xa3\x95\xe7\xa4\x28\x64\x26\xe4\x09\xf0\x55\x98\x4a\xf7\xc1\xc6\xeb\x54\x13\xd8\x5c\xde\x37\x66\xdf\x5f\x01\x0e\x90\x8f\x57\x99\x03\x73\x35\xc2\xd5\xd3\x74\xab\x3c\x84\xf8\xc7\x47\xd4\xf6\xaf\x8f\xdd\xdc\xef\x90\x3d\x1a\x95\x5d\x50\xf7\x7e\xee\x86\x5a\x4f\x76\x60\xa3\x42\xad\xe7\xe7\xdb\x77\xf9\xe3\x2d\x7f\xf9\x04\xdc\x58\xe9\x0a\x82\x9e\xb9\x32\xc5\xe6\x80\xf5\x9f\x0e\xcd\x47\xc9\x11\xc7\x90\xd8\xaa\x6e\xdd\x42\xed\x2e\xbb\x8e\xce\xff\x83\x06\x5c\xfd\x88\xe9\x04\xe9\x03\xe6\x3a\xeb\xba\xf1\xab\x77\xf5\xfe\x06\x00\x00\xff\xff\xdc\x44\x1b\x8b\x67\x0a\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x32, 0xeb, 0xd2, 0x4, 0xc7, 0x13, 0xa0, 0xee, 0xc8, 0xc6, 0x9b, 0xcf, 0x2c, 0x4f, 0x89, 0xc, 0x52, 0xf7, 0x5d, 0x8c, 0x36, 0xfe, 0xd5, 0xf0, 0x53, 0x92, 0x95, 0xed, 0xa2, 0xd8, 0x11}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\xf0\xe7\xc3\xaf\x0e\xb0\xda\x97\x61\x07\xa3\x7f\x50\xb4\x2b\xd0\x4b\x57\x64\xd9\x07\x50\x64\xda\xd6\xe6\x88\x86\x44\x37\x2d\x8a\x7e\xf7\x41\x96\xad\xd8\x89\x33\x9f\x94\x88\x7c\x24\xdf\x7b\x94\xda\xb5\x64\x18\x9e\x49\x3f\x76\xba\x52\xdb\x06\x37\xf4\x07\x35\x94\x86\x76\x10\xa7\x69\x96\xa6\x99\x24\xcd\x46\x48\xb6\xd9\x71\x58\x2a\x0b\x19\x47\x03\xc6\xf7\x37\xb1\x6b\x1b\x7c\x7e\xdc\x9c\xc9\x3e\x04\xf8\xbc\x28\xcb\x32\xd8\xd4\xca\x02\x1b\xa1\xad\x90\xac\x48\x83\xb2\x50\x92\xf1\x7f\x95\x68\x8c\xd2\x15\x08\x0d\x23\x6c\x9f\x44\x1a\x41\x48\x49\x9d\x66\x60\x02\xa1\x89\x6b\x34\xd0\x59\x17\xcc\x35\x82\x41\xa9\x5a\x85\x9a\x2f\x2c\xac\x51\xa2\x7a\x45\x03\x06\x2d\x75\x46\x62\x0f\xb1\xaf\x95\xac\x5d\xb1\x1d\x19\x84\x46\xed\x14\x63\x01\x5c\x0b\x0d\x02\xee\xa9\x69\xb0\x6f\xe7\xa5\xdb\x36\x4a\xc2\x7a\x4c\x8d\x26\xad\x26\xa1\x4a\x0e\x77\x45\x61\xd0\xda\x2f\xb0\x57\x5c\x17\x46\xec\x9f\x1e\x72\xf8\xf5\xa4\xf9\xdb\xd7\x15\x7c\x44\x11\x00\x80\x2b\xbb\xc6\x12\x0d\x6a\x89\xae\x6f\xd7\xe9\x18\x8f\xe6\xc2\x82\x0c\x75\xfb\x84\x06\x39\xdc\xaf\xb1\xcc\xe1\xff\x09\x85\x87\x1e\x97\xd0\xa9\xec\xd1\xc3\xec\x4c\x50\x60\x4b\x56\x71\xff\xbf\x63\x93\x29\x14\x19\xae\x7c\x8d\x8f\x13\x95\x47\x94\x4f\x5f\xa9\x35\xd8\x0a\x83\x89\x55\x95\x46\x93\xc3\x5d\xc7\xf5\x9d\x57\xc3\xcd\x0a\xc3\x97\x65\xb0\x25\x63\x68\x0f\x02\xcc\xf1\xd8\x3e\xf7\xc2\xf6\x9d\x1c\x8d\xed\x3e\x8b\x4d\x99\x4e\x66\x87\xeb\x21\x25\x44\xb8\x2f\xf5\x05\xae\x96\x79\xb9\x49\x9c\x61\x72\x58\xbc\xfc\xc9\x64\x44\x85\x2f\x82\xeb\xd5\x0c\xf3\xf6\x16\x5a\xa1\x95\x4c\xe2\x61\x26\x28\x08\x2d\x68\x62\xb0\xec\xbc\x22\x34\xd0\xf6\x37\x4a\x06\xe1\xc9\xb4\x2d\x4a\x55\x2a\x2c\xa0\x15\x5c\xc7\xab\x68\x4a\x41\x85\x3c\x77\xa4\x85\xd6\x7b\x6a\x34\xb0\x07\x0b\x39\x4e\x8f\x10\x0c\xd7\x0e\x60\x68\xe4\xe0\xb7\x79\x89\xc0\xf2\x00\x7c\x42\xf6\xd2\x36\xcc\x99\x3e\x18\x00\xae\x0f\xe1\x73\xae\x2b\xe4\x7b\xd1\x8a\xad\x6a\x14\xbf\x27\x8b\xa4\xfa\x6d\x39\xe5\x34\xe8\xf4\x0f\x6f\xdd\x24\xe7\x74\xb8\xa7\xae\x29\x7a\x01\xce\xfb\x69\x69\xc4\xd8\x03\x0e\xae\xc5\x37\x94\x1d\xe3\xb8\x8c\x03\x77\xa3\xc5\xc2\x56\xf4\x4f\x97\xfb\x41\x7b\xbd\xb4\x93\xa3\x44\xba\x64\xb8\xba\x3c\xf1\x69\x38\x27\xd3\x87\xe0\x70\x9e\x2b\xf7\x70\xb4\x92\x4a\xcf\x87\x39\x27\xd2\x78\x4c\xd8\x71\x98\xc3\xd5\xa5\x2e\x79\x36\x6d\x4b\x96\x27\xbb\xf8\xdf\x49\x9f\x15\xf2\xd3\x83\x4d\x56\xa9\x7b\x9f\x85\xd2\x76\xd2\xf0\x2a\x87\xf8\x87\x51\x95\xd2\xa2\xf1\x3c\x80\xad\x83\x08\xb5\x78\xc5\xd0\xb1\xd0\xef\xee\x01\x8d\x87\xda\x9f\xd1\xdf\x00\x00\x00\xff\xff\xe7\x0a\x79\x43\x51\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8, 0xae, 0xae, 0xed, 0x3, 0xac, 0x97, 0x39, 0xd, 0xd6, 0x19, 0x24, 0x39, 0xef, 0x86, 0xf9, 0x8e, 0xb7, 0x56, 0xa2, 0x88, 0x57, 0x17, 0x7b, 0x35, 0x91, 0x9a, 0x32, 0x9f, 0x40, 0xf1, 0x1b}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x8b\xdb\x30\x10\x85\xef\xfa\x15\x43\x0e\x25\x81\x60\xdd\x97\xb2\xb0\x2c\xcd\xad\x61\xd9\xa6\xbd\x4f\xe4\xb1\x2d\xa2\x48\x66\x34\x4a\xba\x04\xff\xf7\x62\x7b\x1b\xdb\x69\xcc\xf6\xb0\x3a\x19\xf3\x3e\xcd\x7b\x33\x23\x7b\xac\x03\x0b\x6c\x83\xdf\x24\x5f\xda\xbd\xa3\x5d\x38\x90\x87\x82\xc3\x11\x16\x59\xa6\xb3\x4c\x9b\xe0\x85\xd1\x48\xd4\xb7\xb2\xcc\xe4\x66\xa1\xde\xef\xf8\x4e\x82\x39\x0a\xfe\xb2\x74\x8e\x33\x17\x4c\x34\x13\xfa\xdb\x6f\x3c\xd6\x8e\xb6\x9b\xdd\x0c\x3a\x08\x26\xdc\x76\xb3\xdb\x04\x3e\x23\xe7\xd6\x97\x33\x68\x12\xeb\xac\xbc\xe9\x89\xb6\xbf\x45\x69\xad\x61\x57\xd9\x08\xc2\xe8\x23\x1a\xb1\xc1\x83\x8d\x70\xae\x50\x00\x3d\xa0\x31\x21\x79\x81\x73\x48\x2e\x07\x4e\xbe\x23\x24\x80\xb3\xfe\x00\x08\x26\x38\x47\x3d\x25\x01\xac\x44\xa8\xd3\xde\x59\x03\x51\x02\x63\x49\x9d\x1c\x0b\x21\x86\x0a\x4f\xad\x47\x13\x7c\x61\xcb\xc4\x94\x77\xf2\xc1\x14\xb1\x52\x63\x17\x17\xa5\x00\x00\x6a\xa6\x1a\x99\x96\xd1\x96\x9e\xf8\x01\x9e\x92\x54\x4f\xbd\xab\x15\x5c\x3a\x49\x7b\x6c\x01\xbd\x22\x2b\x49\x9e\xb1\xc6\x7d\x17\x7a\x39\xea\xdb\xf3\xd5\xeb\x4b\xe7\xf1\x05\xa5\x5a\x65\xa6\x22\x73\xf8\xfa\xe5\x32\x12\x0e\x9f\xb7\x48\xf3\xb8\x1c\x17\x6d\x8f\x0b\xe5\x72\x31\xe8\x00\x1d\x13\xe6\x6f\xe3\x9c\x45\x60\x18\x4a\x2e\x56\x13\x9e\x49\x12\xfb\xeb\xaf\x46\x7d\x5e\xa4\x7f\xf6\xf5\x95\x0c\xd9\x13\xf1\x5c\x8c\x9f\xbe\x1d\x6b\x3b\xa5\xf1\x58\xfa\xb5\x9a\x0d\xf0\xee\x31\x75\xec\x87\xe6\xee\x05\xd5\x1a\x0c\x13\x0a\x01\xfe\x5d\x1f\x73\x8d\xdb\x75\x4f\x2a\x1a\xad\x9a\xba\x29\xdd\x16\xbe\x17\xf7\xd6\xc0\x1a\xfe\x6b\xc8\xeb\xe9\x5b\xce\x5e\x29\x06\x77\x22\x1e\x74\xcd\xe3\x72\xd2\x82\x0f\x42\xaf\x27\x62\x41\x2e\x49\x1e\xee\x43\x3f\xfa\x67\xd3\x52\x57\xa8\xef\x59\xa3\x1a\xf5\x27\x00\x00\xff\xff\x1f\xa4\x6e\x54\xaf\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x4a, 0x75, 0xe3, 0xff, 0x97, 0x9d, 0xa7, 0xd4, 0x65, 0x8f, 0x32, 0x23, 0x1, 0x71, 0x9a, 0xfa, 0xa4, 0x4f, 0xf2, 0x6b, 0x40, 0x25, 0x65, 0xe9, 0x99, 0xa8, 0x35, 0x71, 0xbd, 0x1d, 0xcb}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\x9b\x40\x14\xbc\xf3\x15\x53\x0e\x2d\x1c\x0a\x97\xaa\x07\x94\x36\x8a\xea\x46\xf2\x25\xaa\x52\xf7\x03\x96\xdd\x87\xd9\x76\xbd\x0f\xed\x3e\x4a\xaa\x28\xff\x5e\x61\xb0\x4d\x2c\x94\xbd\xd8\x62\xe7\xcd\xcc\x9b\x59\x7b\xe8\x38\x08\x1e\xd8\xdf\xf7\x7e\x6f\x6b\x47\x3b\xfe\x43\x1e\x4d\xe0\x03\xd2\xa2\x28\x35\x7b\x09\x4a\x4b\x2c\xaf\x31\x85\x36\x3a\x4d\x66\x82\xef\x4f\xea\xd0\x39\x7a\xb8\xdf\xad\x8d\x5e\x6e\xa7\xa1\xa4\x2c\x4b\xec\x5a\x1b\x21\x41\xf9\xa8\xb4\x58\xf6\x18\xac\xb4\x26\xa8\x21\x42\x79\x9c\x99\xa4\x25\x44\xbb\xf7\x14\x22\x34\x3b\x47\x13\x58\x79\x03\x43\x51\x02\xff\x8b\xb0\x92\x24\x0b\xa6\xcc\x9a\x0a\xbf\xb6\x5e\x3e\x7f\xca\xf1\x9c\x24\x00\x30\x2a\x3e\x52\x43\x81\xbc\x26\x48\xab\x04\x83\x75\x0e\x35\xa1\x8f\x64\xd0\x70\x38\x4a\xf1\xe0\x29\x7c\x58\x4a\x1d\xc7\x1d\xc9\xe2\xd3\x23\x35\x15\xde\x2f\xb6\xfa\x76\x41\x1f\xe1\x5d\xa0\x4e\x05\xca\x26\xe3\x15\xee\x7a\x69\xef\xb4\xe6\xde\xcb\xd9\xd1\xe4\x0a\x35\x87\xc0\x03\x14\xc2\xc5\x1d\xbf\x65\x65\x3c\x91\x5c\x53\xbc\xf2\x83\x2f\x73\x4a\xc5\x44\x78\xb3\x6e\xef\x6b\x36\x86\x5a\x61\xf5\xf2\xa7\x70\x50\x7b\xfa\xa1\xa4\xcd\xcf\x52\xe3\xb9\xbd\x45\xa7\xbc\xd5\x59\x3a\x2f\x01\xc3\x14\xe1\x59\x10\x85\x03\x8d\x85\x71\xfd\x9b\xb4\x40\xc9\xd4\x58\x47\xda\x36\x96\x0c\x3a\x25\x6d\x9a\x4f\x2b\xbf\x4c\x3f\xf4\x44\xba\x17\xba\x0a\xe2\x54\xff\x71\xfe\x55\xfd\x6f\x04\x31\xf6\xe2\x1b\xc1\xcd\xc7\x95\x4c\x8a\x13\x65\x76\xfa\xb3\xdd\x54\xb0\x26\xbf\xe8\xce\x4f\x68\xe4\x58\x3a\xec\x38\x0a\x9e\xcf\xa8\x77\x2b\xdc\x7b\x92\xed\x26\x66\x79\x31\x3e\x73\x65\x7d\xcc\xac\xc9\x2b\xa4\xbb\xd9\xfd\x28\x79\x15\xc5\x76\x83\xd8\x72\xef\x0c\x5a\xf5\x97\x50\x13\x79\x18\x72\x24\x64\xd2\x59\xfd\x25\xf9\x1f\x00\x00\xff\xff\x58\x09\x99\x3f\x92\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0xb6, 0x48, 0x75, 0xda, 0xd1, 0x32, 0x83, 0x28, 0x3b, 0xb4, 0xe5, 0xa8, 0x54, 0x62, 0x8, 0x1a, 0x27, 0xbb, 0xdb, 0xfb, 0x16, 0xca, 0x5a, 0x71, 0xaa, 0x9f, 0xe4, 0xd9, 0xad, 0x63, 0x48}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5d\x4f\xe3\x3a\x13\xbe\xcf\xaf\x98\xed\x05\x9b\x6a\x57\xed\x8b\xb4\xda\x8b\x68\xcb\x8a\x8f\x17\x89\x0b\x10\x82\xee\xb9\x41\x5c\x38\xce\xb4\xf1\xc1\xb5\x73\xec\x49\xa1\x42\xfc\xf7\x23\x7f\x24\x8d\x4b\x40\x27\x17\x90\xc6\xcf\x8c\x67\x9e\x79\x66\x6c\xb1\x69\xb4\x21\xb8\xd1\xea\xb2\x55\x6b\x51\x4a\x5c\xea\x27\x54\xb0\x32\x7a\x03\x93\xd9\x6c\xce\xb5\x22\xc3\x38\xd9\xf9\x21\x66\xc6\x2b\x3e\xc9\xa2\x83\xff\xbf\xb0\x4d\x23\xf1\xe6\x72\x39\x66\xba\x5f\x4d\x8c\xae\x91\x58\xc5\x88\xfd\x25\xf0\xd9\x8e\xd9\x25\x80\xc4\xf4\x83\x68\x5b\x12\x52\xd0\x6e\x3e\x12\x68\x36\x9f\xcf\x61\x59\x0b\x0b\x96\x1b\xd1\x10\xb4\x16\x2d\x50\x8d\x70\x73\xb9\xbc\x16\x8a\xd0\x80\x41\xab\x5b\xc3\x11\x48\xc3\x46\x28\x02\x06\x0a\x9f\x1d\xc0\x5b\x5f\x11\x6c\x5a\x4b\x50\x22\x98\x56\xc1\xb3\xa0\xda\x3b\x60\x9c\xeb\x56\x11\x50\xcd\x08\x6a\x16\xbc\x6e\x52\x97\xde\x81\x25\x6d\xb0\x02\xa1\x60\xee\x5e\xd9\x1a\xe7\xfd\xe6\x59\x46\x86\x29\xcb\x38\x09\xad\xf2\x0c\x00\xc0\x20\x17\x8d\x40\x45\x05\x9c\x56\x95\x41\x6b\xbf\xfb\xef\x8a\x6d\xb0\x80\x7b\x32\x42\xad\xc3\x97\x0a\x43\x52\x42\xab\x74\x81\xea\x76\x53\x2a\x26\x64\xfa\x99\xb7\x64\x0b\x78\xf8\x73\x29\x5e\x7e\xfe\x78\x0c\xdf\x8c\xde\x31\x49\xbb\x8b\xbd\x2b\x07\x09\x56\x29\xe4\x0c\x15\xae\x04\x17\xcc\x08\x74\x98\x18\xdc\x23\x64\x53\x78\xcd\x3c\xd2\x65\x2b\x35\x67\x12\xb6\xcc\x08\x56\x4a\x84\x95\x36\x9e\x00\xa1\xd6\x29\x41\x2b\x34\xa8\x38\x7a\x3b\x89\x14\x17\x0a\x38\x1a\xc8\x66\x40\x53\xe7\xfe\xae\x33\x74\xd5\x72\x0e\x0d\x72\x14\x5b\x34\x5f\x2d\x70\x2d\x25\x7a\x26\x7b\xaf\x3d\x99\xe7\xfd\xda\x1d\xae\x0a\x38\x7a\x7d\x27\xec\x3d\xe2\xb6\x2d\xa5\xe0\x6f\xfb\x4d\x6f\x0d\x6e\x85\x6e\xad\xd3\x04\x5c\x5d\x40\x89\x2b\x6d\xd0\x6f\x3f\x28\x1f\xe0\x0b\xf2\x96\xd0\x26\x39\x09\xb5\xbe\xba\x38\xf3\x06\x05\xfc\xb9\x52\xf4\xf3\x47\x70\xdc\x18\x6c\x98\xc1\xdc\x8a\xb5\x72\x89\x9f\xb6\x54\x9f\x06\x4d\x39\x42\x21\x3e\x16\xe5\x6a\x76\xe0\x08\x16\x83\xd6\x9b\x91\x26\x26\xef\xdb\xa6\x91\xbb\xac\x37\x9b\xcf\xa1\xd4\xc6\xe8\x67\x60\x7b\xb2\x3b\xce\x46\xb4\x2f\x14\x44\x71\xbe\xdf\x19\x0d\x2c\x20\x84\x39\x0b\x4e\x7f\x8d\x56\xe9\x24\x77\x2d\x59\x0c\x63\x0b\x0b\xf7\xc1\xf3\x2d\xa3\x7a\xda\xbb\x77\xcf\xef\xdf\xd0\x30\x25\x78\x3e\x89\x99\x43\xa5\xd1\x82\xd2\x14\xba\x06\x98\x02\x5d\xfe\x8d\x9c\x80\x91\x0f\xdd\x36\xc8\xc5\x4a\x60\x05\x0d\xa3\x7a\x32\x4d\x32\x3e\x0b\x19\x47\x59\x84\xc2\x7f\xb5\xd0\xf8\x7a\xfa\xe2\xed\x25\x72\x20\xc1\x3e\xe1\x71\xc5\xc0\x02\xd6\x48\x31\xc8\xbc\xc7\xa4\xd9\xcc\xd6\x48\xe7\xac\x61\xa5\x1f\x47\xf9\x80\x86\x43\x6d\xbd\x67\xa2\x27\xf6\x3f\x08\xf3\x24\xff\x88\xc5\x73\xdd\xca\xca\xd3\xb7\x0e\xe2\xf7\xad\x31\x2a\x00\xd8\xbb\x9d\x04\x77\x6f\xbd\x2e\x07\xf2\x73\x33\x63\x26\x51\xad\xa9\x86\xc5\x62\x6c\x5c\x74\xab\x47\x47\x1f\x80\x93\xc1\x11\x97\x0b\x98\x9c\x1a\xc3\x76\x10\xd1\xb6\xf6\x91\x97\x08\xf8\x4f\xcb\xa4\x1f\x1b\xd1\x1c\x0c\x4a\x46\x58\x41\x85\xc4\x84\xb4\x93\x61\xb0\xb1\xe5\xba\x01\x14\x75\x70\x6e\x90\x51\xe8\xcf\xce\x49\x34\xee\x51\x5b\x66\x20\x28\x6e\x01\xff\x4b\xbe\x06\x8b\x30\xe3\xd2\xa3\xe8\x2e\xf8\x7a\x84\x05\x3c\x3c\xf6\x36\xcf\xb5\x90\xf8\x59\xae\x70\x12\x77\x7a\x4d\xaa\xe6\x06\x44\xd9\xc3\x77\x30\xce\xd7\x83\x37\x7d\xfc\xcc\x72\x2f\xb9\x54\xa5\x03\xc8\x67\x3a\xfd\x75\xf4\x9a\xea\xed\x2e\xca\xe6\xed\x24\x4f\xf3\x5f\x23\x45\x0a\x3a\xc8\x5e\xcd\xf9\x74\xd0\x8a\xb1\x0c\xd7\xec\x09\xc1\xb6\x26\xad\x04\xdf\x87\x2b\x2c\x6c\x99\x14\x55\x37\x50\xe3\x98\xeb\x24\x9a\xf8\x13\x2b\xf8\x32\x9a\xf4\x8c\xd7\xc8\x9f\xf2\x29\xbc\x76\x5d\x70\x36\x60\x35\xdd\xcd\x75\x86\xdf\xf1\xcb\x64\xda\x49\xa8\x7b\xfa\xba\xcf\x58\xd3\xa0\xaa\xf2\x64\xd5\x3d\xa3\x6a\x78\x0f\x83\x70\x88\x7b\x82\x8a\xf1\x42\x7d\x1f\x35\xe2\x2d\x15\xbe\x87\x62\xd1\xc7\x51\xc9\xa9\x3f\xd2\x8f\x63\x8a\x71\x4f\xaa\x81\xf4\x57\xd7\x09\xe1\xff\x37\x38\xee\x57\xdf\xb2\x2c\x69\x2d\x37\xd0\xfb\x11\xc2\x94\xeb\xca\x46\x5b\x41\x20\x68\x70\x22\xf7\xa3\xf7\xe0\x48\x86\xf4\x58\xf1\xff\x6e\x2e\x97\x29\x87\x83\x0b\xd0\x27\x13\x39\x25\x27\x5c\x8e\xdc\xdf\xf4\x7b\x42\xd6\xe0\x47\x8a\x1a\xdc\x97\xfa\xd7\xef\xe3\xe2\x28\xf6\xaf\x59\xca\x65\x37\x3e\xb5\xa5\xc3\xe3\x7b\x3c\x03\xd7\x4f\x57\x17\x36\x9f\xce\xdc\xdd\x97\x09\x65\xf3\xb1\xc3\x7e\x5a\xc0\x64\x59\x23\x28\x7c\xa1\xee\x02\x12\xc7\x65\xcd\xb6\x08\x25\xa2\x0a\xb7\xa7\x2a\x16\x44\x3a\xe5\x61\x35\xe9\x83\x18\xbf\x2c\xb8\x11\x3d\x7a\xbb\xf8\x06\xc7\x71\x4f\x8f\x06\x1b\xe0\xef\x36\x15\x8a\x1b\x64\x16\x2b\x28\x77\x70\xdc\xcd\xe5\xb7\x0c\xfe\x0d\x00\x00\xff\xff\x7f\x3a\xa1\x3c\x60\x0c\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x85, 0x3b, 0xf, 0x26, 0xb6, 0x1d, 0x2d, 0x9d, 0xe0, 0xe4, 0x4f, 0x47, 0xcf, 0xe4, 0xe, 0x8c, 0x21, 0xdc, 0x46, 0xe, 0xac, 0x30, 0x6d, 0xd4, 0x2f, 0xea, 0xb2, 0xfe, 0xd4, 0x4c, 0xf2, 0x1d}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\xbc\xe6\x10\x6c\x70\xac\x7b\x70\x03\x21\xc4\xb7\x9a\x90\x9a\xde\xc7\xeb\x91\xb5\x64\xbd\x2b\x66\x47\x56\x8d\xf1\x7f\x2f\x92\x5c\x7d\x34\x82\x66\x4f\x62\xf7\x7d\xcd\xd3\xd8\x63\x11\x44\xb1\x09\x7e\x5d\xfa\x83\xdd\x39\xde\x86\x0f\xf6\xc8\x24\x1c\x71\xb7\x5c\xa6\x26\x78\x15\x32\x1a\xd3\x7f\x31\x4b\xb3\x37\x77\xc9\x4d\xe0\xf5\x37\x1d\x0b\xc7\x9b\xf5\x76\x8a\xda\xbf\x8e\x48\x3f\x58\x69\x4f\x4a\xbf\x2c\x57\x71\x8a\x37\x02\xb4\xd4\x24\x4d\x53\x6c\x73\x1b\xa1\x42\x3e\x92\x51\x1b\x3c\x6c\x44\x95\x93\x82\x3c\xc8\x98\x50\x7a\x45\x15\x4a\xb7\x87\x94\xbe\x61\x68\x40\x64\x85\xd5\xc8\x2e\x43\x59\xd4\x17\xc2\x86\xed\x89\xb1\x59\x6f\x63\x92\x0c\xe5\x2e\x49\x02\x00\x85\x70\x41\xc2\xb3\x68\x0f\x9e\xe5\x11\xcf\xa5\xe6\xcf\xad\xfc\x1c\x97\x06\x52\x9f\x34\xc5\x3b\x6b\x29\x1e\x4c\xe2\xce\xb0\x19\x34\xe7\x2e\x08\x39\x61\xda\x9f\x91\x53\x04\xc1\x04\xe7\xb8\x71\xe9\xf8\x36\x43\xeb\xb0\xdc\x05\x91\x50\xad\xee\x07\x7d\xbd\x74\xf8\xa7\x59\xdd\xd0\x23\x26\x1f\x7f\x6a\x10\x3a\xf0\x1b\x69\x3e\xc7\xb7\xef\xf0\xd6\x0d\x12\xd6\x47\x9a\x88\xdd\xd5\x35\x19\xe6\x7f\x11\x26\x65\x10\x3c\x57\xe0\x63\xa1\xe7\xa9\xa0\x8e\x75\x70\x8d\xd5\xc3\x30\x8b\x69\x24\x5e\x6b\x6e\x1f\x6b\x36\x1f\xd9\x44\x3a\x31\xac\xd6\xe5\x0f\x1a\xea\x10\xb7\x16\x6a\xd4\x6c\xf5\xd0\x3b\x2d\xa0\xe1\x0b\x73\x8f\xac\xcc\xdf\x89\x8a\x72\xe7\xac\x81\xa1\x82\x76\xd6\x59\x3d\x23\x0b\xd2\xd8\x4f\x4c\x78\x4b\xe0\xac\xff\x58\xdd\x5f\x3e\x6d\x7c\xef\xfb\xd6\xa8\x2e\x86\xa1\xfa\xcf\xcf\xb0\xf1\x22\xbf\x73\x0c\xee\xc4\xd2\xe3\xae\x4f\xb3\xd1\xcf\x9a\x9c\xb5\x15\xab\x47\x5d\x8c\xc0\x4a\x72\x60\xfd\x7f\x41\x1d\x69\x9e\xb4\x1b\x70\x4d\xfe\x04\x00\x00\xff\xff\x96\xfc\xd1\x2f\xff\x03\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0xd8, 0x1f, 0x7d, 0x90, 0x19, 0x13, 0x9, 0x9a, 0x74, 0x10, 0xdf, 0xda, 0xc0, 0x85, 0x8, 0x8c, 0x35, 0xb3, 0x94, 0x46, 0x9d, 0x31, 0x94, 0x71, 0xde, 0x7a, 0x3b, 0xf3, 0xfb, 0xbc, 0x7a}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\xbc\xf8\xf0\x43\x02\x47\xba\xfc\xe8\xc1\x38\x09\xc1\x8d\xa1\x87\x9a\x50\xdc\xde\xc7\xab\xb1\xbd\x44\xde\x15\xbb\x23\xab\x21\xe4\xbb\x17\xfd\xb1\xe4\xb5\x03\x29\xd5\x69\x91\xde\x7b\x33\x6f\xe7\x8d\xf4\xa1\xb4\x4e\xb0\xb2\x66\x59\x99\x9d\xde\x14\xbc\xb6\x2f\x6c\xb0\x75\xf6\x80\x49\x9a\x66\xca\x1a\x71\xa4\xc4\x67\x97\x98\x54\xe5\x6a\x12\xf5\x02\xdf\x59\x28\x27\xa1\x5f\x9a\x6b\xff\x11\x3b\x00\x04\xd4\xa7\xdf\x74\x28\x0b\x5e\x2d\xd7\x1f\xf1\xc6\xaf\x1d\x29\xca\xb2\x0c\xeb\xbd\xf6\x10\x47\xc6\x93\x12\x6d\x0d\xb4\x47\xbd\x27\x01\x19\x90\x52\xb6\x32\x82\xda\x56\x45\x0e\x57\x99\x96\x21\x16\x9e\x05\x5a\x3c\x17\x5b\x54\x65\xf3\xc2\xb1\x62\x7d\x64\xac\x96\x6b\x9f\x76\x9a\xdb\xca\xb4\x82\x2d\xa7\xf2\xec\x71\x6c\x0d\x89\xc5\x8b\xb1\x35\xea\x3d\x3b\x3e\x89\x35\x2a\x7b\x86\xb2\x45\xc1\x23\x4b\x1b\x78\xb1\x8e\x76\x0c\x32\x79\x83\x55\x8e\x49\xb8\xc5\xf2\xa1\x94\xd7\x33\x46\x1a\x45\x67\x36\x62\xca\x73\xc7\xde\xcf\xf0\xd8\x1d\xa6\x28\xab\x4d\xa1\xd5\x33\xc9\x7e\x86\xe7\xe1\x3c\x85\xce\x67\xf8\xf9\xcd\xc8\x97\xff\x13\xbc\x45\x11\x00\x94\x8e\x4b\x72\x1c\x7b\xbd\x33\xec\x66\x78\xac\x64\xff\xd8\x5d\x46\x83\x41\xff\x14\x2c\x67\x0d\xe0\x0e\x3b\x96\x1e\x76\xaa\x9f\x0c\xe0\xe6\x49\x77\x2c\x0b\x2a\x69\xa3\x0b\x2d\xaf\xf1\xd8\xd1\x05\x6c\x63\x9d\xb3\xf5\xfc\xbf\xb7\xab\xa0\x2c\x86\x72\x9d\x85\x69\x18\x97\xf4\x07\x7b\x5b\x1c\xd9\x8d\xb8\xf7\xfb\x38\x54\x7f\x78\x40\x49\x46\xab\x78\xb2\x68\xe7\x6a\xac\xa0\x2b\x08\x82\xe3\x2d\x3b\x36\xaa\x9d\x4c\x38\x92\x49\x12\x05\xce\x5d\x5f\x0a\x77\xe7\x53\xe8\x94\x9a\x66\x4e\xad\xc4\xcd\x05\xeb\x3c\xb9\x09\xd8\x66\x2b\x63\x8f\x0d\x1c\x77\x83\x62\xda\x1f\x9a\xd7\xf1\xfa\xb5\xe4\x79\x68\x72\xb5\x5c\x8f\xdc\xaf\x24\x74\x1f\x27\xc9\x0d\xc8\xdf\xe0\x13\xe0\xe8\x20\xcb\xb0\xe8\xc2\x44\x30\x5c\x5f\xc5\xc9\x07\xdd\xb6\x5f\x47\x29\xcc\x6f\xaf\x0d\xa4\x5d\x38\x9f\x42\x68\x9c\x04\x35\x3d\x1d\x19\x5a\x4e\xb7\xdb\x6f\xd8\x80\xe8\x02\x97\x36\xa8\x78\x7e\x7b\x51\x75\x0a\xb1\xb3\x0f\xea\xf6\x3b\xd2\xe5\xe8\xbc\x98\x3a\x19\xec\x82\x06\x35\x44\x0f\x5b\xeb\x2e\x37\xee\xa2\x87\x42\x9b\x97\xbf\x4b\xe0\xd9\x7f\x65\x3c\xfe\x53\x50\x83\x9c\x5e\x1b\x1d\xf7\x65\x1a\x20\x85\xdc\x8e\xe5\x93\xab\x19\x18\xdd\x36\xbc\x47\xef\xd1\x9f\x00\x00\x00\xff\xff\xe6\x99\x0e\x1e\xb2\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0xb9, 0x73, 0xc0, 0x2c, 0xb2, 0xf5, 0xa8, 0xea, 0x94, 0xf9, 0x6d, 0xd3, 0xe3, 0x35, 0x70, 0xb, 0xe, 0x4f, 0x6e, 0x47, 0xf6, 0x26, 0x79, 0x85, 0x46, 0x15, 0x30, 0x29, 0x31, 0x6e, 0xdf}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\xc1\x6a\xeb\x3a\x10\xdd\xe7\x2b\xa6\x59\xb4\x09\x04\x7b\x5f\xda\x42\xdb\x47\xe1\xc1\x2b\xaf\xb4\xbd\xbd\xdb\x4c\xe4\xb1\x3d\x44\x91\x8c\x34\x4e\x6a\x42\xfe\xfd\x22\x39\x76\xac\x4b\xb3\x08\x18\x9d\x39\x73\xe6\xcc\x99\x59\x9e\xe7\xf0\x59\xb3\x07\x71\x68\x3c\x2a\x61\x6b\x80\x3d\x20\x08\xed\x1a\x8d\x42\x50\x5a\x17\x3e\x2f\xef\xb1\x48\x2c\x28\x47\xe1\x1d\xc1\xd0\x01\x34\x9b\x2d\xb0\x01\xa9\x89\x1d\xa0\x52\xb6\x35\x12\x50\x1b\x82\xd6\x53\x11\x69\x1c\x29\xe2\x3d\x9b\x0a\x9c\xed\x50\x0b\x93\xff\x59\x81\x42\x93\x14\xa2\xe9\xa0\x6c\x4d\xc5\x1b\x4d\x20\x76\x4b\x66\x05\x87\x9a\x55\x1d\xb4\xfa\x86\x14\x97\x4c\x05\x6c\xba\xd0\x1f\xd6\x7b\x6c\xb5\xbc\xa1\xd4\x6b\x40\x57\xb5\x3b\x32\x12\xfb\xc4\xbf\x7f\xcb\x08\x1a\x24\x1e\xd0\x88\x0f\x42\x7b\x71\x74\x91\x16\xc6\x79\xf9\xef\xff\xdf\xab\x80\xef\x6e\xb4\x0e\x7a\x60\x9d\x7b\xb1\x0e\x2b\xca\x4b\x6d\x0f\x9f\x41\xcb\x57\x68\xb7\x9e\x90\x77\x91\x75\x4a\xca\x12\xd8\x7e\x7d\xfc\xf3\xbc\x3a\x03\x6c\xab\x8b\x48\xf8\xc2\x28\x91\x26\x8b\x3c\x1f\x3d\x7b\x50\x1f\x19\xd1\x14\xe0\x2d\x58\x93\xc1\xd9\x2b\x82\x06\xa5\xbe\x98\x13\xa6\x69\xda\x8d\x66\x75\xde\x82\x3f\xef\x24\xc2\xa4\x46\x39\x2f\x06\xca\x56\x5a\x47\xab\x80\xa0\xef\x86\x94\x50\x31\x11\x39\xb6\xab\xc8\x90\x63\x95\x1a\xad\xa2\xe0\x4d\xcc\xc3\x01\x5d\xd1\x97\x46\x27\x9b\xc6\xd9\xc6\x71\x08\x43\x74\x7e\x36\xe3\x5d\x63\x9d\xc0\xcb\x79\x65\x71\x3c\x28\x9d\xdd\xc1\x3c\xcb\x72\x65\x8d\x38\x54\xe2\xf3\x04\x90\xa9\x42\xcd\x87\xd2\x57\x12\x2c\x50\xf0\x8b\xe9\xe0\x7f\x2a\x4d\x00\x7d\xe9\x6c\x12\xa1\xc5\x98\x81\x5b\x98\x58\xba\x84\xe3\x6c\x06\x00\xd0\x38\x6a\xd0\xd1\xc2\x73\x65\xc8\xdd\xc2\x63\x2b\xf5\x63\x1f\x89\x11\x13\x7e\x79\x0e\xef\x24\xad\x33\x40\xe8\x74\x07\x9c\xa6\xa7\xb0\xe4\xcd\x8d\x40\x8d\xfb\x70\x09\xe9\xc0\x71\x9f\x23\x13\x97\xd0\x37\xcb\x36\xd6\x39\x7b\xb8\xbb\x4e\xa7\x8f\xe8\x87\x45\x18\xf5\x16\x46\xf5\x4b\xb8\xbf\x07\xc3\x1a\x8e\x23\x51\x94\x8f\x86\xd5\x62\xfe\xd8\x03\xc7\x18\x5c\x4e\x21\xbd\x96\x3e\x0a\x41\x2c\x18\x2b\x40\xdf\xec\x65\xbe\x1c\x19\x4f\xc9\xbc\xcf\xc3\x5d\x9f\x43\xa5\xb0\xc1\x0d\x6b\x96\x6e\xd8\x78\x94\xda\x27\xcb\x1a\xdd\x85\x30\x59\x4f\x7e\x4a\x12\x60\x05\x35\xd6\xb3\x04\x2d\xfd\x59\x4b\xed\x6c\x5b\xd5\xf1\xf1\xbd\x0f\x9d\x03\x36\x42\xae\x44\x45\x63\xb9\x26\x99\x36\xbd\x1f\x7c\x0b\xe9\xbe\xbb\x3e\xa6\xb6\x0d\x3c\xab\xd4\xfc\xec\x09\x35\x1a\x45\xa7\x87\x45\x62\x5c\x1a\x9b\x8a\xe4\x3d\x9e\x7b\x37\xd0\xbc\xc5\x99\x83\xf3\x8b\xe5\x2a\xa9\x14\x74\x15\xc9\x64\x35\xe3\xeb\xf2\x2a\xf1\xef\x15\xb7\x04\xbe\x75\x14\xe7\x9c\x0c\xc2\x1e\xf6\xa8\xb9\x98\x46\xe2\xea\xf2\x9e\xa9\x9a\xd4\x76\xb1\x84\xe3\xb0\xde\x27\x32\x54\xb2\x62\x74\xdd\x5f\x3c\x61\x8b\x91\xeb\x6a\xbe\x84\xd3\xac\x5f\xe2\xe9\x4f\x00\x00\x00\xff\xff\x4c\x27\xfa\x17\xcf\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2, 0xb1, 0xc6, 0xb8, 0x54, 0x3, 0xf, 0xdb, 0xd9, 0x35, 0xc8, 0x64, 0x5d, 0xb5, 0x10, 0x2d, 0x4, 0xb0, 0xec, 0xc4, 0x9d, 0x3f, 0x8, 0x34, 0x1d, 0x87, 0xa8, 0x71, 0x49, 0xbb, 0xaf, 0xce}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\x3e\xac\x0e\xb0\xc6\x97\x61\x07\xa3\x1f\x28\xda\x15\xe8\xa5\x2b\xba\xec\x07\x28\x32\x6d\x6b\x73\x44\x83\x62\x9a\x16\x45\xff\xfb\x20\x7f\xc8\x4e\xe2\x60\xf3\x49\x89\xc8\xf7\xc8\xc7\x47\x99\x4d\x43\x2c\xf0\x48\xf6\x7e\x6b\x4b\xb3\xae\x71\x45\x7f\xd0\x42\xc1\xb4\x81\x78\xb9\x4c\x35\x59\x61\xa5\xc5\xa5\x87\x31\x4b\x9d\xeb\x38\xea\x01\xbe\xbf\xaa\x4d\x53\xe3\xe3\xfd\x6a\x2e\x75\xbc\xed\x92\xa2\x34\x4d\x61\x55\x19\x07\xc2\xca\x3a\xa5\xc5\x90\x05\xe3\xa0\x20\xee\xfe\x2a\x90\xd9\xd8\x12\x94\xcd\x61\x00\x6d\xb3\xc8\x22\x28\xad\x69\x6b\x05\x84\x40\x59\x92\x0a\x39\x8a\x26\x40\x09\xa3\x36\x8d\x41\x2b\x19\xdc\xe4\x39\xa3\x73\x5f\x60\x67\xa4\xca\x59\xed\x1e\xee\x32\xf8\xf5\x60\xe5\xdb\xd7\x05\xbc\x47\x11\x00\x80\x87\x7d\xc6\x02\x19\xad\x46\x0f\x2a\x15\x86\x78\xe4\x33\x07\x9a\xea\x1a\x5b\xec\x36\xa1\x46\x09\xf7\xcf\x58\x64\xf0\x79\xd2\xe0\xed\x18\x3b\x83\x4e\x45\x8b\x3e\x02\x7a\xbe\x1c\x1b\x72\x46\xda\x1b\xdf\xac\x50\xa0\xe9\xaf\x3a\x96\xf7\xa3\x11\x8c\x64\x4f\xdb\x75\x6d\xf4\x47\xc7\xd9\x30\x36\x8a\x31\x71\xa6\xb4\xc8\x19\xdc\x6c\xa5\xba\xe9\x44\xf3\x5d\x43\xff\xa5\x29\xac\x89\x99\x76\xa0\x80\x0f\x05\xe8\x72\xcf\x5c\x5b\xd1\x81\x00\xfe\x73\x58\x17\xcb\x89\x0a\x70\xd9\xa7\x84\x08\xff\x2d\x3b\x82\x8b\x79\x85\xae\x12\x3f\xd7\x0c\x66\x2f\x7f\x0a\xb1\x2a\xf1\x49\x49\xb5\xd8\xc3\xbc\xbe\x86\x46\x59\xa3\x93\xb8\xef\x09\x72\x42\x07\x96\x04\x9c\x10\x23\x28\x0b\xb4\xfe\x8d\x5a\x40\x75\xa2\xba\x06\xb5\x29\x0c\xe6\xd0\x28\xa9\xe2\x45\x34\x95\xa0\xc4\x2e\x28\xb8\xc6\x41\xd3\x8a\x19\x7c\xd6\x81\x85\x1c\x3f\x97\x10\x0c\x97\x1e\xa0\x2f\x64\x74\xde\x3e\x45\x50\xb9\x07\x3e\x12\x9b\x51\xa3\x79\x41\x3e\xb2\x5a\x50\x7a\x34\x02\x5c\x8e\xec\xfb\x5a\x97\x28\xb7\xaa\x51\x6b\x53\x1b\x79\x4b\x66\x45\xed\x6c\x72\xac\x69\x98\xd3\x7f\x78\xec\x2a\x39\x35\x8f\x5b\xda\xd6\x79\x3b\x88\xd3\xbe\x1a\x5a\xdd\x5b\xab\x61\x24\xbd\x7f\xf1\x15\xf5\x56\x70\x58\xd0\x5e\xc5\xc1\x6c\x61\x4f\xda\x97\xc6\xff\xa0\x9d\x9d\xdb\xd3\x61\x58\xb6\x10\xb8\x38\x3f\x72\x6c\x38\x27\xd3\xc7\x61\x3c\xef\xcf\xf0\xee\x60\x49\x8d\xdd\x77\xcd\x3c\xfd\xc1\xec\x86\x63\x22\x5e\xda\x0c\x2e\xce\x6d\x21\x8b\x69\xeb\x0d\x39\x99\xac\xe8\xa7\xa3\xa2\x4b\x94\x87\x3b\x97\x2c\x96\xfe\x79\x55\xc6\xba\x49\xf5\x8b\x0c\xe2\x1f\x6c\x4a\x63\x55\xdd\x89\x02\xae\x0a\x33\xa9\xd4\x0b\x86\xf2\x95\x7d\xdb\x10\x63\x7c\xb2\xd2\x7f\xf1\xac\xfa\xe6\xf1\x65\xca\xb2\xf3\xb4\x03\x49\xdc\x37\xf6\xf1\x37\x00\x00\xff\xff\xe7\x26\x82\xba\x66\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0xec, 0xd6, 0x6b, 0x99, 0xad, 0x29, 0x62, 0x1f, 0x8b, 0x9f, 0x83, 0x4c, 0xd3, 0x1e, 0x9a, 0xb1, 0x77, 0x68, 0x8b, 0xa2, 0x6a, 0x77, 0xf2, 0x0, 0x44, 0xa5, 0x9a, 0x68, 0xa9, 0xe6, 0x61}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x8b\xe2\x40\x10\x85\xef\xfd\x2b\x8a\x1c\x96\x78\x49\xee\xcb\xb2\x20\x32\x39\x8a\x87\xcc\x0f\x28\xdb\x36\x29\x6c\xab\x42\x77\x35\xce\x20\xf9\xef\x83\x69\x47\xa3\x38\x4c\x9d\x1a\xfa\x7d\xef\x55\x3d\x3a\x0e\x12\x14\xd6\xc2\x4d\xe2\x8e\xb6\xde\xb5\x72\x70\x0c\xfb\x20\x47\x28\xaa\xaa\xb6\xc2\x1a\xd0\x6a\xac\x9f\x35\x95\xdd\xd9\xc2\x5c\x0d\xde\x3e\xf0\x38\x78\xb7\x6e\xda\x57\xe8\xfd\xf7\x01\x5a\x37\x6d\x23\xe1\x84\x61\x47\xdc\xbd\xe2\x92\x92\x27\xfd\xac\x1f\x84\xd9\xc2\xd4\x75\x0d\x6d\x4f\x11\x34\x20\x47\xb4\x4a\xc2\x40\x11\x4e\x3d\x2a\x20\x03\x5a\x2b\x89\x15\x4e\x92\xfc\x0e\x42\xe2\x89\x50\x81\xc4\x9e\xf8\x00\xa4\x11\xac\x78\xef\x32\x39\xa5\x0f\x69\xeb\xc9\x42\x54\x09\xd8\x39\x63\xe6\xd6\x67\x63\x00\x00\x86\xe0\x06\x0c\xae\x8c\xd4\xb1\x0b\x7f\x61\x99\xb4\x5f\xe6\xa8\xc5\xb7\xe6\x32\xb4\x87\x2c\xa9\x3a\xa7\x2b\x1c\x70\x3b\x9d\x52\xce\xaa\x58\xdd\xd2\x37\x53\xee\x06\xb5\x5f\x54\xb6\x77\xf6\xf0\xef\xcf\x79\x26\xbc\x3f\x9f\x91\xf1\x7f\x79\x49\x85\xd9\x78\xe9\xca\xe2\x7d\xba\xf1\xd2\xea\xcf\x6c\x3e\xf9\x1e\x5d\x2c\x1e\x7c\xae\xdb\xe7\xb6\x7e\x5d\xfb\x86\x8e\xb9\x82\xd1\x8c\xe6\x2b\x00\x00\xff\xff\x0b\xbc\x93\xd0\x5c\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0x72, 0x24, 0x89, 0x7, 0xaf, 0xe4, 0x6f, 0x97, 0xf4, 0xaf, 0x14, 0xcd, 0x0, 0x5a, 0x49, 0xa, 0xfd, 0x4a, 0xa2, 0xfa, 0xc5, 0x1a, 0x2b, 0xfc, 0xcb, 0x4d, 0xfa, 0x43, 0x92, 0x99, 0x84}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
