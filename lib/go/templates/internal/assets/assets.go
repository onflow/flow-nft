// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (550B)
// ../../../scripts/get_collection_ids.cdc (522B)
// ../../../scripts/get_collection_length.cdc (429B)
// ../../../scripts/get_contract_storage_path.cdc (518B)
// ../../../scripts/get_nft_metadata.cdc (5.871kB)
// ../../../scripts/get_nft_view.cdc (4.619kB)
// ../../../scripts/get_total_supply.cdc (106B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.365kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.575kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.577kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.111kB)
// ../../../transactions/destroy_nft.cdc (949B)
// ../../../transactions/mint_nft.cdc (3.11kB)
// ../../../transactions/setup_account.cdc (1.151kB)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.558kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.568kB)
// ../../../transactions/test/upgrade_nft_contract.cdc (154B)
// ../../../transactions/transfer_nft.cdc (1.612kB)
// ../../../transactions/unlink_collection.cdc (634B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xc1\x6a\xe3\x30\x10\x86\xef\x7a\x8a\x1f\x1f\x16\x1b\x96\xf8\xb2\xec\x21\x6c\x36\xa4\xa1\x81\x5e\x42\x28\xee\xb9\x8c\xe5\x71\x32\x54\x96\x8c\x24\xd3\x96\x90\x77\x2f\x89\x63\x3b\x4d\x7d\xb2\x46\xf3\x89\xf9\xbf\xc9\x73\x14\x07\x09\x08\xda\x4b\x1b\x51\x3a\xef\xdd\x7b\x00\x59\x6c\x37\x05\x6a\xef\x1a\x10\xb4\x33\x86\x75\x14\x67\x95\x92\xa6\x75\x3e\x62\xeb\xec\xa6\xb3\x7b\x29\x0d\x17\xee\x8d\x6d\xdf\x9a\xdc\x97\x93\xa1\xff\xf1\x83\x9a\xd6\xf0\xf8\x68\x32\x15\x12\xa5\x48\x6b\x0e\x21\x25\x63\x32\xd4\x9d\x45\x43\x62\x53\xaa\x2a\xcf\x21\xcc\xb1\xea\x7f\x7e\x43\xaa\x39\x5e\x9e\x6c\xfc\xfb\x27\xc3\x51\x01\x80\xe1\x08\xd2\xda\x75\x36\x62\x81\x3d\xc7\x55\x7f\x18\xe0\x4c\x8d\x6d\x53\x88\x67\xae\xb1\x18\xb0\xcb\xfd\xf9\x9b\xed\x39\xae\xa9\xa5\x52\x8c\xc4\xcf\x74\x9a\x6f\xb6\x1e\xc9\x5d\x57\x1a\xd1\x3b\x8a\x87\x6c\xe2\x7a\x67\xff\x7e\x1d\xef\xc3\xff\x00\x4f\xff\xd3\x89\x5b\x2e\xd1\x92\x15\x9d\x26\x6b\xd7\x99\x0a\xd6\x0d\xfa\xa1\xc7\x31\x7a\x59\xed\x85\xbe\x49\x90\x5c\x73\xe5\x39\x1e\x7a\x84\xe0\xb9\x66\xcf\x56\x33\xa2\x03\x21\xb4\xac\xa5\x16\x7d\xd9\xa3\x58\xc4\x03\xdf\xee\x71\xb0\xf2\x8a\xc5\x77\x33\xd7\x38\xdb\x4d\x91\x9e\x75\x4b\x95\xa9\x93\xfa\x0a\x00\x00\xff\xff\x58\x63\xa6\x97\x26\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x90, 0xac, 0x6f, 0xd0, 0x4d, 0xdd, 0x34, 0x26, 0xfe, 0x4f, 0x12, 0x6f, 0x56, 0xc6, 0x90, 0xe8, 0x76, 0x46, 0xb2, 0x25, 0xc3, 0xa2, 0x6e, 0x9, 0x20, 0xe5, 0x2b, 0x26, 0x57, 0x6f, 0xcc}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\xc1\x6e\xea\x30\x10\xbc\xfb\x2b\x46\x39\xbc\x97\x48\x15\x5c\xaa\x1e\x50\x29\x42\x50\x24\x2e\x08\xb5\xf4\x54\xf5\xe0\x38\x0e\x58\x75\xd6\x96\xbd\x51\x5b\x21\xfe\xbd\x0a\x69\x08\x8d\xea\xd3\x7a\x77\x66\x76\x66\xc7\xe3\x31\x9e\x55\x30\x9e\xc1\x0e\x7b\xcd\xd8\xac\x76\x58\x2f\x23\x0c\x41\x12\xa4\x52\xae\x26\xfe\x1f\xa1\x9c\xb5\x5a\xb1\x71\x24\x84\xa9\xbc\x0b\x8c\x8d\xa3\x55\x4d\x7b\x93\x5b\xbd\x73\xef\x9a\x50\x06\x57\x21\x19\xb6\x93\x0e\xff\xf8\x29\x2b\x6f\x75\xb3\xa1\x45\xf6\x8d\x44\x08\xa9\x94\x8e\x31\x95\xd6\x66\x28\x6b\x42\x25\x0d\xa5\xb2\x28\x82\x8e\x71\x82\x79\x5b\xdc\x5c\xf9\xd8\xd6\xb9\x35\x6a\x2b\xf9\x30\x41\x5f\x67\x13\xbc\xbe\xac\x89\xef\x6e\xdf\x70\x14\x00\x60\x35\x77\x39\x30\x6d\x32\xce\xdb\x4f\x27\x9e\x89\x0b\xac\x17\x7f\xd2\x25\xa6\x1d\xed\x3c\x6f\xde\x68\xaf\x79\x21\xbd\xcc\x8d\x35\xfc\x95\xfe\xe5\x25\xeb\xc1\xb9\x0b\xc1\x7d\xdc\xff\x3b\x0e\x2f\x32\x5a\x0c\x88\xa7\x87\xb4\xe7\xcd\x66\xf0\x92\x8c\x4a\x93\x85\xab\x6d\x01\x72\x8c\x56\x0a\xea\xb2\xbb\xbd\xa0\x3f\xb3\xaf\x6c\x43\x32\xa2\xd7\xca\x94\x46\x17\xf0\x92\x0f\xc9\x4f\xbc\xa0\xb9\x0e\xf4\x3b\x61\x13\x67\xbd\x8c\x69\x26\x4e\xe2\x3b\x00\x00\xff\xff\x1c\x71\x23\x70\x0a\x02\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x63, 0x2a, 0x7a, 0x74, 0xca, 0x42, 0x68, 0x34, 0xfb, 0x12, 0xf7, 0xe2, 0xc0, 0x19, 0xc2, 0x5a, 0x36, 0x18, 0x7d, 0xcb, 0x6d, 0xfa, 0xdd, 0xb0, 0x38, 0x19, 0x3f, 0x80, 0x26, 0xc8, 0xaa, 0xd8}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6e\xc2\x30\x10\x45\xf7\x3e\xc5\x28\x8b\xca\xd9\x70\x00\x54\x8a\x50\x5a\x24\x36\x08\x55\x5c\xc0\x71\x26\xc1\xea\x64\x26\x72\xc6\x6a\x2b\xc4\xdd\x2b\x48\x48\x5a\xea\x95\x3d\xfe\xcf\xfa\xcf\xa1\xed\x24\x2a\xec\x85\xb7\x89\x9b\x50\x12\x1e\xe5\x03\x19\xea\x28\x2d\x64\x8f\xe3\xcc\x8c\xf9\xb7\x2f\xd7\x76\x84\xfb\xed\x71\x4c\xce\x83\xcc\x18\xe7\x3d\xf6\xbd\x75\x44\x39\xd4\x89\xa1\x75\x81\xad\xab\xaa\x88\x7d\xbf\x84\xcd\xb0\xc9\x97\xb0\x63\x85\xb3\x01\x00\x20\x54\x70\xde\x4b\x62\x85\x15\x34\xa8\x9b\xe1\x70\xa7\x72\x33\xc5\xbc\x10\xa1\xd7\x20\xfc\x8e\x35\xac\xee\xd8\xed\xfe\xba\x16\x0d\x6a\xe1\x3a\x57\x06\x0a\xfa\x6d\xe7\x62\x8b\x62\x22\x0f\xa9\xa4\xe0\x0f\x4e\x4f\xf9\xcc\x95\x12\xa3\x7c\x3e\x3f\x9d\x1f\xad\xff\x81\x97\x17\x3b\x73\xeb\x35\x74\x8e\x83\xb7\x59\x21\x89\x2a\x60\x51\x18\x9e\x02\x3f\xd5\x18\x7e\xa9\xbb\xd1\xbf\x0c\xb2\xd1\x2b\xa2\xa6\xc8\x7f\xd5\xae\x1e\xbb\xd7\xde\xe6\x0b\x42\x6e\xf4\x64\x2e\xe6\x27\x00\x00\xff\xff\xb7\x3b\x33\x7f\xad\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x96, 0xc5, 0x50, 0x7b, 0x69, 0x52, 0xd8, 0x5d, 0x86, 0x3a, 0x7b, 0x91, 0x82, 0x29, 0x1, 0xb8, 0xa7, 0x9e, 0xe2, 0x56, 0xf0, 0xc8, 0x39, 0x10, 0xfa, 0xf7, 0x81, 0x9, 0xd3, 0x76, 0xcd}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\xcd\x6a\xf3\x30\x10\xbc\xeb\x29\x26\x3e\x7c\xc8\xf0\xe1\x07\x08\x71\x42\x48\xe9\xad\xa5\xb4\xa1\xf7\x8d\xb4\x49\x05\xb2\x14\xa4\x75\x42\x29\x79\xf7\xa2\xd8\xcd\x0f\x3d\x74\x0f\xc6\x1a\xcd\xce\x8c\xc6\x75\xfb\x98\x04\x4f\x2c\x64\x49\xe8\xdd\xf1\x31\x63\x9b\x62\x87\xea\x0e\xab\xd4\xc8\x2c\xa7\x57\xce\xd1\x1f\x38\x8d\xc4\x5b\xa8\x52\x8a\x8c\xe1\x9c\x35\x79\x5f\x63\xdb\x07\x74\xe4\x82\x26\x6b\xd3\x14\x4b\x6b\x13\xe7\xfc\x1f\x81\x3a\x9e\xe2\x4d\x92\x0b\xbb\xba\xfc\xc4\x44\x3b\x7e\x21\xf9\x58\xe0\x4b\x01\x80\x67\x81\xa0\xc5\xfa\x73\xcf\xb3\xbb\x28\xcd\xf3\xe3\x7a\x15\xbd\x67\x23\x2e\x86\x07\x12\x9a\xeb\xfa\xb2\xb3\x89\x29\xc5\x23\xdb\x55\x0c\x92\xc8\x14\x89\x1d\xcb\xd2\x98\xd8\x07\x39\xc7\xa8\x1b\x33\xde\xe5\x66\x60\xcf\xfe\xdd\x3e\x61\xae\x87\x74\xe5\x3b\xe8\x96\x59\x2c\xb0\xa7\xe0\x8c\xae\x7e\xb6\x61\x62\xef\x2d\x42\x14\x6c\xf8\xe2\x5b\xd5\xea\x92\xe5\xe0\xf8\x88\xf6\x57\xa4\x26\x0d\x4e\xc5\x54\xcb\x60\xe1\xb6\x23\xbb\x45\x70\x7e\xec\xa0\x4c\x62\xe9\x53\x28\xe0\x19\x3a\x5d\xd5\x8d\x45\x7b\x5e\x9a\x80\xf2\x04\x7f\x74\xa4\x6e\xc4\x8c\x6d\xf2\xb5\x71\x75\x52\xdf\x01\x00\x00\xff\xff\x1c\xb3\xdf\xba\x06\x02\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x8f, 0x22, 0x60, 0x1, 0xbf, 0x20, 0xfc, 0xa6, 0x24, 0x47, 0xb7, 0x59, 0x12, 0x10, 0x5, 0xd7, 0xf3, 0xeb, 0xdc, 0xcf, 0xc2, 0xfc, 0xce, 0xc7, 0xf4, 0x80, 0x1d, 0xff, 0xd7, 0xad, 0xf}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x26\x39\x14\x36\xd0\x2a\x3d\x14\x3d\x18\x55\x83\x6d\x92\x2d\x16\xc8\x1a\x8b\xc4\xdb\x4b\x90\x03\x2d\x8d\x1c\x22\x34\xe5\x92\x74\xb2\x46\x90\x7f\x5f\x90\x94\x44\x52\x22\x25\x27\x17\xdb\x33\xef\xcd\x0c\x45\xbe\xa1\x26\x17\x17\x17\xb0\x7e\xa2\x12\x64\x21\xe8\x5e\xc1\x16\x95\x04\xc2\x18\xa8\x27\x84\x17\x8a\xaf\xbf\x6d\x88\xc4\x12\x76\xa8\x48\x49\x14\x01\x22\x65\x5d\x50\xa2\xb0\x84\x57\xaa\x9e\x0c\x4e\xee\xb1\xa0\x15\xc5\x12\x56\x9f\xd7\x33\x1d\x92\xf0\x12\x04\xaa\x83\xe0\x12\xa8\x02\x22\x81\x80\xa4\x7c\xcb\x10\xa4\x12\x87\x42\xcd\x66\x74\xb7\xaf\x85\x82\x9b\x1f\x64\xb7\x67\xb8\xfa\xbc\x86\x4a\xd4\x3b\x38\x77\x86\xf3\x16\xf3\xb5\x49\xfe\x1f\xc5\x57\xd9\xc0\x02\xdb\xf9\x6c\x46\x8a\x02\xa5\x9c\x13\xc6\x16\x4d\x0a\x5d\x0c\xbc\xcd\x00\x00\x7c\x27\x43\x05\x9c\xec\x70\x09\xf7\x4a\x50\xbe\x8d\x02\x4a\xb4\xcf\x83\xd6\x7c\x14\xa7\x9e\x0e\xbb\x0d\x27\x94\x8d\xa2\xea\x57\x8e\x62\x09\x9f\xca\x52\xa0\x94\xf1\x40\xc7\xfd\x78\x45\xa2\x3e\x12\xa6\x28\xca\x25\x3c\x04\x6b\xcf\xee\x8c\xe7\xf8\x18\xa5\xe1\x0f\x85\x82\x13\xf6\xfd\xee\x76\x34\xbc\x44\x41\x09\x5b\x1d\x76\x1b\x5d\xe9\xf7\x2f\x5c\xfd\xf9\x47\x14\x58\xd4\x8c\x61\xa1\x1f\xcc\xb7\xc3\x86\xd1\xe2\x1b\x51\x4f\x4b\x70\xdf\x27\x48\xf7\xaa\x16\x64\x8b\x96\xe5\xfd\x98\xca\x25\xea\x17\x5a\xa2\x68\xb2\x09\xfa\x42\xd4\x49\x3c\x53\xd7\xe8\xca\xfb\xe0\x5b\xca\x9f\xb1\x5c\x4f\xed\xc7\xb0\xb6\x0f\x13\x57\x53\xa7\xd0\x41\xaf\x4f\x3c\x8f\x8e\x71\x73\xe2\xc6\x7b\x5b\xf3\xff\x81\x08\xfc\xb2\x23\xdb\x53\xab\xfa\x87\x70\x8e\xe2\x23\x8c\x7b\xdd\x3b\x98\x5c\xc2\x9b\x85\xb7\xb4\xf7\xf8\xe1\x2d\xa9\x5d\x71\x78\xe0\x6f\xac\x39\xae\x23\x41\xa8\x92\x7d\xc6\xda\x58\xa3\x84\x1d\x96\x94\x0c\x08\x5f\x8d\xf5\x32\xca\x60\xb4\x40\x2e\xb1\x4f\xb9\xb5\xe6\xcb\x99\x21\x51\x4e\xd5\xdc\x7c\xd3\x7f\x7e\xbf\xf9\xb5\xb3\x46\x9a\x8c\x73\x0e\x3a\x8b\x73\x85\xed\xc4\xd9\x79\xa5\xfc\xd3\xe7\x1c\xd3\xbd\xc3\x61\x23\x0d\xc3\x39\x63\x5d\xc2\x79\xa7\x5a\x43\x0c\x99\xea\x07\xd1\xa8\xa9\x26\x90\x2e\x61\xb8\x84\x69\xb9\x8f\xa5\x3e\x0d\xbd\x8a\x6e\xf7\xa8\x9a\x63\xb0\x88\x84\xa3\x8f\x70\xa8\xdb\x18\x2c\x22\xd6\x68\xb4\x94\x42\xbd\x23\x32\x2a\x4b\xef\x08\x8f\x68\xd1\xa1\x1a\x01\x46\xf5\xe7\x50\xad\xe8\x12\x9a\xd3\x90\x45\x73\xd9\xdb\x83\xca\xaa\x4c\xab\x0e\x72\x23\xbe\xd0\xe1\x09\x0f\x72\x5f\x86\x21\xac\x93\x20\xe4\x4e\x8e\x21\xc4\x48\x11\x72\x2b\xc9\x1e\xfb\xb8\x37\xd9\xad\x28\x43\x5f\x27\x48\xc8\x9d\x38\x43\x88\xa7\x43\xc8\x7d\x55\x86\x30\x5f\x91\x90\x07\x02\x0d\x81\x31\x71\x42\x1e\xd5\x6c\x8a\xe8\xc9\x33\x60\xf6\xaf\xf1\x58\x4e\x4f\xba\x61\x56\xcf\x31\x5e\x70\xa4\xd8\x71\x82\xd3\x6a\x84\xea\x9c\x53\x25\xa7\xc2\x0c\xdc\xa9\x40\x2b\x7b\x0c\x43\x43\x0a\x7c\x1d\x1c\xcd\xa8\x3d\x45\xbd\x09\x4e\x4c\xd4\x9e\xdc\x59\xd7\x42\xc2\x9d\x75\xf6\x14\xd5\x6b\x2b\x01\xd5\xb3\x27\xb3\xda\x56\x13\x66\xb4\xb6\x9e\x16\x6c\x67\xd1\x3a\xf0\xae\x7e\xa7\x34\xd3\x51\xb4\x48\xdd\x35\xdf\x39\x6d\x7b\xc9\xed\x47\xe8\x6a\x7a\x4a\xde\x7c\x1a\xe7\xfb\xec\x3d\x9c\x25\xaa\x03\x87\x1d\xa1\x7c\x4e\xec\x75\xeb\xee\x5d\xa0\x65\x7b\x07\x2e\x96\xde\xb0\xa1\xdf\x11\x48\x51\xd4\x07\xae\x20\xd7\x03\xd5\x27\xfb\xa3\x8d\xb0\x98\x75\x30\xb7\x6e\xc8\x5b\x4e\x57\x63\xb6\x45\x75\x45\xf6\x64\x43\x19\x55\xc7\xb9\x9b\x8b\xb2\xab\x88\x68\x17\x8e\xb7\xa9\x85\xa8\x5f\xff\xfa\xe5\xcd\xa3\xb8\xaf\x7d\xf2\xfb\xdf\x73\xc7\xbd\xbc\x84\x3d\xe1\xb4\x98\x9f\x5f\xd5\x07\x56\x02\xaf\x15\xd8\x70\x40\x40\x60\x85\x02\x79\x81\xa0\x6a\x33\xf7\xb9\xf2\xcf\xbd\x45\xf1\x4a\x05\x5b\xda\xd4\xe3\x2a\x98\xeb\x07\x47\xcb\xc5\x99\xe5\x5c\x5c\xc0\xbf\x66\x94\x42\xd8\x10\x49\x0b\x28\xa9\xdc\x33\x72\x04\xca\xab\x5a\xec\x88\x79\x3c\x55\x2d\x40\xe9\x39\x55\x4f\x98\x6d\xa6\x16\x98\xf7\xae\x98\x2d\xaa\x6b\xeb\x9a\xf3\x4a\x45\xf2\xd8\x9e\x1b\xcb\x80\xb0\xa5\x2f\xc8\x83\x34\x0d\x5a\xc7\x8e\xa5\xba\x6b\x1b\xb8\x9f\xac\x37\x7b\xc5\x78\x9e\x2e\xfb\x4c\x4f\xf7\xe9\x25\x06\x7b\x19\xae\xd7\xdb\x0a\x07\x49\xd5\x1f\xc6\x21\x8a\xf4\xab\xe1\x95\x6a\xee\xf6\x54\x88\xc6\x2d\x7b\xe9\xfd\xdb\x28\x45\xbd\x37\x98\x7e\xca\xf0\x15\xd7\x5e\xa3\xf6\xb2\x3d\xcb\x1a\x19\x05\xab\x5c\x77\x97\xad\x8e\xa9\x7f\xcd\xa3\x32\x4b\xbe\xdd\x40\x0e\x6f\x76\x08\xd1\xe7\xe0\x19\xf5\xd9\x18\x6e\x43\x26\x2d\x3f\x7b\xc6\xa3\xf4\x5e\x37\x06\x09\x1e\x9e\xf1\xf8\x18\x36\xf0\x30\x82\x01\x9c\x65\x07\xc1\x9a\xb6\xd3\x15\xdb\x75\xb3\xc1\xa3\xb2\x6f\x4e\xfd\x47\xd5\x34\xb8\x01\xda\xbe\x42\x19\x74\x87\x6d\x3b\xde\x00\xdc\xbc\x48\x59\xb4\x81\xdb\xff\xde\x68\x1d\xf4\xc7\x98\x46\x75\xe6\xf5\x2a\x31\xcc\xb4\x10\xcf\x18\x9d\x6c\x5a\x5c\x67\xca\x0e\x82\xce\x17\x83\x51\xc7\x7c\x44\x06\x9d\xe6\x4b\x46\x4b\xe4\x8a\x56\xd4\x07\x79\x43\x8f\x27\xe0\x50\xb0\x8b\xc4\xdc\xe3\xfd\xd0\x5b\x94\x1a\x80\xfa\xe7\x3b\xe3\xe6\xeb\xd4\x44\x34\x50\x65\xb6\x3f\x7d\x46\x1a\x92\xe5\x47\xa6\xa6\x48\x6e\xcf\x3f\x36\x48\xa5\xaa\x76\xc6\xe8\x36\x8c\xcd\x5b\xa9\x90\x0e\x33\x15\x32\x32\x96\xa5\x57\x78\x72\x58\x3b\xbf\x0d\xb5\x1b\x9e\xf8\xc4\x3c\x37\xa4\x45\x55\x90\x18\xf3\x86\xec\xe4\x59\x4c\x4c\x80\x91\x96\xe3\xdc\x59\x45\x19\xf6\x45\x96\x98\x11\x87\x81\x36\xce\x3d\x11\xa8\xeb\xb3\x03\x53\x64\x8c\x0c\xef\x97\x4c\x5f\xca\xb7\x54\xaa\x87\xdf\x1f\x87\xb3\xa4\x8a\x4f\x8f\xf6\x63\x38\x2e\xfa\xaf\x76\x8b\xd9\xfb\xec\x67\x00\x00\x00\xff\xff\xfe\x67\x4e\x31\xef\x16\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xee, 0xe5, 0x25, 0xc3, 0xe0, 0xf1, 0xa7, 0x9c, 0x82, 0xad, 0xa7, 0x11, 0xf6, 0xba, 0xbc, 0x56, 0x15, 0x3f, 0x35, 0x3f, 0x56, 0x8, 0x96, 0x65, 0xe9, 0xd3, 0x65, 0x22, 0x84, 0xd3, 0x8e, 0x1a}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xdb\x38\x10\xbd\xeb\x2b\xc6\x3e\x2c\x6c\x20\xd0\x69\xb1\x07\x61\xb5\x45\x37\x4d\x81\x02\x5d\xa3\x48\xd2\x5e\x8a\x1e\x68\x69\xec\x0c\x42\x53\x5e\x92\x4a\x62\x04\xfe\xf7\x42\x92\x25\x92\x16\x49\xd9\x3e\x99\x33\xef\x0d\x47\xe2\x7b\xd4\xd0\x6e\x5f\x49\x0d\x77\x6f\x6c\xb7\xe7\xb8\xfa\xfc\x08\x1b\x59\xed\x60\x6e\x02\xf3\xe4\x84\xf9\x0f\x35\x2b\x99\x66\x3f\x08\x5f\xd5\x09\xe6\xc4\xe6\x49\xc2\x8a\x02\x95\x5a\x30\xce\x97\xa0\xb4\xac\x0b\x0d\xab\xcf\x8f\x4d\x16\xde\x13\x00\x00\x1b\xc0\x51\x03\x95\x19\x7c\xff\x22\xf4\x5f\x7f\x7a\xd3\x75\x3d\x01\x10\x6c\x87\x19\x3c\x68\x49\x62\xeb\x05\x94\xa8\x0a\x49\x7b\x4d\x95\x88\xe2\xf4\x53\xbd\x5b\x0b\x46\x3c\x8a\x92\xd5\x81\x71\x4d\xa8\x32\xf8\xe9\x3c\x7b\x7a\xdf\x66\x0e\xbf\xbc\x34\x7c\xd3\x28\x05\xe3\xdf\xef\xbf\x46\xcb\x17\x15\xe7\x58\x34\xbd\x7e\xab\xd7\x9c\x8a\x6f\x4c\x3f\x65\x60\xfe\x4f\x90\x1e\x74\x25\xd9\x16\x3b\x96\xb5\x98\xda\x4b\x56\x2f\x54\xa2\x3c\xed\x26\xe9\x85\xe9\x8b\x78\x6d\x5f\x57\x3d\xd0\x57\x12\xcf\x58\x3e\x1e\xf6\xf1\x43\x1b\xf7\x76\x35\x71\x35\x25\x0c\x03\xfd\x74\xa1\x44\x0c\xe3\xee\xea\xf3\x7c\xf8\xbf\x66\x12\xbf\xec\xd8\xf6\xd2\xae\xfe\x65\x42\xa0\xbc\x86\xf1\x50\x15\xc4\xb8\xca\xe0\xbd\x83\xf7\xb4\xa3\x5f\xf0\x92\x91\x56\x99\x6b\xeb\xf4\xb1\x8d\x26\x2d\x83\x04\xe9\x45\xfb\xaf\x5d\x0d\x46\xbc\x19\x62\xb6\x3d\x4d\xd4\xf6\xa4\x89\x7a\x8c\x68\x92\x23\xf7\x99\xd4\xb4\xe5\x0c\xd6\xe3\x33\x93\x9c\x32\x97\x0f\x19\x72\x94\xb7\x6a\xc8\x46\xe1\x16\xa6\x9b\x1c\xeb\x3e\xb6\xf5\x65\xe8\x95\xf7\x7c\xa2\x7e\xf0\xc1\x3c\x26\xf0\xbe\xc2\xb1\xf2\x7d\x30\x8f\xdc\xbd\xd5\x42\x1a\xb7\xb4\x14\x13\x76\x03\x58\x9e\xbe\x45\xcd\x4f\x21\xdf\xa4\x54\x42\x0e\x54\xba\xc1\x46\xdb\x90\xb7\x12\x77\x13\x8d\xbc\x21\x6f\x55\xee\x26\x2c\x85\x43\x6e\xeb\xdd\x85\x0d\x5a\x87\xdc\xe8\xde\x85\x0c\x9a\x87\xdc\xe8\xdf\x85\x58\x52\x87\xdc\x16\xbe\x0b\xf3\x89\x1e\x72\xaf\x17\x42\x44\x4b\xf6\x0e\xf3\xfc\x03\xe3\xdb\xd3\xb2\x84\xbb\xab\x95\x88\x37\xec\x69\x36\x4e\x30\x1e\xf0\x50\x4d\x72\xaa\xe5\x50\x99\x51\x3a\x54\x68\xd5\xc9\xc4\x0d\x84\xc0\x9f\x1c\xe9\x78\xe3\x21\xea\x9d\x23\x04\x6f\x3c\x78\xb2\xc6\x9a\xee\xc9\x9a\x78\x88\x6a\xd9\xd5\xa1\x5a\xf1\xe0\xae\x9d\x85\xdd\x1d\xbb\xd8\x99\x51\x5a\xcb\x36\x2e\x31\xde\x3d\x26\x47\x77\xca\xdc\xd4\x02\x76\x8c\xc4\x82\x95\xa5\x44\xa5\x32\xf8\xd8\xfd\xb9\xb1\xbe\x58\xcb\xec\x6c\x0c\x6d\x3e\x80\xac\x28\xaa\x5a\x68\xc8\x61\x8b\xfa\x63\xb7\xe8\xab\x2c\x93\x01\x66\x9a\x84\xbc\xe7\x0c\x7d\xa6\x5b\xd4\xb7\x6c\xcf\xd6\xc4\x49\x1f\x16\x66\x6a\x4e\x6f\x3d\x0e\x5b\x1a\xde\xba\x92\xb2\x7a\xfd\xfb\x8f\xf7\xb3\x4f\x1a\xaa\x8a\xbf\xa0\x34\xec\xe3\x3f\x0b\x43\xfb\xf0\x01\xf6\x4c\x50\xb1\x98\xdf\x56\x35\x2f\x41\x54\x1a\xba\x4a\xc0\x40\xe2\x06\x25\x8a\x02\x41\x57\xa0\x9f\xd0\xea\x7c\x6e\x3d\xcf\x0b\xe1\x6b\xbf\x8d\x73\x06\xa7\x9e\x7e\x58\xf9\x45\xf3\x0a\xa9\x5c\xce\x0c\x5d\x6c\x74\xfb\x1e\xf3\xb3\xfb\x75\x8b\xfa\xf4\x8a\x4f\xa4\x1b\x77\xa7\xcc\x59\x7a\xdf\x6f\xf0\x6e\x87\x1c\xde\xbb\x21\x66\x53\x49\x78\xc6\x03\x90\xe8\x1b\xb1\x4d\x44\x6a\xcf\xd9\x61\x96\xaa\xae\x50\xfa\x8c\x07\x65\xdd\xf5\xa3\x9d\x7e\x3e\xe3\xe1\x57\x73\x95\x4f\x96\x6a\x91\xb3\xb4\x96\xfc\xa4\xc2\xae\x7f\x89\xba\x96\xa2\xd7\x96\x3b\x2b\xf5\x45\xa9\x3c\x9f\x97\xfa\x4c\xb3\x3a\x9f\x9a\xfa\x5c\xd9\x37\xd0\x84\x03\x43\xd4\x08\x6b\x65\xbd\xa3\xd5\x88\x30\xe4\xd2\x5a\xd2\x62\xe9\x1d\xba\x7a\xd2\x10\x9a\x35\x67\x7d\xdf\xaf\x6c\x96\x33\x7e\xf5\x3c\x2b\xd8\xbe\xc0\xa9\x81\xcc\x73\x18\x4c\xb3\x59\xba\xbf\x7c\x50\x0b\x95\x50\xd7\x0c\x70\xc1\x3e\x2c\x54\x6c\xb2\x8b\x3f\x87\x31\x78\x4a\x25\x0a\x4d\x1b\x42\x79\xd9\x18\x18\x2f\x6c\x90\x53\x85\x3d\x33\xe3\xd4\x33\x5f\x5c\x7c\xe5\x88\xd9\xe3\x2b\x57\xd6\x81\xd9\x33\xc2\xf7\x4a\x3d\x30\x9b\x46\xca\x58\xe2\x0c\x69\xd3\x99\x5f\x63\x37\x85\xc1\xa5\x1b\xe2\x78\x6e\xa9\xc0\xa8\x1b\xa9\xb8\x36\xb8\x89\x8a\xc3\xcd\x39\x0a\x8d\xc7\xe2\x7e\xc3\x6e\x3d\xeb\x00\xcb\xe4\x98\xfc\x0e\x00\x00\xff\xff\x3a\xf0\x05\xa7\x0b\x12\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x93, 0xd1, 0xb7, 0x1f, 0x10, 0x26, 0xbe, 0x95, 0x0, 0xa5, 0xde, 0x31, 0x40, 0xe6, 0x25, 0xb2, 0x4, 0xb0, 0xda, 0x15, 0x52, 0x19, 0xb0, 0xfe, 0x35, 0x49, 0xc3, 0x54, 0x65, 0xe6, 0x7c, 0xa7}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x70\xad\x48\xcc\x2d\xc8\x49\xf5\x73\x0b\x51\x48\x2b\xca\xcf\x55\x50\x42\x08\x28\x71\x71\x25\x26\x27\xa7\x16\x17\x6b\x24\xe6\xe4\x68\x2a\xa4\x95\xe6\x29\xe4\x26\x66\xe6\x69\x68\x5a\x29\x84\x7a\xe6\x95\x98\x99\x28\x54\x73\x29\x28\x28\x28\x14\xa5\x96\x94\x16\xe5\x21\x99\xa4\x57\x92\x5f\x92\x98\x13\x5c\x5a\x50\x90\x53\xc9\x55\xcb\x05\x08\x00\x00\xff\xff\x50\x1f\xd1\x9c\x6a\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0xbf, 0x89, 0xc1, 0x8e, 0xcf, 0x54, 0xd4, 0xb8, 0x25, 0xfe, 0x92, 0x41, 0xc4, 0xac, 0x12, 0xc1, 0xd6, 0x1a, 0xb2, 0x74, 0x5f, 0x47, 0x2a, 0x25, 0xf1, 0x38, 0x97, 0x5d, 0xec, 0xa0, 0xd9}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcb\x6e\xa3\x3c\x14\xde\xf3\x14\x5f\x59\x54\x64\x43\xf6\xa8\x17\xf5\x8f\xfe\xcc\x6a\xa2\x2a\xcd\x0b\x18\x73\x00\x2b\x8e\x8d\x8c\x29\x1d\x55\x79\xf7\x91\xb9\x1a\x26\xca\x68\xbc\x48\x22\xe7\x70\xce\x77\x3b\x6c\xb7\x5b\x9c\x4a\x51\xc3\x1a\xa6\x6a\xc6\xad\xd0\x0a\xa2\x46\x5b\x32\x0b\xa6\xc0\x38\xd7\x8d\xb2\x68\x75\x23\x33\x98\x46\x05\xee\x09\xab\xc1\x4b\xa6\x0a\x82\x2d\x09\x87\xfd\x69\xaf\x4d\xcb\x4c\x46\x06\x86\xb8\xa8\x04\x29\x1b\x04\xe2\x52\x69\x63\x71\xd0\x6a\xdf\xa8\x42\xa4\x92\x4e\xfa\x4c\x0a\xb9\xd1\x17\x84\xeb\xeb\x70\xac\xff\xff\x8b\x5d\x2a\x49\x87\xfd\x69\xa8\x9c\x2f\xa6\x9a\x79\xa4\x50\xc5\xd8\xd0\xbf\x0b\x83\xc0\x63\x14\x29\x6a\x8f\x23\xb0\xb7\x2c\x33\x54\xd7\x09\x86\x1f\x1b\x7c\x07\x01\x00\x38\x66\x47\xca\xc9\x90\xe2\xe4\x38\x4e\xe4\x06\x6e\x47\xaa\x75\x63\x38\x75\xd5\x92\x2c\xf2\x91\xf6\x91\xf2\x04\x8f\x0b\x04\xb1\x2f\xcb\xd4\x7f\xa7\xa5\xa4\x5e\xe5\x96\xd0\x0a\x29\x91\x51\x2d\x0a\xc5\x2c\x81\xd5\x63\x47\xc7\x6a\x56\x72\x1c\xe7\xb3\x98\x1b\x25\xd8\xb1\x8a\xa5\x42\x0a\xfb\xeb\xe9\xf1\x7b\xad\x6b\x3c\x57\xbe\x37\xa9\x14\xfc\xfa\xd2\xd3\xad\x0c\x55\xcc\x50\xe4\xa6\x93\x49\xf0\xd6\xd8\xf2\xad\xb7\xdb\x49\x82\xe1\x6c\xb7\xf8\x4f\x1b\xa3\x5b\x18\x5f\x9b\x95\xe9\x9e\x30\xee\xd4\x24\xf3\xd8\x57\x07\xcf\xe8\xe7\x4c\x25\xee\xc4\x69\xd7\xf9\xe9\x8e\x72\x2f\x91\x73\x37\x59\x3a\x1e\x7f\x58\x6d\x58\x41\xef\xcc\x96\x9b\x45\xc7\xd7\x57\x54\x4c\x09\x1e\x85\xbb\x2e\xb1\x4a\x5b\xa4\x7f\x81\x1f\x6e\x02\x9f\xed\x0f\xb2\x38\x12\x27\xf1\x49\xc6\x93\xb6\x4f\x99\x8b\x84\x59\x25\x69\x5c\x92\x25\xfb\xdb\x66\xe1\x19\x05\xd9\x41\xe6\x5b\xb1\x5c\xd2\x89\x0b\xb2\xff\xea\x6e\x34\xef\xcb\x1f\xff\xf6\x82\xf9\x6c\x7f\xb2\x33\xa1\x6e\x4c\xbf\xca\xeb\x7a\xf0\x99\xbf\xa8\xf1\xc9\xa4\xc8\x90\x52\xae\x0d\xe1\x22\x94\x75\x39\x1d\xb6\x64\x6a\x2a\x72\x3c\xdc\x51\x20\xe6\x25\xf1\x73\xe4\x47\xac\x4b\xe3\xe8\xda\x5d\x00\xce\xce\x0e\xc4\x43\x38\x0b\x75\x0d\xfa\xcf\xee\x8b\xbe\x88\x37\x96\x96\x01\xfe\xe8\x97\x67\xb5\x52\x37\x83\x1a\xf7\x2f\xb6\x09\xf8\xc2\xa3\xe4\x9e\xb5\x9b\x01\xc6\x35\xf8\x1d\x00\x00\xff\xff\x1c\x10\xd4\x05\x55\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x40, 0xb3, 0xf3, 0x54, 0x96, 0x3a, 0xa1, 0xac, 0x7b, 0x77, 0xaa, 0xee, 0xf4, 0xa5, 0x2, 0xb4, 0xf8, 0x81, 0x97, 0x38, 0x8c, 0xd5, 0x57, 0x7f, 0xf5, 0x79, 0x83, 0x20, 0xdc, 0x22, 0x65}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcd\x6e\xea\x3a\x10\xc7\xf7\x79\x8a\x81\x45\x6f\x90\xce\x49\xf6\x88\x22\x55\xe8\x72\x57\x07\x55\x14\xdd\xfd\xe0\x4c\x12\x8b\x60\x47\xb6\x43\x5a\x55\xbc\xfb\x91\xf3\xed\x84\x96\x56\xaa\x57\xd4\x9d\xb1\x67\xfe\xf3\x9b\x71\xc2\x30\x84\x43\xca\x35\x18\x85\x42\x23\x33\x5c\x0a\xe0\x1a\xca\x14\x0d\xa0\x00\x64\x4c\x16\xc2\x40\x29\x8b\x2c\x02\x55\x08\xcf\x7a\x18\x09\x9a\x0c\x70\xa3\x29\x8b\xa1\xc8\xed\x46\x2c\x55\x89\x2a\x82\xdd\xf6\xa0\xed\xdf\x08\x11\x69\x9e\x08\x34\x14\x55\x4e\x8a\x18\xcf\x39\x09\xf3\x8f\x06\x26\xb3\x8c\xaa\xcb\x3c\x8f\x9f\x73\xa9\x0c\xec\xa4\xd8\x16\x22\xe1\xc7\x8c\x0e\xf2\x44\x02\x62\x25\xcf\x30\x1f\x6f\xcf\x5b\xfb\x3f\x64\x30\x42\x83\xff\x73\x2a\x75\x63\xec\xec\x75\x96\xff\xbe\xe2\x39\xcf\x68\xb7\x3d\x34\x66\xfd\x46\x67\xb3\xdb\x1e\xb6\x75\x02\x5c\x24\xed\xd5\xc3\xbd\xb9\xe7\x0d\x24\xf2\xbb\x64\x9e\xa2\x48\x91\xd6\x4b\x68\x7e\x2c\xe0\xdd\xf3\x00\x00\x72\x45\x39\x2a\xf2\xad\x06\xa4\x96\xf0\x54\x98\xf4\xa9\x56\xd3\xda\x40\xb3\xc2\x10\x36\x29\x8a\x84\x7a\x7d\x00\x45\x04\x8a\x4c\xa1\x04\xf0\x18\x4c\x4a\x5d\x19\x30\x53\x84\xd1\x1b\xa4\xa8\x6d\x75\xfa\x08\x49\x75\x27\xf2\x18\xea\x3b\x83\xa3\x54\x4a\x96\xab\x07\x27\x91\x60\xe8\xb4\xf6\x6d\xaa\x4b\x37\xfd\xe0\xc5\x48\x85\x09\x3d\xa3\x49\x17\x30\x7b\x04\xc1\xb3\x36\xab\x76\x65\x64\xda\x8a\x93\xda\x53\x0c\x8f\x3f\x79\xe9\x6c\x72\x97\xa0\x72\xdf\xea\xb3\xe9\xe0\x81\x47\x48\xc8\x34\xaa\x4e\x6a\xb2\x70\x4e\xb1\x2b\x48\xc8\x6c\x30\xc7\x23\xcf\xb8\x79\x5b\x3d\xbc\x8f\xe9\x0a\xfa\xb3\x9f\x8b\x63\xc6\xd9\x75\xed\xf7\xb4\x4c\xfe\x5b\x05\xeb\x0a\x13\x86\xf0\x07\x4f\x04\xba\x50\x54\x95\x6e\xec\x03\xac\x0b\xc0\x36\xda\x05\x33\x1e\xc1\x91\x62\xa9\x08\xce\x5c\x18\xcb\x9f\xf5\xdb\x6d\x0f\xce\xc1\x3c\x86\xd9\x6d\x15\x02\x96\x12\x3b\xf9\x43\xaa\xda\x95\xa3\xe0\xcc\x9f\xef\x07\xad\x77\x27\x1e\x21\x4d\x1d\xd3\x6c\xee\xea\x77\x9d\xe4\xf9\x52\xd7\xa5\x07\xd7\x31\x18\xd2\x11\xb0\x0a\xf1\x2e\x0c\x7f\x98\xc8\xf2\x83\xe2\xba\xd7\xd7\xfd\xe0\xdd\x88\x26\x0c\xe1\x3f\x32\xb0\x27\x46\xfc\x42\x0a\xfa\x02\xd7\x7d\x6c\xc5\x1c\xa3\xd1\x36\x94\x37\x64\x4c\x4d\x63\xd8\x60\xfe\x1d\xc6\x46\x7c\x4d\xca\xf1\x15\xe0\x1c\xa7\xb5\x3f\x39\xe3\x0e\x8e\x8e\xfd\xc2\x51\xe9\xe7\xb9\xb4\x4c\xde\x56\xad\x67\xb2\x65\xf0\x1b\xdc\x8d\xaa\xbb\x51\x84\x86\x00\x2b\xd8\x86\x83\x04\x14\x69\x59\x28\x46\x4e\x19\x3b\xf0\x60\xf5\x7b\x34\x63\x58\x75\xd2\x8e\xca\xe1\x29\x7d\x4d\x97\x1f\x20\xe0\xca\xa8\xf1\x42\xc0\x8d\x7d\xe3\x06\xa3\xb9\xb3\x68\xc6\xa0\xb5\xf2\x57\xbf\xbb\x60\x7e\x81\x91\x9f\x8d\x3c\xe7\x8a\x42\x64\x5c\x9c\x80\x5e\xb9\xae\x74\x1f\x4c\xbc\x4e\x35\x4e\xcd\xab\x77\xa3\xf6\xfd\x13\xe0\x00\x79\x7f\x94\x39\x30\x57\x25\x5c\x3d\x4c\xa7\xca\x5d\x88\x7f\x7d\x46\x6d\xff\xf3\xbe\x9b\xf3\xa0\x07\x7b\xd2\x32\xbb\x90\xea\xfd\xdc\x09\xb5\x9e\xcc\xc0\x46\x85\x5a\xcf\xaf\xa7\xef\xf2\xc7\x5a\xfe\xf2\x09\xb8\xb1\x54\x15\x04\x3d\x73\x65\x4a\x4d\x83\xf5\xdf\x38\xcd\xd7\xd3\x91\xc6\x90\xd8\xa8\x6e\xbd\x42\xed\x2c\xbb\x8e\xfa\xff\x4e\x02\xae\x7e\x06\x55\x42\xe6\x13\xe6\x3a\xeb\x3a\xf1\xab\x77\xf5\xfe\x06\x00\x00\xff\xff\x56\x6e\xb3\x11\x0f\x0a\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0xe3, 0x58, 0xae, 0x9, 0x18, 0xba, 0x7c, 0x55, 0x15, 0x1e, 0x2a, 0x5d, 0x2e, 0x4d, 0x88, 0xa8, 0x45, 0xd7, 0x4b, 0x51, 0x17, 0x10, 0xbb, 0xc4, 0x79, 0xf5, 0xfe, 0x88, 0xe0, 0x45, 0xa5}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc9\x6e\xdb\x3c\x10\xbe\xeb\x29\xbe\x5f\x87\x3f\x32\xd0\xd8\x97\xa2\x07\x23\x0b\x82\xa4\x01\x72\x49\x03\x37\x7d\x00\x9a\x1a\x49\x6c\x65\x8e\x40\x8e\xe2\x04\x41\xde\xbd\xa0\x16\xda\xb2\x9d\xea\x44\x93\xb3\x7d\xcb\x78\xb1\x58\xe0\xb9\x32\x1e\xe2\x94\xf5\x4a\x8b\x61\x0b\xe3\x51\xb0\xeb\xaf\x0a\x72\xce\xd8\x12\xca\xe2\xf1\xfe\x19\x85\xe3\x4d\x12\x92\xd8\x12\x94\xd6\xdc\x5a\x81\x30\x94\x65\xa9\xc8\xa1\xf5\x21\x58\x2a\x82\x23\x6d\x1a\x43\x56\xce\x3c\x56\xa4\xc9\xbc\x90\x83\x23\xcf\xad\xd3\xd4\x95\xd8\x56\x46\x57\xa1\xd9\x86\x1d\xa1\x36\x1b\x23\x94\x43\x2a\x65\xa1\x70\xcb\x75\x4d\xdd\x38\x4f\xed\xba\x36\x1a\xab\x31\x35\x31\x9b\x86\x9d\xe0\x91\xed\x7d\x6b\x4b\xb3\xae\xe9\x99\xff\x90\xed\x66\x43\x7a\x78\x9d\x8e\xf1\xdf\x5f\xd5\xa6\xa9\x69\x44\x81\x74\x77\x91\x26\xc9\x1e\xfe\x2c\x8e\xbe\xc4\x4d\x9e\x3b\xf2\xfe\x0b\xb6\x46\xaa\xdc\xa9\xed\xc3\xdd\x12\xbf\x1e\xac\x7c\xfb\x3a\xc3\x7b\x92\x00\x40\xc0\xb2\xa2\x82\x1c\x59\x4d\x81\x8c\x00\x7f\x8c\x27\x77\xe6\xa1\x23\x98\x2e\xa1\x26\x89\xef\x2b\x2a\x96\xf8\x7f\x37\xca\x7c\x07\xfc\x54\x75\x2e\xba\xea\x91\x50\x61\xe4\xd4\xb0\x37\xd2\xdd\x07\x70\xc2\xb1\xc9\xf0\xd4\xf7\x78\x3f\x64\x66\x3e\x56\xf9\xe8\x3b\x35\x8e\x1a\xe5\x28\xf3\xa6\xb4\xe4\x96\xb8\x69\xa5\xba\xe9\x25\x0e\x58\x31\x7c\x8b\x05\xd6\xec\x1c\x6f\xa1\xe0\x0e\x61\xf7\xb9\x67\xbe\x9b\xe4\x00\x76\xf8\x3c\xd5\xc5\x7c\x0f\x3b\x2e\x87\x94\x18\x11\xbe\x79\xdf\xe0\xe2\x34\x2f\x57\x59\xd0\x6f\x89\x93\x8f\x3f\x85\x9d\x2a\xe9\x49\x49\x35\x9b\xd4\xbc\xbe\x46\xa3\xac\xd1\x59\x3a\x60\x42\xce\xe4\x61\x59\xe0\x25\x18\x50\x59\xf0\xfa\x37\x69\x81\xea\xc9\xf4\x0d\x69\x53\x18\xca\xd1\x28\xa9\xd2\x59\xb2\x4f\x41\x49\x32\xb5\xb9\x47\xd3\x1b\x75\xdc\x8a\xbe\x58\xcc\x09\x7a\xc4\x60\x5c\x86\x02\xc3\x20\x3b\xbf\x4d\x5b\x44\x96\x87\xc2\x47\x64\x9f\x5a\xb1\x29\xd3\x3b\x03\xe0\x72\x17\x3e\xe5\xba\x24\xb9\x55\x8d\x5a\x9b\xda\xc8\x5b\x76\x92\xd4\x7e\x05\x8f\x39\x8d\x3a\xfd\xc3\x5b\x57\xd9\x67\x3a\xdc\x72\x5b\xe7\x9d\x00\x9f\xfb\xe9\x14\xc4\xb4\x2f\x38\xb8\x96\x5e\x49\xb7\x42\xe3\x32\x0e\xdc\x8d\x16\x8b\x5b\xd1\xad\x7c\xf8\xc1\x5b\x7b\x6a\x27\x47\x89\x6c\x21\xb8\x38\x3f\xf2\x69\x3c\x67\xfb\x7f\x04\xbb\xf3\x54\xb9\xbb\x83\x95\x34\x76\x0a\xe6\x33\x91\xc6\x63\x26\x81\xc3\x25\x2e\xce\x6d\x21\x13\xb4\x0d\x7b\xd9\xdb\xc5\xff\x8e\xe6\x2c\x49\x1e\xee\x7c\x36\x9b\x6b\xb6\xa2\x8c\xf5\x7b\x03\xcf\x96\x48\x7f\x38\x53\x1a\xab\xea\x9e\x07\xf8\x2a\x8a\x50\xa9\x17\x8a\x13\x2b\xfb\x16\xfe\x95\xd3\xa1\xf7\x47\xf2\x37\x00\x00\xff\xff\xf5\xdb\x8a\x90\x29\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x28, 0x3c, 0x1, 0x82, 0xf1, 0x2d, 0x15, 0xf4, 0x59, 0x6c, 0x88, 0xad, 0xc8, 0x31, 0xc7, 0x51, 0xaf, 0xbd, 0xa7, 0x9a, 0xf5, 0x54, 0x1, 0x75, 0xa, 0x52, 0x28, 0xc8, 0xec, 0x76, 0xba}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfb\x29\x06\x1d\x8a\x0c\x46\xba\x87\x12\x08\xa1\xbe\xd5\x84\xd4\xed\x7d\xbc\x1a\x49\x8b\xd7\xbb\x62\x34\x6b\x37\x18\x7d\xf7\xa2\x3f\xd1\x3f\x1c\xd2\x43\x74\x12\xc3\xef\x31\xf3\xde\xcc\xa6\x69\x0a\x87\xd2\xd4\x20\x8c\xae\x46\x2d\xc6\x3b\x30\x35\x5c\x4b\x14\x40\x07\xa8\xb5\x0f\x4e\xe0\xea\x83\xcd\x80\x83\x53\xad\x42\x3c\x58\xe3\x4e\x80\xa0\xbd\xb5\xd4\xab\xc4\x83\x91\x1a\xaa\x70\xb4\x46\x43\x2d\x9e\xb1\xa0\x0e\xc7\x5c\x88\xa1\xc4\x8b\x71\x05\x68\xef\x72\x53\x04\xa6\xac\xc3\xf7\xbb\xc3\xce\xf3\x15\x39\x23\x56\xca\x9c\x2b\xcf\x02\x7b\xef\x76\xc1\x15\xe6\x68\xe9\xe0\x4f\xe4\x20\x67\x7f\x86\x68\x5d\x8e\xde\xf9\x9f\x24\x98\xa1\xe0\x1f\x43\xd7\x7a\x80\x17\xb5\x91\xfc\xf1\x17\xcf\x95\xa5\xfd\xee\x30\x60\x53\x61\x64\xa6\x91\xda\x79\x87\xd6\xf3\x5a\xa4\xd4\x3c\xae\x9b\x52\x00\x00\x15\x53\x85\x4c\x71\x6d\x0a\x47\xfc\x00\x4f\x41\xca\xa7\x3e\xbe\x0d\xdc\x3a\xa4\xfd\x4c\x0e\x3d\x91\x14\x24\xcf\x58\xe1\xd1\x58\x23\x6f\xf1\x34\x48\xf2\x3c\x86\xfa\xd2\x85\xf9\x82\x52\x6e\x12\x5d\x92\x3e\x7d\xff\x76\x9b\x81\xd3\xef\x5a\xd2\x3c\xc6\xf3\xa6\xed\x67\x7d\x11\x47\x13\x07\x68\x99\x30\x7b\x9b\x2f\x24\xf7\x0c\x53\xcb\x68\xb3\xd0\x33\x49\x60\x37\x96\x1a\xf5\x75\x96\xd6\x8b\x4d\x5e\x49\x93\xb9\x10\x7f\x64\xe3\xb7\x6b\xef\xaf\x5d\xcf\xfc\x7e\xfa\x5d\x7d\x68\x60\x98\x31\x74\xda\x4f\x87\xbb\x67\x34\x4d\x41\x33\xa1\x10\xe0\xfb\x9d\xeb\xd1\x6e\x97\x9e\x94\x34\x7b\x13\x6a\xd5\xba\x6d\x7c\xcf\xee\x7a\x80\x2d\xfc\xd7\x92\xb7\xcb\xc3\x4f\x5e\xa9\xf6\xf6\x42\x3c\x71\xcd\x63\xbc\x88\xe0\x13\xd3\xdb\x05\x2c\xc8\x05\xc9\xc3\x7d\xd1\xaf\xfe\x7d\xb7\xaa\x51\xd4\x67\xd6\xa8\x46\xfd\x0b\x00\x00\xff\xff\xb7\x06\xc9\x5e\x57\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x57, 0x2e, 0x60, 0x85, 0x4, 0x8d, 0x51, 0x88, 0xaa, 0x42, 0xdf, 0x1c, 0x8a, 0x67, 0x7c, 0x3c, 0x71, 0x30, 0x5a, 0x2f, 0xcf, 0x4e, 0xe3, 0xb1, 0xb7, 0x63, 0x85, 0x19, 0x85, 0xe2, 0x8a}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x6f\xd4\x30\x10\xc5\xef\xf9\x14\x8f\x1c\x4a\x72\x20\x7b\x41\x1c\xa2\x42\x05\x2c\x95\xf6\x52\xa1\xb2\xc0\xd9\xb1\x27\x1b\x83\xd7\x13\xd9\x13\xb6\x08\xf5\xbb\x23\x27\xd9\xbf\x5a\xd5\xa7\xc8\x79\x9e\xf7\x9b\x37\xb3\x58\x2c\xb0\xee\x6c\x84\x04\xe5\xa3\xd2\x62\xd9\x63\x67\xa5\x33\x41\xed\x22\x94\xc7\xc3\xfd\x1a\x6d\xe0\x2d\xa4\x23\x44\xbb\xf1\x14\x22\x34\x3b\x47\x93\x58\x79\x03\x43\x51\x02\xff\x8d\xb0\x92\x65\x76\xdb\x73\x10\x3c\xb0\xbf\x1f\xfc\xc6\x36\x8e\xd6\xfc\x9b\xfc\x54\x24\xbf\xbc\xce\xf7\xfa\x2f\x4f\x6a\xdb\x3b\x3a\xd8\xe5\xc7\x8b\x3c\xcb\x4e\xf0\x0a\x6b\x6a\x7c\x5f\x79\x79\xf7\xb6\xc4\xbf\x2c\x03\x80\xd4\xc6\x23\xb5\x14\xc8\x6b\x82\x74\x4a\xb0\xb3\xce\xa1\x21\x0c\x91\x0c\x5a\x0e\x23\x3f\xef\x3c\x85\xd7\xa7\xfc\xe3\x73\x47\x72\x72\xf5\x48\x6d\x8d\x9b\xa3\x7d\xf5\xf9\xa8\x1e\xe5\x7d\xa0\x5e\x05\x2a\xa6\x34\x6a\xa8\x41\xba\xe2\x13\x87\xc0\xbb\x1f\xca\x0d\x54\xe2\xe6\xa3\xd6\x3c\x78\x49\x80\x98\xcf\x62\x81\x66\xd4\x40\x21\x1c\x59\xf9\x25\xb0\x74\x22\xb9\xb6\x3a\xa3\xc3\xfb\x79\x10\x55\x14\x0e\x6a\x43\x07\x6d\x3a\xd5\xe4\x72\x3b\x52\x5d\xc6\x5d\xfd\x9c\x67\xab\x1a\x97\x38\xaf\x76\xf9\xa1\x48\x13\xa8\x71\xf5\xe7\xb7\xc9\xf2\xab\x92\xae\x3c\xf3\xbd\xbb\x43\xaf\xbc\xd5\x45\x3e\x37\x0f\xc3\x14\xe1\x59\x90\x30\x29\x2d\x13\x37\xbf\x48\x0b\x94\x4c\xdb\xd4\x93\xb6\xad\x25\x83\x5e\x49\x97\x4f\xe5\x9e\xa7\x8c\xe9\x89\xf4\x20\x74\x9e\xdf\x7e\x31\xc7\xd7\x67\x8b\xf9\x42\x7e\x69\xb8\xbe\x15\xdc\xbe\xb9\x12\x65\xb5\x2f\x59\xec\x3f\x56\xcb\x1a\xd6\x94\xd9\xe1\xfd\xbc\xdc\xa9\xc6\x29\x60\xcf\x51\x4e\xe8\x5e\x5d\xa9\xbd\x21\x59\x2d\x63\x51\x56\x9a\xbd\x28\xeb\x63\x61\x4d\x59\x23\x5f\xcf\xf4\xc9\xf2\x22\x88\xd5\x12\xb1\xe3\xc1\x19\x74\xea\x0f\xa1\x21\xf2\x30\xe4\x48\xc8\xe4\xb3\xfb\x73\xf6\x3f\x00\x00\xff\xff\xb2\xae\xc9\x92\xb5\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd7, 0x46, 0x4c, 0xd, 0x84, 0xb8, 0x15, 0x6d, 0x3b, 0xb3, 0x45, 0x54, 0xac, 0x1, 0x92, 0xab, 0x92, 0x1b, 0xb7, 0xf1, 0x38, 0x48, 0xad, 0x9, 0xef, 0xe5, 0x5b, 0x8c, 0xe8, 0x42, 0x2, 0x64}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x6f\xdb\xb8\x13\xbd\xeb\x53\x4c\x7d\x70\x65\xb4\x90\x7f\x05\x8a\x1e\x84\x3a\x45\x93\xfc\x02\xe4\xd0\xa0\x48\xdd\x5e\x82\x1c\x28\x6a\x6c\x71\x43\x93\x5a\x72\xe4\xc4\x08\xf2\xdd\x17\xfc\x23\x59\x74\xb4\xc1\xf2\x90\xc8\xe4\x9b\x19\xf2\xcd\x9b\x21\x97\xcb\x25\xac\x1b\x61\xc1\x72\x23\x5a\x82\xce\xa2\x05\x6a\x10\x6e\xae\xd6\x3f\x84\x22\x34\x60\xd0\xea\xce\x70\x04\xd2\xb0\x13\x8a\x80\x81\xc2\x47\x07\xc8\x9c\xf5\x35\xc1\xae\xb3\x04\x15\x82\xe9\x14\x3c\x0a\x6a\xbc\x03\xc6\xb9\xee\x14\x01\x35\x8c\xa0\x61\xc1\xeb\x2e\x75\xe9\x1d\x58\xd2\x06\x6b\x10\x0a\x96\xee\x93\x6d\x71\x39\x04\xcf\x32\xb1\x6b\xb5\x21\xb8\xd1\xea\xaa\x53\x5b\x51\x49\x5c\xeb\x07\x54\xb0\x31\x7a\x07\xb3\xd3\xe9\x59\x8f\xff\xff\x13\xdb\xb5\x12\x6f\xae\xd6\x11\x79\x9c\x18\x30\x3f\x90\x58\xcd\x88\xfd\x11\xf8\x68\x23\x2c\x99\x1b\x90\x53\xa1\x4f\xe2\x66\x64\x98\xb2\x8c\x93\xd0\x2a\xcf\x00\x00\x0c\x72\xd1\x0a\x54\x54\xc2\xf7\xba\x36\x68\xed\x47\x3f\xaf\xd8\x0e\x4b\xf8\x45\x46\xa8\x6d\x98\xa9\x31\xb0\x2f\xb4\x4a\x17\xa8\xe9\x76\x95\x62\x42\xa6\xd3\xbc\x23\x5b\xc2\xdd\xef\x2b\xf1\xf4\xe5\xf3\x7d\x98\x33\xfa\xc0\x24\x1d\x2e\x8f\xae\x1c\x24\x58\xa5\x90\x73\x54\xb8\x11\x5c\x30\x23\xd0\x61\xe2\xe6\xee\xb3\x05\x3c\x67\x1e\xe8\xb2\x22\x35\x67\x12\xf6\xcc\x08\x56\x49\x84\x8d\x36\x3e\x51\x42\x6d\xd3\x44\x6e\xd0\xa0\xe2\xe8\xed\x24\x52\x5c\x28\x61\x7e\x24\xbc\x18\xa5\xb3\x77\x7f\xdb\x1b\x3a\x55\x39\x87\x06\x39\x8a\x3d\x9a\xf7\x16\xb8\x96\x12\x3d\x91\x83\xd7\x81\xcb\x8b\x61\xed\x16\x37\x25\xcc\x9f\x4f\x15\x50\x1c\x11\x3f\xbb\x4a\x0a\xfe\x72\x0c\xfa\xd3\xe0\x5e\xe8\xce\x3a\xed\xc2\xf5\x25\x54\xb8\xd1\x06\x7d\xf8\x51\xf6\x00\x9f\x90\x77\x84\x36\x39\x93\x50\xdb\xeb\xcb\x73\x6f\x50\xc2\xef\x6b\x45\x5f\x3e\x07\xc7\xad\xc1\x96\x19\xcc\xad\xd8\x2a\x77\x70\xd6\x51\x93\x9f\x6b\x63\xf4\xe3\x1f\x26\x3b\x5c\xc0\xfc\x7b\x28\x05\xc7\x2f\xc4\x61\x51\x6e\x8a\x13\xbf\xb0\x1a\xc9\xb6\x20\x4d\x4c\xfe\xea\xda\x56\x1e\xb2\xc1\x6c\xb9\x84\xca\xbb\x06\x76\xe4\xbe\xa7\x70\xa2\x64\x85\x82\x58\x53\xaf\x23\xa3\x81\x15\x84\x5d\x17\x11\x54\x04\xe7\x5f\x27\x93\x77\x96\x3b\xe1\x97\xe3\x3d\x86\x85\x5f\xc1\xf8\x27\xa3\x66\x31\x84\x71\xe3\xdb\x37\x68\x99\x12\x3c\x9f\x45\x06\xa0\xd6\x68\x41\x69\x0a\x45\x0f\x4c\x81\xae\xfe\x42\x4e\xc0\xc8\x1f\xc1\xb6\xc8\xc5\x46\x60\x0d\x2d\xa3\x66\xb6\x48\x4e\x1e\x48\xed\xd5\x12\xf4\xf0\xde\x42\xeb\xd3\xec\x73\x7a\x54\xce\x89\x32\x87\x83\x4f\x0b\x09\x56\xb0\x45\x8a\x9b\xcc\x07\x4c\x7a\x9a\x82\xb3\x96\x55\x42\x0a\x12\x68\x07\xa6\xfe\x83\x00\xcf\xf2\x11\x65\xa7\xab\x6f\xb1\x76\xa1\x3b\x59\x7b\xba\xb6\xa1\x06\x7c\x85\x4c\x26\x1e\x8e\x7e\x67\xc1\xdd\xcb\x20\xcf\x91\xec\x5c\xe7\x28\x24\xaa\x2d\x35\xb0\x5a\x4d\x35\x8d\x7e\x75\x3e\xff\x17\x70\xd2\x3e\xe2\x72\x09\xb3\xef\xc6\xb0\x03\x44\xb4\x6d\xfc\xce\x2b\x04\xfc\xbb\x63\xd2\x77\x8f\x68\x0e\x06\x25\x23\xac\xa1\x46\x62\x42\xda\xd9\x78\xb3\xb1\xf2\xfa\x3e\x14\xf3\x7e\x61\x90\x51\x28\xd3\xde\x49\x34\x1e\x50\x7b\x66\x20\x28\x6c\x05\xff\x4b\x66\x83\x45\xe8\x74\x49\x73\x2f\x6e\x83\xaf\x7b\x58\xc1\xdd\xfd\x60\xf3\xd8\x08\x89\x6f\x9d\x15\xce\x62\xa4\xe7\x24\x6b\xae\x4f\x54\x03\xfc\x00\xd3\x7c\xdd\x79\xd3\xfb\xb7\x2c\x2f\x7a\x95\x1d\x52\x55\x8e\x20\x6f\xe9\x72\x8b\xf4\x75\xfe\x9c\x2a\xf2\x36\x2a\xe7\xe5\x2c\x4f\x29\xd8\x22\x45\x16\x7a\xc8\x51\x94\xf9\x62\x54\x7d\x31\x13\x3f\xd8\x03\x82\xed\x4c\x9a\x0c\x7e\xdc\xb1\xb0\xb0\x67\x52\xd4\x7d\x6b\x8d\x1d\xae\x57\x69\xe2\x4f\x6c\xe0\xdd\xe4\xb9\x0b\xde\x20\x7f\xc8\x17\xf0\xdc\x17\xc2\xf9\x88\xd8\x34\x9a\x2b\x0e\x1f\xf1\xdd\x6c\xd1\xab\xa8\x1f\x43\xea\x0b\xd6\xb6\xa8\xea\x3c\x59\x75\x63\x52\x10\xaf\x61\x10\x6e\x73\x4f\x50\x39\x9d\xab\x8f\x93\x46\xbc\xa3\xd2\x97\x51\xcc\xfb\x34\x2a\xb9\xfe\x27\x4a\x72\x4a\x34\x6e\xa4\x32\x48\x7f\xf5\xc5\x10\xfe\x7f\x80\x4f\xc3\xea\x4b\x96\x25\xd5\xe5\x7a\xf8\xd0\x45\x98\x72\x85\xd9\x6a\x2b\x08\x04\x8d\xee\xe6\xa1\xdb\x9e\x5c\xce\x90\xde\x28\xfe\xdf\xcd\xd5\x3a\xe5\x70\xf4\x12\x7a\xa3\x09\xa7\xe4\x84\x57\x92\xfb\x9b\xce\x27\x64\x8d\x7e\xa4\xa8\xd1\xc3\x69\xf8\xfc\x38\x2d\x8e\xf2\xf8\x99\xa5\x5c\xf6\x1d\x54\x5b\x3a\xbd\xb9\xa7\x4f\xe0\xea\xe9\xfa\xd2\xe6\x8b\x82\x6b\x45\x4c\x28\x9b\x4f\xdd\xf3\x8b\x12\x66\xeb\x06\x41\xe1\x13\xf5\x4f\x91\xd8\x31\x1b\xb6\x47\xa8\x10\x55\x78\x47\xd5\x31\x21\xd2\x29\x0f\xeb\xd9\xb0\x89\xe9\x77\x82\xeb\xd2\x93\x0f\x8b\x0f\xf0\x29\xc6\xf4\x68\xb0\x01\xfe\x2a\xa8\x50\xdc\x20\xb3\x58\x43\x75\x80\x4f\x7d\x6b\x7e\xc9\xfe\x09\x00\x00\xff\xff\x6a\xa2\x23\x8d\x26\x0c\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0xa8, 0xaf, 0x9e, 0x9e, 0x61, 0x2, 0x51, 0xaf, 0xcb, 0x78, 0x40, 0x6c, 0xd, 0x3a, 0x97, 0xb3, 0x59, 0x30, 0xed, 0xa7, 0xd4, 0x75, 0x14, 0xee, 0xd3, 0xf3, 0x2a, 0xbc, 0xdb, 0xd0, 0x5c}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6f\xe2\x30\x10\x85\xef\xf9\x15\x6f\x39\xa0\x20\x51\xb8\x57\xb4\xd2\x2e\x2a\xb7\x45\x55\x17\xf5\x3e\x84\x81\x58\x6b\xec\xc8\x9e\xc0\x22\xc4\x7f\x5f\x39\x34\x89\xcd\xb2\x6a\x7d\x8a\x26\x6f\x3c\xdf\x7b\x9e\xe9\x74\x8a\x55\xa9\x3c\xc4\x91\xf1\x54\x88\xb2\x06\xca\xe3\x58\x92\x80\x0c\xa8\x28\x6c\x6d\x04\x47\x5b\xeb\x0d\x5c\x6d\xb2\xd0\x21\x16\x9e\x05\x4a\x3c\xeb\x2d\xea\x2a\x14\x1c\x17\xac\x0e\x8c\xe5\x62\xe5\xb3\x4c\xed\x2b\xeb\x04\x4b\x6b\x16\xb5\xd9\xa9\xb5\xe6\x95\xfd\xcd\x06\x5b\x67\xf7\x18\xdc\x96\x07\xad\xfe\xe5\x0f\xed\x2b\xcd\xcb\xc5\xea\x43\xd9\x17\x3a\xcd\x4f\x16\xda\x90\xd0\xbb\xe2\xa3\xff\x90\x25\xb5\x41\x96\xc5\x6e\xce\x59\x06\x00\x95\xe3\x8a\x1c\xe7\x5e\xed\x0c\xbb\x47\x50\x2d\x65\xfe\xc3\x3a\x67\x8f\xef\xa4\x6b\x1e\x63\x4e\x15\xad\x95\x56\xa2\xd8\x8f\x30\xfc\x7e\xb5\x3e\xc2\xb9\xe9\x0f\x67\x3a\xc5\x1b\x4b\xed\x0c\x98\x9c\x3e\x41\x6d\x21\x25\x77\x21\x91\x76\x4c\x9b\x13\x4a\xf2\x20\x14\x56\x6b\x6e\x10\xba\x7e\xb5\xc5\x75\xfc\xc4\x8b\x75\xb4\xe3\xc9\xba\x01\x98\x0d\x7b\x9f\x93\x79\xd7\xf7\x9c\x07\x77\x8f\xb8\xfb\xf3\xd7\xf5\x86\x57\x92\x72\x84\x6f\x4f\x30\x4a\x47\xa4\xe1\xb8\x06\xb5\x2b\x5d\xb2\xd8\xc7\xdc\x31\x09\x83\x60\xf8\x08\xde\x57\x72\xba\x07\xac\x59\xa2\x32\x66\x0f\x31\x4b\xd1\x5c\xf1\x12\x7a\x7b\xac\x7c\x94\x8c\xf1\x74\x60\x28\x09\x0b\x12\x25\xd5\x29\x6e\xd2\x08\xea\x7c\xf6\xd0\x4f\x1c\x43\xec\x17\xfc\x27\x23\x8b\xd6\x59\x55\xaf\xb5\x2a\x50\xb4\xcf\x7a\xc2\xd6\xba\x06\xe3\x53\xa7\x73\xaa\xf0\xd4\xd2\x15\xd1\x5e\xb4\xa8\x49\xd0\x13\xe5\x7d\xcd\xb3\xe1\xf9\x76\xaf\x23\xdc\xd7\x06\x66\x1c\x7b\xe9\x3f\xff\x95\x25\x0b\x3d\x79\x63\x6f\xf5\x81\x5d\xaf\xbb\x3c\xe7\x09\x42\x38\x9f\xc5\x94\x34\x44\x99\xdd\xb3\xd9\x64\xe7\xcb\x74\x48\x92\xcf\x38\xf9\x45\xf2\x9f\x67\xba\x1a\x0a\xe3\xfb\x86\x51\x76\xdd\xc7\x4b\xf6\x37\x00\x00\xff\xff\xa1\x63\x82\x06\x7f\x04\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0xbd, 0xb, 0x47, 0x61, 0xb9, 0x8, 0x46, 0x4e, 0xc7, 0x69, 0x2, 0x6a, 0x82, 0xe, 0x36, 0x96, 0x4c, 0x16, 0x20, 0xb5, 0xfb, 0x69, 0x2e, 0xc8, 0x8f, 0x88, 0x4b, 0x20, 0xb0, 0x10, 0xdb}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x26\x3e\x04\x12\xe0\xc8\x97\x0f\xdf\xc1\xb0\x13\x04\x6e\x0c\xf4\x50\x23\x68\xdd\xde\xd7\xf2\xda\x22\x22\x93\x02\x49\x59\x0d\x82\xbc\x7b\x41\x51\x7f\x74\x8c\xb6\x28\x4f\xc4\x6a\x76\x67\x77\x38\xab\xd9\x6c\x86\x6d\x2e\x0c\xac\x26\x69\x28\xb3\x42\x49\x08\x83\x3a\x27\x0b\x92\xa0\x2c\x53\x95\xb4\xa8\x55\x55\xec\xa1\x2b\x19\xb9\x0c\xab\x60\xd8\x42\x58\xc3\xc5\x01\x55\xe9\x02\x9a\x33\x16\x67\xc6\x66\xbd\x35\xa9\xaf\x79\xa8\x64\x53\xb0\xc9\xa9\x0c\x1b\x9c\x05\xd7\xc6\xa1\x5f\xa4\xaa\x51\xe7\xac\xb9\x2b\xe6\xaa\xe4\x8c\x4c\x15\x05\x0f\x59\x42\xc2\x58\xa5\xe9\xc8\x20\xb9\x77\xd8\x4c\x33\x59\x6e\xb0\x7c\x2a\xed\xeb\x28\x23\x8d\x22\x71\x2a\x95\xb6\xd8\x28\xb9\xae\xe4\x51\xec\x0a\xde\xaa\x17\x96\x38\x68\x75\xc2\xe4\x32\x3c\xe9\xf0\x5f\xd8\xd2\x9e\x2c\xfd\x68\xfa\xf3\xe0\x20\xd6\x23\x9f\x7e\xd2\xa9\x2c\x78\xb3\xde\xb6\xb0\x21\x30\x89\xa2\x91\x8a\x31\xed\xf7\x9a\x8d\x99\xe3\xd1\x5f\xa6\x28\xab\x5d\x21\xb2\x67\xb2\xf9\x1c\xcf\xfd\x7d\x0a\xb1\x9f\xe3\xfb\x67\x69\xff\xff\x2f\xc1\x5b\x14\x01\x40\xa9\xb9\x24\xcd\xb1\x11\x47\xc9\x7a\x0e\xaa\x6c\x1e\xaf\xa8\xa4\x9d\x28\x84\x15\x6c\xa6\xf8\xe6\x75\x49\x70\xfb\xe8\x1f\xc9\x25\xa3\x3d\x05\xdb\x91\x30\x58\xe2\xc8\xb6\x85\x75\x8d\x25\x3d\xd8\x9d\x34\x1b\x15\x4f\x77\x4a\x6b\x55\x2f\x6e\xdf\x2e\x15\x4b\x57\x7d\x51\x3f\xc1\x34\xd4\x2e\xfd\xca\x46\x15\x67\xd6\x03\xee\xfd\x3e\x1e\x06\x0f\x49\x1f\x1e\x50\x92\x14\x59\x3c\x59\x35\xfe\x92\xca\xc2\x53\x83\xa0\xf9\xc0\x9a\x65\xd6\x38\x24\xb4\xc6\x24\x89\x82\x49\x75\x4b\x8a\xe5\xd8\x0d\xbe\x92\x6b\xab\x6b\x2a\x76\x4a\x8b\x7d\x72\x13\x64\xcb\x83\x1d\xba\x75\x70\x2c\xfb\x8a\x69\x7b\x71\xe1\x78\xfb\x5a\xf2\x22\x1c\x77\xb3\xde\x0e\xb9\x9f\xc8\xd2\x7d\x9c\x24\x37\x20\x73\x83\x3f\x00\x87\x09\x66\x33\xac\xbc\xa9\x09\x92\xeb\x0f\xb6\x36\x41\xb7\xcd\xd7\xa1\x14\x16\x77\x1f\x07\x48\xfd\x92\x3c\x85\xd0\x38\x09\x38\x0d\x9d\x19\xc2\x76\xea\xb6\x9b\xde\x23\xbc\xf3\xd2\x76\xfb\x52\x87\x8e\x17\x77\x17\xec\x53\x58\x35\xbf\xc2\xdf\x66\xf9\x17\x1f\x93\x66\xdd\xa0\xde\x12\xe8\x5d\xf7\x8a\x83\xd2\x97\x7f\x80\xeb\x6e\x5e\x51\x89\x65\xd7\x5f\x60\xdb\x96\x36\x34\xb6\x30\xa6\xe2\xbf\xb3\xf2\xb0\xcb\xe9\x70\xfd\x27\xc7\x07\x2d\xb8\xf3\x5b\x8d\x02\xf4\x48\xb0\x6b\x33\x36\xc2\x99\x3c\x64\x08\xc4\x99\x06\x9f\xc8\x5e\x7b\xa0\x61\x23\x07\xb4\xdf\xcd\xf7\xe8\x3d\xfa\x15\x00\x00\xff\xff\x5b\xdc\xed\xeb\x16\x06\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x15, 0x50, 0x1c, 0x2a, 0xef, 0x95, 0x94, 0xda, 0x60, 0xa9, 0xdc, 0x20, 0xde, 0x5e, 0x16, 0xec, 0x14, 0x71, 0xd2, 0x4a, 0xb5, 0x56, 0xda, 0x2c, 0x1a, 0x9b, 0x49, 0x8e, 0x30, 0x10, 0xe5, 0xe9}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x54\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x4c\x7d\x48\x25\xc0\x90\xef\x41\x53\xa0\xc9\x22\xc0\x02\x5b\x6c\x91\x76\xb3\xd7\x8c\xa9\x91\x34\x08\x4d\x0a\xe4\xc8\xae\x60\xf8\xbf\x2f\x48\x7d\x72\x11\xdf\x4c\xce\xbc\x79\xf3\xde\xa3\x0e\x87\x03\xfc\x6a\xd9\x83\x38\x34\x1e\x95\xb0\x35\xc0\x1e\x10\x84\x4e\x9d\x46\x21\xa8\xad\x0b\x7f\xd7\xfb\x2c\x34\x89\x05\xe5\x28\xdc\x23\x18\xba\x80\x66\xf3\x0e\x6c\x40\x5a\x62\x07\xa8\x94\xed\x8d\x84\xaa\x23\x41\xef\xa9\x8a\x30\x8e\x14\xf1\x99\x4d\x03\xce\x0e\xa8\x85\xc9\x67\x1f\x32\x50\x68\x92\x46\x34\x03\xd4\xbd\x69\xf8\xa8\x09\xc4\xbe\x93\xd9\xc3\xa5\x65\xd5\x06\xae\xbe\x23\xc5\x35\x53\x05\xc7\x21\xcc\x87\xb7\x33\xf6\x5a\x7e\xa0\xb4\x6f\x80\xae\xe9\x4f\x64\x24\xcc\x89\xb3\xfe\xac\x63\xcd\xcc\xf0\x82\x46\x7c\xe0\x39\x72\xa3\x95\x59\xd8\xe6\xf9\xaf\xbf\xff\xdd\x87\xfa\xe1\xb3\xd6\x81\x0e\xbc\x1d\xbc\x58\x87\x0d\x1d\x6a\x6d\x2f\xbf\x02\x95\xd7\x30\xed\x6d\x03\x3e\x44\xd4\x2d\x28\x4b\x40\xfb\xe7\xe7\x1f\x4f\xfb\xa9\xc0\xf6\xba\x8a\x80\xcf\x8c\x12\x61\xca\x88\xf3\x73\x44\x0f\xe4\x23\x22\x9a\x0a\xbc\x05\x6b\xca\x49\x29\x82\x0e\xa5\x5d\xa5\x09\xcb\x74\xfd\x51\xb3\x9a\x3c\xf0\x93\x23\xb1\x4c\x5a\x94\xc9\x16\xa8\x7b\xe9\x1d\xed\x43\x05\xfd\xee\x48\x09\x55\x1b\x8e\xcb\xb4\x86\x0c\x39\x56\xa9\xcc\x2a\xf2\x3d\xc6\x34\x5c\xd0\x55\x63\x6b\x14\xb2\xeb\x9c\xed\x1c\x87\x28\x44\xdd\xb3\x8c\x4f\x9d\x75\x02\xcf\x93\x61\x71\x3b\xa8\x9d\x3d\xc1\x2e\x39\xdb\xcd\x95\xdf\x49\xb0\x42\xc1\x57\xa6\x8b\x9f\x2a\x93\xb3\x5d\x96\x6d\xe2\x91\x2f\xfe\xde\xc3\x46\xaf\x02\xae\x59\x06\x00\xd0\x39\xea\xd0\x51\xee\xb9\x31\xe4\xee\x01\x7b\x69\xf3\x47\xeb\x9c\xbd\xbc\xa2\xee\x69\x0f\x4f\xd8\xe1\x91\x35\x07\x9f\x0b\xb8\xfb\x36\x86\x61\x01\x08\xbf\xc3\x01\x5e\x48\x7a\x67\x80\xd0\xe9\x01\x38\xcd\x4d\x65\xc9\x9b\xcf\x02\x2d\x9e\xc3\x13\x48\x77\x8d\x4e\x2e\x48\x5c\xc3\xc8\xa4\x9c\xa2\x53\x1e\x23\x97\x2f\x77\x49\xd7\xe8\xff\xd7\x3c\xac\x7f\x0f\xcb\x8a\x05\x3c\x3c\x80\x61\x0d\xd7\x05\x30\xee\x88\x86\x55\xbe\xfb\x36\x16\x2e\x49\x58\xdf\x42\xfa\x5c\xc6\x34\x04\xd2\x60\xac\x00\xfd\x66\x2f\xbb\x62\x41\xbc\x25\x7b\x3f\xcd\x0f\x7b\xca\x95\x9a\xd5\x1a\x66\xd3\x23\xd5\x31\x5c\xd6\xe8\x21\xe4\xc9\x7a\xf2\x5b\x90\x50\x56\x51\x67\x3d\x4b\xe0\x32\xbe\x6b\x69\x9d\xed\x9b\x36\x5e\xbe\x8c\xb9\x73\xc0\x46\xc8\xd5\xa8\x68\x69\xd7\x24\xdb\xa1\x0f\xb3\x7e\x6a\x63\xdb\x2c\x66\xa2\x4a\xc9\xde\xf7\xf4\xe5\xee\x9a\x2a\x3b\x8f\xda\xa7\x3e\x95\x8f\xa8\xd1\x28\xba\x7d\x5d\x13\x55\xac\x4a\x7c\x34\x34\x2a\xe2\xdb\x3c\x99\xba\x52\xdd\x27\xe7\x28\xf7\x69\xb4\xcb\x86\xe4\x25\x7e\x5f\x86\x99\xd2\x8f\x28\x71\x98\x9c\x17\x6b\x77\x91\xf8\xf1\x1d\xdf\x09\x7c\xef\x28\xea\xb6\x11\x86\x3d\x9c\x51\x73\xb5\x8d\xda\xa7\xf5\xbe\x54\x2d\xa9\xf7\xbc\x80\xeb\x1c\x97\x47\x32\x54\xb3\x62\x74\xc3\xff\x70\x42\x2a\x22\xd6\xa7\x5d\x01\xb7\x6c\x0c\xc5\x2d\xfb\x2f\x00\x00\xff\xff\xdf\x4f\x52\x03\x20\x06\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0xfe, 0x2b, 0x5a, 0x37, 0xef, 0xdd, 0xa9, 0x32, 0x26, 0xa7, 0xf7, 0x84, 0xad, 0x43, 0x2c, 0xa0, 0xa5, 0x97, 0x16, 0xae, 0x10, 0x28, 0x25, 0x3e, 0x5e, 0xed, 0xb3, 0x7c, 0xfc, 0xdd, 0x2c}}
	return a, nil
}

var _transactionsTestUpgrade_nft_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\x31\x0b\xc2\x30\x10\x85\xf7\xfc\x8a\xa3\x53\x0a\xd2\x59\xb2\x75\x11\x5c\x9c\x74\x12\x29\xe7\xf5\xd0\x60\x7b\x17\xd2\x0b\x08\xd2\xff\x2e\x51\xe8\x1b\xde\xf2\x1e\xdf\xe7\x2c\xa3\x2c\x48\x16\x55\x3c\xe9\xc8\x01\xae\x97\xa3\xd8\xfe\xd6\xc2\xc7\x39\x00\x80\x94\x39\x61\x66\x8f\x44\x16\xa0\x2f\xf6\xec\x89\xb4\x88\x6d\x8f\x9a\xba\x76\xa4\x62\x19\xc9\x96\xae\xa4\x11\x8d\x87\x81\xdf\x89\x73\x9c\x59\x0c\x27\x2f\x38\x73\x80\xe6\xa4\x72\x28\xf2\x88\xf7\x89\xcf\xfa\x62\x69\x76\xf0\x37\xd7\x6e\x7f\xc4\xd5\xad\xdf\x00\x00\x00\xff\xff\x3c\xcf\x13\x58\x9a\x00\x00\x00"

func transactionsTestUpgrade_nft_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTestUpgrade_nft_contractCdc,
		"transactions/test/upgrade_nft_contract.cdc",
	)
}

func transactionsTestUpgrade_nft_contractCdc() (*asset, error) {
	bytes, err := transactionsTestUpgrade_nft_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/test/upgrade_nft_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0x83, 0x6c, 0xb3, 0x45, 0x7c, 0xc1, 0x2e, 0xd2, 0x17, 0x38, 0x61, 0x46, 0x9f, 0xbf, 0x3e, 0xd1, 0xf, 0x62, 0x68, 0x44, 0xbd, 0x3b, 0x6d, 0x7, 0x58, 0xa9, 0x65, 0x57, 0xb0, 0x9, 0x5b}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4b\x6f\xdc\x3c\x0c\xbc\xfb\x57\xf0\xf3\x21\xb1\x81\x2f\xbb\x97\xa2\x07\x23\x0f\xa4\x49\x03\xe4\x92\x06\xe9\xb6\x77\xad\x4c\xdb\x6a\xbd\xa4\x21\xd1\xd9\x14\x41\xfe\x7b\x21\x3f\x64\xef\x23\x6d\x75\x92\x25\x8a\x33\x1c\x0e\xbd\x5c\x2e\x61\x55\x19\x07\x62\x15\x39\xa5\xc5\x30\x81\x71\x50\xb0\xed\x8f\x0a\xb4\xd6\x50\x09\x8a\x72\x78\xb8\x5b\x41\x61\x79\x13\xf9\x57\x4c\x08\x4a\x6b\x6e\x49\x40\x18\x14\xb1\x54\x68\xa3\xc8\x6c\x1a\xb6\x02\x0f\x4c\x77\x2d\x95\x66\x5d\xe3\x8a\x7f\x22\x75\x0f\x21\xde\x3f\x8e\xc7\xf8\xcf\x2f\x6a\xd3\xd4\x38\x42\x40\x3c\x1d\xc4\x51\x34\x63\x97\x58\xd4\xa6\x31\x48\x92\xc1\x75\x9e\x5b\x74\xee\x7f\xd8\x1a\xa9\x72\xab\xb6\xf7\xb7\x19\x7c\xbb\x27\xf9\xf8\x21\x85\xd7\x28\x02\x00\xf0\x5c\x9f\xb0\x40\x8b\xa4\xd1\x33\x95\x0a\x43\x3c\xda\x53\x07\x9a\xeb\x1a\xbb\xdc\xdd\x83\x1a\x25\xdc\x3f\x61\x91\xc1\xc9\x44\x65\x71\x33\xc5\x1e\xc9\xce\x45\x97\x7d\x4a\xe8\xf1\x72\x6c\xd8\x19\xe9\x6e\x7c\x79\xc2\x01\x66\xb8\xea\x51\x5e\xf7\xb5\x99\x81\x3d\xb6\xeb\xda\xe8\xb7\x1e\xb3\xb1\xd8\x28\x8b\x89\x33\x25\xa1\xcd\x40\xb5\x52\x25\x9f\xd8\x5a\xde\x7e\x57\x75\x8b\x29\x9c\x5c\xf7\x8d\xf1\x22\xc0\xb0\x96\x4b\x58\x77\x31\xa0\xc0\xee\xeb\xd1\xa7\x3a\x75\x1d\xc1\x3d\x3d\xfc\x72\x58\x17\x8b\x99\x28\x70\x31\x3c\x59\x38\x61\xab\x4a\x0c\x91\x7e\x2d\x7a\xa0\xf3\xe3\xc2\x5d\x26\xbe\xc1\x19\x1c\xbd\xfc\xda\xa7\x7b\x54\x52\xa5\x3b\x39\xaf\xae\xa0\x51\x64\x74\x12\x0f\xb5\x41\xce\xe8\x80\x58\xc0\x53\x40\x50\x04\xbc\xfe\x81\x5a\x40\xf5\x5a\xbb\x06\xb5\x29\x0c\xe6\xd0\x28\xa9\xe2\x34\x9a\x4b\x51\x62\x1f\x14\xcc\xe4\xa0\xe9\x34\x0e\x9e\xee\x93\x85\x37\xbe\x5d\x21\x18\x2e\x7c\x82\x81\xc8\x64\xc8\x5d\x88\xa0\xf6\x90\xf8\x40\x74\x8b\x1a\xcd\x33\xda\x03\x07\x06\xc5\x27\x7f\xc0\xc5\x84\xbe\xab\xb5\x56\x8d\x5a\x9b\xda\x88\x41\x17\x84\xff\x07\x2f\x5d\x26\x47\x1b\xd0\xdf\xfe\x49\xff\x1b\x6e\xeb\xbc\x13\xfe\x7d\x3f\x8d\xa5\xed\x4c\xd7\xd8\x82\xc1\xc6\xf8\x82\xba\x15\x1c\xe7\x74\x50\x6d\x34\x59\x18\x97\xee\x6f\xe0\x3f\x78\x4b\xc7\xc6\x75\x6c\x0e\x15\x02\xe7\x67\x07\x4e\x0d\xfb\x64\xfe\x8f\x98\xf6\xbb\x3d\xbb\xdd\x9b\x55\x43\xbb\x2e\x39\x0e\xbf\xd7\xab\x71\x9b\x88\x57\x3e\x83\xf3\x33\x2a\x24\x9d\x97\xde\xb0\x93\xd9\x68\xfe\x77\x40\xba\x44\xb9\xbf\x75\x49\xba\xd0\x4c\xa2\x0c\xb9\x19\xfb\x34\x83\xf8\x8b\x35\xa5\x21\x55\xf7\xa2\x80\xab\x42\x4f\x2a\xf5\x8c\x81\xbe\xa2\x5f\x1b\xb6\x18\xbf\xcb\xf4\x6f\x38\xab\xa1\x78\x7c\x9e\xa3\x6c\x3d\xec\x08\x12\x0f\x85\xbd\x45\xbf\x03\x00\x00\xff\xff\xfd\x65\xf9\xbc\x4c\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd5, 0x5b, 0xa8, 0xde, 0x19, 0xfe, 0xd0, 0x55, 0x84, 0x7b, 0x50, 0x9a, 0x36, 0xa, 0x27, 0x6f, 0x8b, 0x10, 0xb9, 0x39, 0x88, 0x92, 0xf4, 0xec, 0x9, 0x46, 0x4a, 0xdd, 0xc4, 0x48, 0x81, 0x34}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\xcd\x4e\xc3\x30\x0c\xbe\xe7\x29\xac\x1e\xa6\xee\xd2\xdd\x11\x20\x01\xa2\xc7\x69\x87\xc2\xdd\xcb\xb2\xd6\x5a\x16\x47\x89\xa3\x22\x4d\x7d\x77\xd4\x75\x5d\xbb\x01\xc2\x27\xcb\xfe\x7e\xec\x6f\xb5\x5a\x41\xd5\x50\x04\x09\xe8\x22\x6a\x21\x76\x40\x11\xda\x06\x05\xd0\x01\x6a\xcd\xc9\x09\xb4\x9c\xec\x0e\x42\x72\xaa\x67\x08\x43\x72\x96\xdc\x01\x48\x22\x68\xb6\xd6\x0c\xcc\x7d\xe0\x23\xf8\xb4\xb5\xa4\x21\x0a\x07\xac\x8d\x52\x74\xf4\x1c\x04\xd6\xec\xca\xe4\x6a\xda\x5a\x53\xf1\xc1\x5c\xc0\xd9\xfd\x38\x1b\xf1\xef\x5f\x78\xf4\xd6\xac\xcb\xea\x82\x9c\x06\x57\xcc\xba\xac\x4a\x0e\x2d\x86\x1d\xb9\x7a\x14\x9c\xcf\x32\xa5\xe6\x9f\x9d\x94\x02\x00\xf0\xc1\x78\x0c\x26\x8f\x54\x3b\x13\x1e\x00\x93\x34\xf9\x2b\x87\xc0\xed\x27\xda\x64\x96\xb0\x78\x19\x1e\x5f\x8e\x94\xbe\x68\x0f\xd6\x08\x68\xf4\xf0\x04\x03\xb7\xd0\xe8\x71\x4b\x96\x84\x4c\x2c\x6a\x23\x8f\x8b\xd3\x74\x67\x31\xb5\x6f\xd7\x90\x36\xe7\x78\xba\xe7\x7c\x86\xbb\xdf\x6e\x50\x9a\xde\x1a\x66\x45\xfb\xde\xb9\xd0\x8d\xd1\x87\xfc\x7e\xd9\x97\xe5\x3a\xcf\x3e\xdc\x39\xfe\xd8\xf4\x81\xfc\x6d\x3f\x64\x35\x99\x65\xcb\x1f\x72\xbf\x3d\x98\x46\xf5\x7f\x8f\xbf\x91\xeb\xd4\x6d\xd7\xa9\x4e\x7d\x07\x00\x00\xff\xff\xb8\x6a\x91\xc6\x7a\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0x82, 0x33, 0xc2, 0x28, 0xd7, 0x27, 0xd0, 0x1b, 0x2b, 0x9b, 0x99, 0x7, 0x5e, 0x77, 0x9b, 0x8d, 0x2a, 0xc2, 0x64, 0xd8, 0xbc, 0xc7, 0xf6, 0x87, 0x22, 0x64, 0xd2, 0x6, 0x78, 0x1d, 0xe4}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/test/upgrade_nft_contract.cdc":                      transactionsTestUpgrade_nft_contractCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"test": {nil, map[string]*bintree{
			"upgrade_nft_contract.cdc": {transactionsTestUpgrade_nft_contractCdc, map[string]*bintree{}},
		}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
