// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (542B)
// ../../../scripts/get_collection_ids.cdc (514B)
// ../../../scripts/get_collection_length.cdc (421B)
// ../../../scripts/get_contract_storage_path.cdc (510B)
// ../../../scripts/get_nft_metadata.cdc (5.663kB)
// ../../../scripts/get_nft_view.cdc (4.443kB)
// ../../../scripts/get_total_supply.cdc (98B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.365kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.575kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.577kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.111kB)
// ../../../transactions/destroy_nft.cdc (880B)
// ../../../transactions/mint_nft.cdc (3.1kB)
// ../../../transactions/setup_account.cdc (972B)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.407kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.451kB)
// ../../../transactions/transfer_nft.cdc (1.605kB)
// ../../../transactions/unlink_collection.cdc (545B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xc1\x6a\xe3\x30\x10\x86\xef\x7a\x8a\x1f\x1f\x16\x1b\x96\xf8\xb2\xec\x21\x6c\x36\xa4\xa1\x81\x5e\x42\x28\xee\xb9\xc8\xf2\x38\x19\x2a\x8f\x84\x2c\xd3\x96\x90\x77\x2f\x89\x63\x3b\x4d\x7d\xb2\x46\xf3\x89\xf9\xbf\xc9\x73\x14\x07\x6e\xd1\x9a\xc0\x3e\xa2\x74\x21\xb8\xf7\x16\x5a\xb0\xdd\x14\xa8\x83\x6b\xa0\x61\x9c\xb5\x64\x22\x3b\x51\x8a\x1b\xef\x42\xc4\xd6\xc9\xa6\x93\x3d\x97\x96\x0a\xf7\x46\xd2\xb7\x26\xf7\xe5\x64\xe8\x7f\xfc\xd0\x8d\xb7\x34\x3e\x9a\x4c\x85\x44\x29\xdf\x95\xa8\x3b\x41\xa3\x59\x52\x5d\x55\x81\xda\x76\x8e\x55\xff\xf3\x1b\x5c\xcd\xf1\xf2\x24\xf1\xef\x9f\x0c\x47\x05\x00\x96\x22\xb4\x31\xae\x93\x88\x05\xf6\x14\x57\xfd\x61\x80\x33\x35\xb6\x4d\xc3\x3f\x53\x8d\xc5\x80\x5d\xee\xcf\xdf\x6c\x4f\x71\xad\xbd\x2e\xd9\x72\xfc\x4c\xa7\xb9\x66\xeb\x91\xdc\x75\xa5\x65\xb3\xd3\xf1\x90\x4d\x5c\xef\xea\xdf\xaf\xe3\x7d\xe8\x1f\xe0\xe9\x7f\x3a\x71\xcb\x25\xbc\x16\x36\x69\xb2\x76\x9d\xad\x20\x6e\xd0\x0e\x33\x8e\xd1\x4b\xf2\x17\xfa\x26\x41\x72\xcd\x95\xe7\x78\xe8\x11\x8d\x40\x35\x05\x12\x43\x88\x0e\x1a\xad\x27\xc3\x35\x9b\xcb\xfe\x58\x10\x0f\x74\xbb\xbf\xc1\xca\x2b\x16\xdf\xcd\x5c\xe3\x6c\x37\x45\x7a\xd6\xcd\x55\xa6\x4e\xea\x2b\x00\x00\xff\xff\xc9\x72\xf5\x8c\x1e\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0xe2, 0xab, 0x39, 0xbd, 0x62, 0x2f, 0xe3, 0xf1, 0x63, 0xf4, 0xe7, 0x7, 0x2f, 0x1a, 0xe0, 0x3d, 0x24, 0xd6, 0x96, 0x48, 0xc2, 0xd5, 0x87, 0xc8, 0xe3, 0x8e, 0x45, 0xf4, 0x34, 0x55, 0xa1}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\x4d\x6b\xf2\x40\x10\xbe\xef\xaf\x78\xc8\xe1\x7d\x13\x28\x7a\x29\x3d\x48\xad\x88\x56\xf0\x22\xd2\xda\x53\xe9\x61\xb3\xd9\xe8\xd2\xcd\xec\xb2\x99\xa5\x2d\xe2\x7f\x2f\x31\x8d\xb1\xa1\x39\x4d\x66\x9f\xcf\x19\x8f\xc7\x78\x56\xc1\x78\x06\x3b\xec\x35\x63\xb3\xda\x61\xbd\xac\x61\x08\x92\x20\x95\x72\x91\xf8\x7f\x0d\xe5\xac\xd5\x8a\x8d\x23\x21\x4c\xe5\x5d\x60\x6c\x1c\xad\x22\xed\x4d\x6e\xf5\xce\xbd\x6b\x42\x19\x5c\x85\x64\xb8\x4e\x3a\xfc\xe3\xa7\xac\xbc\xd5\x8d\x43\x8b\xec\x17\x89\x10\x3e\xe6\x28\x23\xa1\x92\x86\x52\x59\x14\x41\xd7\xf5\x04\xf3\x76\xb8\xb9\xf2\xdf\xc6\xdc\x1a\xb5\x95\x7c\x98\xa0\x9f\xb3\x09\x5e\x5f\xd6\xc4\x77\xb7\x6f\x38\x0a\x00\xb0\x9a\xbb\xfc\x98\x36\xdd\xe6\xed\x4f\x27\x9e\x89\x0b\xac\x17\x7f\xd2\x25\xa6\x1d\xed\xfc\xde\x7c\xa3\xbd\xe6\x85\xf4\x32\x37\xd6\xf0\x57\xfa\x57\x96\xac\x07\xe7\x2e\x04\xf7\x71\xff\xef\x38\xbc\xc4\x68\x31\x20\x9e\x1e\xd2\x9e\x37\x9b\xc1\x4b\x32\x2a\x4d\x16\x2e\xda\x02\xe4\x18\xad\x14\xd4\xc5\xbb\xbd\x9c\x3f\xb3\xaf\x62\x43\x32\x6a\xaf\x95\x29\x8d\x2e\xe0\x25\x1f\x92\x9f\x7a\x41\x73\x0c\xf4\xbb\x61\x53\x67\xbd\xac\xd3\x4c\x9c\xc4\x77\x00\x00\x00\xff\xff\xcc\x8f\x33\x0e\x02\x02\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe9, 0xcd, 0x59, 0x9a, 0x68, 0xff, 0x26, 0xdf, 0x71, 0xd3, 0xc1, 0xb4, 0x19, 0x89, 0x5a, 0x98, 0x78, 0x24, 0x9c, 0x50, 0xd8, 0x72, 0xc2, 0xe7, 0x18, 0xba, 0x66, 0x69, 0xdd, 0x13, 0x1b, 0xf5}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6e\xc2\x30\x10\x45\xf7\x3e\xc5\x28\x8b\xca\xd9\x70\x00\x54\x8a\x50\x5a\x24\x36\x08\x55\x5c\xc0\x76\x26\xc1\xaa\x33\x63\x39\x63\xb5\x15\xe2\xee\x15\x24\x24\x2d\xf5\xca\x1e\xff\x67\xfd\x67\xdf\x45\x4e\x02\x7b\xa6\x6d\xa6\xd6\xdb\x80\x47\xfe\x40\x82\x26\x71\x07\xc5\xe3\xb8\x50\x63\xfe\xed\xcb\x74\x31\xe0\x7e\x7b\x1c\x93\xf3\xa0\x50\x2a\x66\x0b\x4d\x26\xe8\x8c\x27\x6d\xea\x3a\x61\xdf\x2f\x61\x33\x6c\xca\x25\xec\x48\xe0\xac\x00\x00\x02\x0a\x18\xe7\x38\x93\xc0\x0a\x5a\x94\xcd\x70\xb8\x53\xa5\x9a\x62\x8e\x43\x40\x27\x9e\xe9\x1d\x1b\x58\xdd\xb1\xdb\xfd\x75\x2d\x5a\x94\xca\x44\x63\x7d\xf0\xf2\xad\xe7\x42\x8b\x6a\x22\x0f\xd9\x06\xef\x0e\x46\x4e\xe5\xcc\x59\x4e\x89\x3f\x9f\x9f\xce\x8f\xb6\xff\xc0\xcb\x8b\x9e\xb9\xf5\x1a\xa2\x21\xef\x74\x51\x71\x0e\x35\x10\x0b\x0c\x4f\x81\x9b\x6a\x0c\xbf\x13\x6f\xf4\x2f\x83\x62\xf4\x4a\x28\x39\xd1\x5f\xb5\xab\xc7\xee\xb5\xd7\xe5\x22\x20\xb5\x72\x52\x17\xf5\x13\x00\x00\xff\xff\xbd\xc8\xa0\x6d\xa5\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0xcb, 0x1, 0xbd, 0xd, 0x9, 0x6e, 0x13, 0x12, 0x78, 0x65, 0x2a, 0x1d, 0x21, 0x81, 0xdd, 0xfb, 0x15, 0xae, 0xd1, 0x13, 0x39, 0x55, 0x97, 0x44, 0x60, 0x63, 0xbe, 0xd6, 0x71, 0x48, 0x1}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4d\x6b\xe3\x30\x14\xbc\xeb\x57\x4c\x7c\x58\x6c\x58\xfc\x03\x42\x9c\x10\xb2\xec\x6d\x97\xd2\x86\xde\x5f\xa4\x97\x54\x60\x4b\xe6\xe9\x39\xa1\x94\xfc\xf7\xa2\xd8\xcd\x07\x3d\xf4\x1d\x84\x34\x9a\x37\x33\x8c\xef\xfa\x28\x8a\x7f\xac\xe4\x48\xe9\xd5\xf3\x29\x61\x2f\xb1\x43\xf1\x80\x15\x66\x62\xe6\xd7\x33\xa7\xd8\x1e\x59\x26\xe2\x3d\x54\x18\xd3\x0f\x3b\xec\x87\x80\x8e\x7c\x28\xc9\x39\x99\x63\xed\x9c\x70\x4a\xbf\x11\xa8\xe3\x39\x5e\x54\x7c\x38\x54\xf9\x12\x85\x0e\xfc\x44\xfa\xb6\xc2\x87\x01\x80\x96\x15\x8a\x06\xdb\xf7\x9e\x17\x0f\x11\xea\xff\x7f\xb7\x9b\xd8\xb6\x6c\xd5\xc7\xf0\x87\x94\x96\x65\x75\xdd\xd9\x45\x91\x78\x62\xb7\x89\x41\x85\x6c\x96\x38\xb0\xae\xad\x8d\x43\xd0\x4b\x8c\xaa\xb6\xd3\x5f\xaa\x47\xf6\xe2\xd7\x7d\xf4\x65\x39\xa6\xcb\xe7\xa8\x9b\x67\xb5\x42\x4f\xc1\xdb\xb2\xf8\xda\x86\x8d\x43\xeb\x10\xa2\x62\xc7\x57\xdf\xa2\x32\xd7\x2c\x47\xcf\x27\x34\xdf\x22\xd5\x32\x3a\x65\xd3\x52\x47\x0b\xbf\x9f\xd8\x0d\x82\x6f\xa7\x0e\xf2\x08\xeb\x20\x21\x83\x17\xe8\x7c\x53\xb7\x0e\xcd\x65\x69\x06\x4a\x33\xfc\xd0\x91\xb9\x13\xb3\xae\x4e\xb7\xc6\xcd\xd9\x7c\x06\x00\x00\xff\xff\x73\xe8\x98\x91\xfe\x01\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0x56, 0x4, 0xaa, 0xcc, 0x73, 0x82, 0xc4, 0xac, 0x12, 0x70, 0xbf, 0xa5, 0x3c, 0x54, 0x63, 0xf8, 0xde, 0xd9, 0x9e, 0xc3, 0xbd, 0xe5, 0x76, 0x9b, 0x2f, 0x5a, 0x92, 0x9c, 0x19, 0x96, 0x36}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x26\x39\x14\x36\xd0\x2a\x3d\x14\x3d\x18\x55\x83\x6d\x92\x2d\x16\xc8\x1a\x8b\xc4\xdb\x4b\x90\x03\x2d\x8d\x1c\x22\x12\xa5\x92\x54\xb2\x46\x90\x7f\x2f\x48\x4a\x22\x29\x92\x76\x9a\x8b\xa5\x99\x37\x33\xa4\x38\x8f\xe4\xcb\xc5\xc5\x05\x6c\x9f\xa8\x00\x51\x70\xda\x49\xd8\xa3\x14\x40\xea\x1a\xe4\x13\xc2\x0b\xc5\xd7\x5f\x76\x44\x60\x09\x0d\x4a\x52\x12\x49\x80\x08\xd1\x16\x94\x48\x2c\xe1\x95\xca\x27\x8d\x13\x1d\x16\xb4\xa2\x58\xc2\xe6\xf3\x76\xa1\x52\x12\x56\x02\x47\xd9\x73\x26\x80\x4a\x20\x02\x08\x08\xca\xf6\x35\x82\x90\xbc\x2f\xe4\x62\x41\x9b\xae\xe5\x12\x6e\x7e\x90\xa6\xab\x71\xf3\x79\x0b\x15\x6f\x1b\x38\xb7\x86\xf3\x11\xf3\x75\x28\xfe\x0f\xc5\x57\x31\xc0\x3c\xdb\xf9\x62\xd1\xf5\xbb\x21\xb5\x1a\x04\xbc\x2d\x00\x00\x94\xb1\x46\x09\x8c\x34\xb8\x86\x7b\xc9\x29\xdb\x7b\x8e\x12\xcd\xbc\x69\xcb\xa2\x7e\xf9\xd4\x37\x3b\x46\x68\x1d\xf5\xb6\xaf\x0c\xf9\x1a\x3e\x95\x25\x47\x21\xfc\xc0\x43\x17\xaf\xc8\xdb\x03\xa9\x25\x45\xb1\x86\x07\x6f\x0e\xd9\x9d\xf6\x1c\x1e\x3d\x38\xfe\x90\xc8\x19\xa9\xbf\xdf\xdd\x46\xd3\x09\xe4\x94\xd4\x9b\xbe\xd9\xa9\x91\x7c\xff\xc2\xe4\xef\xbf\x79\x80\xa2\xad\x6b\x2c\xd4\x04\xbf\xf5\xbb\x9a\x16\xdf\x88\x7c\x5a\x83\x7d\x4e\x80\xef\x65\xcb\xc9\x1e\x0d\xda\x79\x49\xe5\xe6\xed\x0b\x2d\x91\x0f\xd9\x39\x7d\x21\xf2\x28\x5e\xd7\x8f\xce\x68\x0e\xba\xa5\xec\x19\xcb\x6d\xea\x7b\x86\x63\xf8\x70\xc0\x26\xd5\x15\x16\x72\x7d\xa2\x3f\x2c\xf2\xe6\xc4\x42\x39\x9f\xf6\xdf\x9e\x70\xfc\xd2\x90\xfd\xa9\xea\x7f\x11\xc6\x90\x7f\x04\x79\xaf\x38\x59\x8b\x35\xbc\x19\xd8\x08\x7f\xf7\x9b\xa9\xa4\x66\x26\x7e\xe3\xdd\x18\xb3\xdf\xbf\x9c\x50\x29\xe6\xc8\xad\xb6\x7a\xc0\x06\x4b\x4a\x02\xe0\x57\x6d\xbd\xf4\x90\x35\x2d\x90\x09\x9c\x43\x6f\x8d\xf9\x72\xa1\xc1\x94\x51\xb9\xd4\x4f\xea\xcf\xe5\xed\xcf\x93\x35\x42\x5a\xeb\x0c\x18\x6b\x5d\x3e\x5d\xad\x9d\x55\xd2\xed\x16\xeb\x38\xcd\x55\x8b\x8d\x10\xd5\x3a\x63\x2c\xb5\xde\x53\x14\x8d\x21\x53\xfc\x8c\x66\x4d\x91\x33\x3d\x84\x70\x0a\xa7\x69\x79\xac\xf4\xc7\xd0\x9b\xe8\x72\x1f\x65\x63\x0c\x16\xa1\x62\xf4\x13\x86\x3c\x8c\xc1\x22\x24\x8c\x66\x4b\x31\xd0\x69\x91\xa3\xf4\x73\x5a\xf8\x08\xf7\x2c\x6a\x20\x5e\x94\x77\x16\x35\x92\x2e\xc1\x39\x05\x59\x0d\x87\xa5\x69\xd4\xba\xca\x14\xeb\x20\xd7\xe4\xf3\x1d\x0e\xf1\x20\x77\x69\xe8\xc3\x26\x0a\x42\x6e\xe9\xe8\x43\x34\x15\x21\x37\x94\x9c\x45\x1f\x3a\x5d\xdd\x90\xd2\xf7\x4d\x84\x84\xdc\x92\xd3\x87\x38\x3c\x84\xdc\x65\xa5\x0f\x73\x19\x09\xb9\x47\x50\x1f\x18\x23\x27\xe4\x51\xce\xa6\x02\x1d\x7a\x7a\x91\xf3\x63\x35\x56\xd3\xa1\xae\x5f\xd5\x71\x1c\x1f\x70\x64\xb0\xc7\x03\x2c\x57\x23\xa1\xd6\x79\x6a\xc8\xa9\x34\x81\x3b\x95\x68\x63\xda\xd0\x37\xa4\xc0\xd7\x5e\x6b\x46\xed\xa9\xd0\x1b\xaf\x63\xa2\xf6\xe4\xca\xda\x2d\xc4\x5f\x59\x6b\x4f\x85\x3a\xdb\x8a\x17\xea\xd8\x93\x55\xcd\x56\xe3\x57\x34\xb6\x19\x17\xcc\xce\xa2\x78\xe0\x1c\xf1\x96\x69\x7a\x47\x51\x24\xb5\xc7\xfa\xe4\x34\xdb\x4b\x6e\x7e\x7c\xd7\xb0\xa7\xe4\xc3\xaf\x76\xbe\x2f\xde\xcd\x1d\xbc\xea\x19\x34\x84\xb2\x25\x31\xc7\xac\x3d\x6f\x81\x96\xe3\xd9\xb7\x5a\x3b\x97\x74\x75\x37\x20\x45\xd1\xf6\x4c\x42\xae\x04\xc8\x27\xf3\x32\x66\x58\x2d\x26\x98\x9d\x2f\xe4\x63\xcc\x34\xb6\x6c\x8f\xf2\x8a\x74\x64\x47\x6b\x2a\x0f\x4b\xab\x23\xb2\xab\x08\x59\x57\x36\x6e\xd7\x72\xde\xbe\xfe\xf1\xd3\x9b\x13\x62\x1f\xe7\xc1\xef\x7f\x2e\x6d\xec\xe5\x25\x74\x84\xd1\x62\x79\x7e\xd5\xf6\x75\x09\xac\x95\x60\xd2\x01\x01\x8e\x15\x72\x64\x05\x82\x6c\xb5\x4e\xb2\xc3\x3f\x77\x26\xc5\x2a\xe9\x2d\xe5\x30\x1e\x3b\x82\xa5\xfa\x70\xb4\x5c\x9d\x99\x98\x8b\x0b\xf8\x5b\x4b\x13\x84\x1d\x11\xb4\x80\x92\x8a\xae\x26\x07\xa0\xac\x6a\x79\x43\xf4\xe7\xa9\x5a\x0e\x52\xe9\x3a\xa5\xc8\xc6\x4a\x23\x30\x9f\x1d\x2d\x7b\x94\xd7\xc6\xb5\x64\x95\x8c\xd4\x31\x7b\x6d\xac\x02\xc2\x9e\xbe\x20\xf3\xca\x0c\x68\x95\x3b\x56\xea\x6e\xdc\xb8\xdd\x62\x33\xad\x13\x8b\x73\xf8\x38\x8f\x74\xf8\x9e\x9e\xa2\xb7\x96\xfe\x7c\x9d\xa5\xb0\x90\xd4\xf8\xfd\x3c\x44\x92\xf9\x68\x58\x25\x87\x33\x3d\x95\x62\x70\x8b\x59\x79\xf7\x14\x4a\x85\xde\x6b\xcc\xbc\xa4\x7f\xb5\x35\xc7\xa7\x39\x64\xcf\xb2\x81\x46\xde\x2c\xb7\xd3\x21\xab\x72\xaa\xb7\x65\x94\x66\xc9\x5b\x0d\xe4\xf0\x66\xc4\x85\xea\x83\x67\x54\xbd\x11\x2e\x43\x26\x4c\x7c\xf6\x8c\x07\xe1\x5c\x33\x82\x02\x0f\xcf\x78\x78\xf4\x37\x6e\x3f\x83\x06\x9c\x65\x3d\xaf\x87\xed\x66\x1a\xec\xb4\x8b\x05\x9f\xca\xdc\x98\xe6\x9f\x6a\xd8\xd8\x02\xb4\xb9\x3a\x69\xf4\x84\x1d\x77\xba\x00\x3c\x5c\xa0\x0c\x5a\xc3\xcd\x7f\x3b\x14\x0f\xe6\xf2\x65\x60\x9d\xbe\x56\x25\x44\xcc\x08\x71\x8c\x51\x45\x33\xe2\x26\x53\xd6\x73\xba\x5c\x05\x12\x47\xff\x44\x04\xce\xf0\x90\xd1\x12\x99\xa4\x15\x75\x41\x8e\xd8\x71\x08\xec\x13\x76\x95\xd0\x3b\xce\x8b\x5a\xa2\x94\xf0\x99\xf7\x77\xc6\xf4\xe3\x29\x25\x14\xb0\x32\xeb\x3e\xae\x8d\xc2\x60\xf1\x7f\xd4\x52\xa4\xb6\xe3\x3f\x26\xa0\x52\xa3\xb6\xc6\xe8\x32\x1c\xd3\x59\xa9\x94\x16\x73\x2a\x65\x44\x8e\xa5\x67\xf8\xe1\xb4\x46\xb7\x85\xdc\xf5\x3b\x3e\xa1\xe3\xc2\xb0\x28\x0b\x12\xf2\x2e\x8c\x4e\xf6\x62\x42\xf9\x45\xb6\x1c\xeb\xce\x2a\x5a\xe3\x9c\x64\x09\x6d\x18\x26\xda\x59\xf7\x89\x44\xd3\x3e\x1b\x98\x22\xf2\xd1\x3f\x5f\x32\x75\x28\xdf\x52\x21\x1f\x7e\x7d\x0c\x35\xa4\x8c\xab\x46\xf3\x13\xca\x44\xf7\x4a\xb7\x5a\xbc\x2f\xfe\x0b\x00\x00\xff\xff\xa0\xd8\x58\x6a\x1f\x16\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x9f, 0x4f, 0x3b, 0x55, 0x3a, 0xf4, 0xcf, 0xd4, 0x62, 0xfe, 0x5c, 0xd6, 0x6, 0x4a, 0x14, 0xde, 0x39, 0x8b, 0x0, 0xbb, 0xa3, 0x32, 0x51, 0xb0, 0x81, 0xba, 0xe5, 0x2a, 0x2f, 0x81, 0x95}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x8c\x7d\x58\xd8\x40\xa0\xd3\x62\x0f\xc2\x6a\x8b\x6e\x9a\x02\x05\xba\x46\x91\xa4\xbd\x14\x3d\xd0\xd2\xd8\x19\x84\x26\xb5\x14\x95\xc4\x08\xfc\xdf\x17\x92\x2c\x91\x94\x48\x49\xeb\x93\x39\xf3\xe6\x43\xe4\x1b\xf2\xd1\xa9\x90\x4a\xc3\xdd\x1b\x3b\x15\x1c\x77\x9f\x1f\xe1\xa0\xe4\x09\xd6\xc6\xb0\x8e\xae\x98\x7f\x50\xb3\x9c\x69\xf6\x83\xf0\xb5\xbc\xc2\x1c\xdb\x3a\x8a\x8a\x6a\x0f\xa5\x56\x55\xa6\x61\xf7\xf9\xb1\xb6\xc2\x7b\x04\x00\x50\x3b\x38\x6a\xa0\x3c\x81\xef\x5f\x84\xfe\xe3\x77\xc7\x5c\x55\x01\x87\x60\x27\x4c\xe0\x41\x2b\x12\x47\xc7\x91\x63\x99\x29\x2a\x34\x49\xe1\xf5\xeb\xa7\xea\xb4\x17\x8c\xb8\xd7\xab\xe4\x99\x71\x4d\x58\x26\xf0\xd3\xf9\x86\xf8\xbe\xf1\x9c\x7f\x39\x70\x7c\xd3\xa8\x04\xe3\xdf\xef\xbf\x7a\xd3\x65\x92\x73\xcc\xea\x5e\xbe\x55\x7b\x4e\xd9\x37\xa6\x9f\x12\x30\xff\x03\xe0\x07\x2d\x15\x3b\x62\x8b\xb6\x16\xa1\xdc\x4a\xbe\x50\x8e\xea\x9a\x5d\xd1\x0b\xd3\x93\xf8\xa6\xfe\xa2\x86\xbf\x92\x78\xc6\xfc\xf1\x5c\xf8\x37\x7b\xdc\xc3\xe2\x80\x5d\xe8\x00\x0d\xe4\xd3\xcc\x51\x1a\xe4\xdd\xe2\x73\x78\xf8\xb7\x62\x0a\xbf\x9c\xd8\x71\xae\xfa\xdf\x4c\x08\x54\x4b\x90\x0f\x32\x23\xc6\xcb\x04\xde\x5b\x58\x07\xbf\xb8\xc4\x53\x8c\x74\x99\xb8\xe3\x12\x3f\x36\xd6\xa8\x41\x92\x20\xbd\x69\xfe\x35\xab\x9e\xf8\x37\xbd\xcd\x1e\x07\x63\xb5\x67\xc1\x58\x3d\x83\x60\x9c\xa3\x29\x30\xae\xf9\x11\x30\x58\x0f\xff\x8d\x73\x8e\xfc\x3e\x64\x88\xf9\xde\xac\x21\xda\x87\x5b\x98\x6f\x72\xcc\xdf\xa9\xd2\xcb\xd0\x3b\xef\xf9\x4c\xf2\xdc\x07\xf3\x90\xdc\xbb\x85\x63\x86\xfb\x60\x1e\x7a\x7b\xb3\x85\xb8\x6d\x71\x69\x8a\xd8\x35\x60\x7b\xbd\xeb\xeb\x5f\x89\xfc\x10\x53\x0e\x29\x50\xee\x1a\x6b\x6e\x43\xda\x50\xdc\x75\xd4\xf4\x86\xb4\x61\xb9\xeb\xb0\x18\x0e\xa9\xcd\x77\x17\xd6\x73\x1d\x52\xc3\x7b\x17\xd2\x73\x1e\x52\xc3\x7f\x17\x62\x51\x1d\x52\x9b\xf8\x2e\xcc\x47\x7a\x48\xbd\xb3\x10\x0a\xb4\x68\xef\x44\x0e\x1f\x02\x5f\x4d\x6b\x24\xdc\xaa\x96\x63\xba\x61\x4f\xb3\xd3\x01\x66\x06\x3c\xa1\xc6\x39\xd7\x72\x28\xcd\xc8\x1d\x4a\xb4\x6b\x69\xe2\x1a\x42\xe0\x4f\x0e\x75\xbc\xf6\x50\xe8\x9d\x43\x04\xaf\x3d\x78\xb2\x66\x34\xdd\x93\x35\xf6\x50\xa8\x35\xae\x4e\xa8\x65\x0f\x56\x6d\x47\xd8\xad\xd8\xda\x06\x83\xd2\x8c\x6c\x3d\x25\x66\x76\x2f\xd1\xa5\x55\x6f\x87\x4a\xc0\x89\x91\xd8\xb0\x3c\x57\x58\x96\x09\x7c\x6c\xff\xdc\x58\x2f\xd5\x36\x19\xc8\xbb\xfa\xe1\x63\x59\x26\x2b\xa1\x21\x85\x23\xea\x8f\xed\xa2\xcb\xb2\x8d\x7a\x98\x69\x0e\xd2\x2e\xa6\xef\x2f\x3e\xa2\xbe\x65\x05\xdb\x13\x27\x7d\xde\x18\x15\x1a\xdf\x7a\x26\x6b\x6b\xe2\xf6\x52\x29\xf9\xfa\xe7\x6f\xef\x83\xa7\x0c\x4b\xc9\x5f\x50\x99\xe8\xcb\x5f\x1b\x13\xf6\xe1\x03\x14\x4c\x50\xb6\x59\xdf\xca\x8a\xe7\x20\xa4\x86\x36\x13\x30\x50\x78\x40\x85\x22\x43\xd0\x12\xf4\x13\x5a\x9d\xaf\xad\xef\x79\x21\x7c\xed\xca\x38\x7b\x7f\xed\xe9\x87\xe5\xdf\xd4\x5b\x48\xf9\x76\x65\xc2\xc5\x41\x37\xfb\x98\x0e\xee\xd5\x23\xea\xeb\x16\x5f\x83\x6e\xdc\x4a\x89\xb3\xf4\xee\x6f\xf0\x4e\x87\x14\xde\x5b\xd1\x72\x90\x0a\x9e\xf1\x0c\x24\xba\x46\xec\xe1\xa1\xb2\xe0\xec\xbc\x8a\xcb\x36\x51\xfc\x8c\xe7\xd2\xba\xe3\x47\x95\x7e\x3e\xe3\xf9\x57\x7d\x85\xcf\xa6\x6a\x90\xab\xb8\x52\xfc\xca\xbe\xb6\x7f\x85\xba\x52\xa2\xe3\x96\xab\x91\xba\xa4\x94\x0f\x75\x52\xe7\xa9\x57\x43\xb5\xd4\xf9\xf2\xae\x81\xda\x1c\x10\x4f\x23\xac\xe5\xf5\x4a\xaa\x51\x40\xef\x8b\x2b\x45\x9b\xad\x57\x6c\x75\x41\xbd\x69\x55\x9f\xf5\x7d\xb7\xb2\xa3\x1c\xd9\xd5\xc5\x59\xc6\x66\x03\xe7\x84\x98\xe7\x30\x98\x66\xab\xb8\x58\x2e\xd0\x42\x29\xca\xff\x23\xdc\x82\x7d\x58\xa8\x29\x45\x37\xfd\x1d\x66\xc0\x63\xca\x51\x68\x3a\x10\xaa\x65\xf2\x6f\x3a\xb1\x41\xce\x25\xf6\x68\xc5\xb9\x6f\x5e\x9c\x7c\xe7\x90\xd9\x33\x57\x2e\xad\x03\x9a\x73\x22\xde\x4b\xf5\x80\x26\x9d\x48\x63\x91\x33\xc4\x4d\x47\xb7\x4e\xdd\x14\x06\x17\x1f\x88\xe3\x70\xa4\x02\x12\x77\x22\xe3\xde\xe0\x66\x32\xf6\x37\xe7\xc8\x34\x96\xc3\x5d\xc1\x76\xbd\x6a\x01\xdb\xe8\x12\xfd\x17\x00\x00\xff\xff\xdd\x41\x95\x28\x5b\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0x51, 0xfe, 0xbb, 0xc, 0x3d, 0xb5, 0xe, 0xc, 0x7e, 0x46, 0x6e, 0xba, 0x3a, 0xbd, 0x93, 0xa9, 0x9a, 0x72, 0x8a, 0x3f, 0xfb, 0xa1, 0x4c, 0xb, 0x93, 0xed, 0x31, 0xb6, 0x1b, 0x1e, 0x4b}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x70\xad\x48\xcc\x2d\xc8\x49\xf5\x73\x0b\x51\x48\x2b\xca\xcf\x55\x50\x42\x08\x28\x71\x71\x15\x94\x26\x29\xa4\x95\xe6\x29\xe4\x26\x66\xe6\x69\x68\x5a\x29\x84\x7a\xe6\x95\x98\x99\x28\x54\x73\x29\x28\x28\x28\x14\xa5\x96\x94\x16\xe5\x21\x99\xa0\x57\x92\x5f\x92\x98\x13\x5c\x5a\x50\x90\x53\xc9\x55\xcb\x05\x08\x00\x00\xff\xff\xb3\x36\x44\x68\x62\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xf7, 0xfd, 0x89, 0x44, 0x74, 0x88, 0x5b, 0x29, 0xd8, 0x20, 0xeb, 0x11, 0xe0, 0x17, 0xe7, 0xfc, 0x31, 0xdb, 0x36, 0x7c, 0x7a, 0xc8, 0x3e, 0x28, 0xb2, 0x81, 0xb0, 0xec, 0x29, 0xfb, 0x26}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcb\x6e\xa3\x3c\x14\xde\xf3\x14\x5f\x59\x54\x64\x43\xf6\xa8\x17\xf5\x8f\xfe\xcc\x6a\xa2\x2a\xcd\x0b\x18\x73\x00\x2b\x8e\x8d\x8c\x29\x1d\x55\x79\xf7\x91\xb9\x1a\x26\xca\x68\xbc\x48\x22\xe7\x70\xce\x77\x3b\x6c\xb7\x5b\x9c\x4a\x51\xc3\x1a\xa6\x6a\xc6\xad\xd0\x0a\xa2\x46\x5b\x32\x0b\xa6\xc0\x38\xd7\x8d\xb2\x68\x75\x23\x33\x98\x46\x05\xee\x09\xab\xc1\x4b\xa6\x0a\x82\x2d\x09\x87\xfd\x69\xaf\x4d\xcb\x4c\x46\x06\x86\xb8\xa8\x04\x29\x1b\x04\xe2\x52\x69\x63\x71\xd0\x6a\xdf\xa8\x42\xa4\x92\x4e\xfa\x4c\x0a\xb9\xd1\x17\x84\xeb\xeb\x70\xac\xff\xff\x8b\x5d\x2a\x49\x87\xfd\x69\xa8\x9c\x2f\xa6\x9a\x79\xa4\x50\xc5\xd8\xd0\xbf\x0b\x83\xc0\x63\x14\x29\x6a\x8f\x23\xb0\xb7\x2c\x33\x54\xd7\x09\x86\x1f\x1b\x7c\x07\x01\x00\x38\x66\x47\xca\xc9\x90\xe2\xe4\x38\x4e\xe4\x06\x6e\x47\xaa\x75\x63\x38\x75\xd5\x92\x2c\xf2\x91\xf6\x91\xf2\x04\x8f\x0b\x04\xb1\x2f\xcb\xd4\x7f\xa7\xa5\xa4\x5e\xe5\x96\xd0\x0a\x29\x91\x51\x2d\x0a\xc5\x2c\x81\xd5\x63\x47\xc7\x6a\x56\x72\x1c\xe7\xb3\x98\x1b\x25\xd8\xb1\x8a\xa5\x42\x0a\xfb\xeb\xe9\xf1\x7b\xad\x6b\x3c\x57\xbe\x37\xa9\x14\xfc\xfa\xd2\xd3\xad\x0c\x55\xcc\x50\xe4\xa6\x93\x49\xf0\xd6\xd8\xf2\xad\xb7\xdb\x49\x82\xe1\x6c\xb7\xf8\x4f\x1b\xa3\x5b\x18\x5f\x9b\x95\xe9\x9e\x30\xee\xd4\x24\xf3\xd8\x57\x07\xcf\xe8\xe7\x4c\x25\xee\xc4\x69\xd7\xf9\xe9\x8e\x72\x2f\x91\x73\x37\x59\x3a\x1e\x7f\x58\x6d\x58\x41\xef\xcc\x96\x9b\x45\xc7\xd7\x57\x54\x4c\x09\x1e\x85\xbb\x2e\xb1\x4a\x5b\xa4\x7f\x81\x1f\x6e\x02\x9f\xed\x0f\xb2\x38\x12\x27\xf1\x49\xc6\x93\xb6\x4f\x99\x8b\x84\x59\x25\x69\x5c\x92\x25\xfb\xdb\x66\xe1\x19\x05\xd9\x41\xe6\x5b\xb1\x5c\xd2\x89\x0b\xb2\xff\xea\x6e\x34\xef\xcb\x1f\xff\xf6\x82\xf9\x6c\x7f\xb2\x33\xa1\x6e\x4c\xbf\xca\xeb\x7a\xf0\x99\xbf\xa8\xf1\xc9\xa4\xc8\x90\x52\xae\x0d\xe1\x22\x94\x75\x39\x1d\xb6\x64\x6a\x2a\x72\x3c\xdc\x51\x20\xe6\x25\xf1\x73\xe4\x47\xac\x4b\xe3\xe8\xda\x5d\x00\xce\xce\x0e\xc4\x43\x38\x0b\x75\x0d\xfa\xcf\xee\x8b\xbe\x88\x37\x96\x96\x01\xfe\xe8\x97\x67\xb5\x52\x37\x83\x1a\xf7\x2f\xb6\x09\xf8\xc2\xa3\xe4\x9e\xb5\x9b\x01\xc6\x35\xf8\x1d\x00\x00\xff\xff\x1c\x10\xd4\x05\x55\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x40, 0xb3, 0xf3, 0x54, 0x96, 0x3a, 0xa1, 0xac, 0x7b, 0x77, 0xaa, 0xee, 0xf4, 0xa5, 0x2, 0xb4, 0xf8, 0x81, 0x97, 0x38, 0x8c, 0xd5, 0x57, 0x7f, 0xf5, 0x79, 0x83, 0x20, 0xdc, 0x22, 0x65}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcd\x6e\xea\x3a\x10\xc7\xf7\x79\x8a\x81\x45\x6f\x90\xce\x49\xf6\x88\x22\x55\xe8\x72\x57\x07\x55\x14\xdd\xfd\xe0\x4c\x12\x8b\x60\x47\xb6\x43\x5a\x55\xbc\xfb\x91\xf3\xed\x84\x96\x56\xaa\x57\xd4\x9d\xb1\x67\xfe\xf3\x9b\x71\xc2\x30\x84\x43\xca\x35\x18\x85\x42\x23\x33\x5c\x0a\xe0\x1a\xca\x14\x0d\xa0\x00\x64\x4c\x16\xc2\x40\x29\x8b\x2c\x02\x55\x08\xcf\x7a\x18\x09\x9a\x0c\x70\xa3\x29\x8b\xa1\xc8\xed\x46\x2c\x55\x89\x2a\x82\xdd\xf6\xa0\xed\xdf\x08\x11\x69\x9e\x08\x34\x14\x55\x4e\x8a\x18\xcf\x39\x09\xf3\x8f\x06\x26\xb3\x8c\xaa\xcb\x3c\x8f\x9f\x73\xa9\x0c\xec\xa4\xd8\x16\x22\xe1\xc7\x8c\x0e\xf2\x44\x02\x62\x25\xcf\x30\x1f\x6f\xcf\x5b\xfb\x3f\x64\x30\x42\x83\xff\x73\x2a\x75\x63\xec\xec\x75\x96\xff\xbe\xe2\x39\xcf\x68\xb7\x3d\x34\x66\xfd\x46\x67\xb3\xdb\x1e\xb6\x75\x02\x5c\x24\xed\xd5\xc3\xbd\xb9\xe7\x0d\x24\xf2\xbb\x64\x9e\xa2\x48\x91\xd6\x4b\x68\x7e\x2c\xe0\xdd\xf3\x00\x00\x72\x45\x39\x2a\xf2\xad\x06\xa4\x96\xf0\x54\x98\xf4\xa9\x56\xd3\xda\x40\xb3\xc2\x10\x36\x29\x8a\x84\x7a\x7d\x00\x45\x04\x8a\x4c\xa1\x04\xf0\x18\x4c\x4a\x5d\x19\x30\x53\x84\xd1\x1b\xa4\xa8\x6d\x75\xfa\x08\x49\x75\x27\xf2\x18\xea\x3b\x83\xa3\x54\x4a\x96\xab\x07\x27\x91\x60\xe8\xb4\xf6\x6d\xaa\x4b\x37\xfd\xe0\xc5\x48\x85\x09\x3d\xa3\x49\x17\x30\x7b\x04\xc1\xb3\x36\xab\x76\x65\x64\xda\x8a\x93\xda\x53\x0c\x8f\x3f\x79\xe9\x6c\x72\x97\xa0\x72\xdf\xea\xb3\xe9\xe0\x81\x47\x48\xc8\x34\xaa\x4e\x6a\xb2\x70\x4e\xb1\x2b\x48\xc8\x6c\x30\xc7\x23\xcf\xb8\x79\x5b\x3d\xbc\x8f\xe9\x0a\xfa\xb3\x9f\x8b\x63\xc6\xd9\x75\xed\xf7\xb4\x4c\xfe\x5b\x05\xeb\x0a\x13\x86\xf0\x07\x4f\x04\xba\x50\x54\x95\x6e\xec\x03\xac\x0b\xc0\x36\xda\x05\x33\x1e\xc1\x91\x62\xa9\x08\xce\x5c\x18\xcb\x9f\xf5\xdb\x6d\x0f\xce\xc1\x3c\x86\xd9\x6d\x15\x02\x96\x12\x3b\xf9\x43\xaa\xda\x95\xa3\xe0\xcc\x9f\xef\x07\xad\x77\x27\x1e\x21\x4d\x1d\xd3\x6c\xee\xea\x77\x9d\xe4\xf9\x52\xd7\xa5\x07\xd7\x31\x18\xd2\x11\xb0\x0a\xf1\x2e\x0c\x7f\x98\xc8\xf2\x83\xe2\xba\xd7\xd7\xfd\xe0\xdd\x88\x26\x0c\xe1\x3f\x32\xb0\x27\x46\xfc\x42\x0a\xfa\x02\xd7\x7d\x6c\xc5\x1c\xa3\xd1\x36\x94\x37\x64\x4c\x4d\x63\xd8\x60\xfe\x1d\xc6\x46\x7c\x4d\xca\xf1\x15\xe0\x1c\xa7\xb5\x3f\x39\xe3\x0e\x8e\x8e\xfd\xc2\x51\xe9\xe7\xb9\xb4\x4c\xde\x56\xad\x67\xb2\x65\xf0\x1b\xdc\x8d\xaa\xbb\x51\x84\x86\x00\x2b\xd8\x86\x83\x04\x14\x69\x59\x28\x46\x4e\x19\x3b\xf0\x60\xf5\x7b\x34\x63\x58\x75\xd2\x8e\xca\xe1\x29\x7d\x4d\x97\x1f\x20\xe0\xca\xa8\xf1\x42\xc0\x8d\x7d\xe3\x06\xa3\xb9\xb3\x68\xc6\xa0\xb5\xf2\x57\xbf\xbb\x60\x7e\x81\x91\x9f\x8d\x3c\xe7\x8a\x42\x64\x5c\x9c\x80\x5e\xb9\xae\x74\x1f\x4c\xbc\x4e\x35\x4e\xcd\xab\x77\xa3\xf6\xfd\x13\xe0\x00\x79\x7f\x94\x39\x30\x57\x25\x5c\x3d\x4c\xa7\xca\x5d\x88\x7f\x7d\x46\x6d\xff\xf3\xbe\x9b\xf3\xa0\x07\x7b\xd2\x32\xbb\x90\xea\xfd\xdc\x09\xb5\x9e\xcc\xc0\x46\x85\x5a\xcf\xaf\xa7\xef\xf2\xc7\x5a\xfe\xf2\x09\xb8\xb1\x54\x15\x04\x3d\x73\x65\x4a\x4d\x83\xf5\xdf\x38\xcd\xd7\xd3\x91\xc6\x90\xd8\xa8\x6e\xbd\x42\xed\x2c\xbb\x8e\xfa\xff\x4e\x02\xae\x7e\x06\x55\x42\xe6\x13\xe6\x3a\xeb\x3a\xf1\xab\x77\xf5\xfe\x06\x00\x00\xff\xff\x56\x6e\xb3\x11\x0f\x0a\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0xe3, 0x58, 0xae, 0x9, 0x18, 0xba, 0x7c, 0x55, 0x15, 0x1e, 0x2a, 0x5d, 0x2e, 0x4d, 0x88, 0xa8, 0x45, 0xd7, 0x4b, 0x51, 0x17, 0x10, 0xbb, 0xc4, 0x79, 0xf5, 0xfe, 0x88, 0xe0, 0x45, 0xa5}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc9\x6e\xdb\x3c\x10\xbe\xeb\x29\xbe\x5f\x87\x3f\x32\xd0\xd8\x97\xa2\x07\x23\x0b\x82\xa4\x01\x72\x49\x03\x37\x7d\x00\x9a\x1a\x49\x6c\x65\x8e\x40\x8e\xe2\x04\x41\xde\xbd\xa0\x16\xda\xb2\x9d\xea\x44\x93\xb3\x7d\xcb\x78\xb1\x58\xe0\xb9\x32\x1e\xe2\x94\xf5\x4a\x8b\x61\x0b\xe3\x51\xb0\xeb\xaf\x0a\x72\xce\xd8\x12\xca\xe2\xf1\xfe\x19\x85\xe3\x4d\x12\x92\xd8\x12\x94\xd6\xdc\x5a\x81\x30\x94\x65\xa9\xc8\xa1\xf5\x21\x58\x2a\x82\x23\x6d\x1a\x43\x56\xce\x3c\x56\xa4\xc9\xbc\x90\x83\x23\xcf\xad\xd3\xd4\x95\xd8\x56\x46\x57\xa1\xd9\x86\x1d\xa1\x36\x1b\x23\x94\x43\x2a\x65\xa1\x70\xcb\x75\x4d\xdd\x38\x4f\xed\xba\x36\x1a\xab\x31\x35\x31\x9b\x86\x9d\xe0\x91\xed\x7d\x6b\x4b\xb3\xae\xe9\x99\xff\x90\xed\x66\x43\x7a\x78\x9d\x8e\xf1\xdf\x5f\xd5\xa6\xa9\x69\x44\x81\x74\x77\x91\x26\xc9\x1e\xfe\x2c\x8e\xbe\xc4\x4d\x9e\x3b\xf2\xfe\x0b\xb6\x46\xaa\xdc\xa9\xed\xc3\xdd\x12\xbf\x1e\xac\x7c\xfb\x3a\xc3\x7b\x92\x00\x40\xc0\xb2\xa2\x82\x1c\x59\x4d\x81\x8c\x00\x7f\x8c\x27\x77\xe6\xa1\x23\x98\x2e\xa1\x26\x89\xef\x2b\x2a\x96\xf8\x7f\x37\xca\x7c\x07\xfc\x54\x75\x2e\xba\xea\x91\x50\x61\xe4\xd4\xb0\x37\xd2\xdd\x07\x70\xc2\xb1\xc9\xf0\xd4\xf7\x78\x3f\x64\x66\x3e\x56\xf9\xe8\x3b\x35\x8e\x1a\xe5\x28\xf3\xa6\xb4\xe4\x96\xb8\x69\xa5\xba\xe9\x25\x0e\x58\x31\x7c\x8b\x05\xd6\xec\x1c\x6f\xa1\xe0\x0e\x61\xf7\xb9\x67\xbe\x9b\xe4\x00\x76\xf8\x3c\xd5\xc5\x7c\x0f\x3b\x2e\x87\x94\x18\x11\xbe\x79\xdf\xe0\xe2\x34\x2f\x57\x59\xd0\x6f\x89\x93\x8f\x3f\x85\x9d\x2a\xe9\x49\x49\x35\x9b\xd4\xbc\xbe\x46\xa3\xac\xd1\x59\x3a\x60\x42\xce\xe4\x61\x59\xe0\x25\x18\x50\x59\xf0\xfa\x37\x69\x81\xea\xc9\xf4\x0d\x69\x53\x18\xca\xd1\x28\xa9\xd2\x59\xb2\x4f\x41\x49\x32\xb5\xb9\x47\xd3\x1b\x75\xdc\x8a\xbe\x58\xcc\x09\x7a\xc4\x60\x5c\x86\x02\xc3\x20\x3b\xbf\x4d\x5b\x44\x96\x87\xc2\x47\x64\x9f\x5a\xb1\x29\xd3\x3b\x03\xe0\x72\x17\x3e\xe5\xba\x24\xb9\x55\x8d\x5a\x9b\xda\xc8\x5b\x76\x92\xd4\x7e\x05\x8f\x39\x8d\x3a\xfd\xc3\x5b\x57\xd9\x67\x3a\xdc\x72\x5b\xe7\x9d\x00\x9f\xfb\xe9\x14\xc4\xb4\x2f\x38\xb8\x96\x5e\x49\xb7\x42\xe3\x32\x0e\xdc\x8d\x16\x8b\x5b\xd1\xad\x7c\xf8\xc1\x5b\x7b\x6a\x27\x47\x89\x6c\x21\xb8\x38\x3f\xf2\x69\x3c\x67\xfb\x7f\x04\xbb\xf3\x54\xb9\xbb\x83\x95\x34\x76\x0a\xe6\x33\x91\xc6\x63\x26\x81\xc3\x25\x2e\xce\x6d\x21\x13\xb4\x0d\x7b\xd9\xdb\xc5\xff\x8e\xe6\x2c\x49\x1e\xee\x7c\x36\x9b\x6b\xb6\xa2\x8c\xf5\x7b\x03\xcf\x96\x48\x7f\x38\x53\x1a\xab\xea\x9e\x07\xf8\x2a\x8a\x50\xa9\x17\x8a\x13\x2b\xfb\x16\xfe\x95\xd3\xa1\xf7\x47\xf2\x37\x00\x00\xff\xff\xf5\xdb\x8a\x90\x29\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x28, 0x3c, 0x1, 0x82, 0xf1, 0x2d, 0x15, 0xf4, 0x59, 0x6c, 0x88, 0xad, 0xc8, 0x31, 0xc7, 0x51, 0xaf, 0xbd, 0xa7, 0x9a, 0xf5, 0x54, 0x1, 0x75, 0xa, 0x52, 0x28, 0xc8, 0xec, 0x76, 0xba}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfb\x29\x06\x1d\x8a\x0c\x46\xba\x87\x12\x08\xa1\xbe\xd5\x84\xd4\xed\x7d\xbc\x1a\x49\x8b\xd7\xbb\x62\x34\x6b\x37\x18\x7d\xf7\xa2\x3f\xd1\x3f\x1c\xd2\x43\x74\x12\xc3\xef\x31\xf3\xde\xcc\xa6\x69\x0a\x87\xd2\xd4\x20\x8c\xae\x46\x2d\xc6\x3b\x30\x35\x5c\x4b\x14\x40\x07\xa8\xb5\x0f\x4e\xe0\xea\x83\xcd\x80\x83\x53\xad\x42\x3c\x58\xe3\x4e\x80\xa0\xbd\xb5\xd4\xab\xc4\x83\x91\x1a\xaa\x70\xb4\x46\x43\x2d\x9e\xb1\xa0\x0e\xc7\x5c\x88\xa1\xc4\x8b\x71\x05\x68\xef\x72\x53\x04\xa6\xac\xc3\xf7\xbb\xc3\xce\xf3\x15\x39\x23\x56\xca\x9c\x2b\xcf\x02\x7b\xef\x76\xc1\x15\xe6\x68\xe9\xe0\x4f\xe4\x20\x67\x7f\x86\x68\x5d\x8e\xde\xf9\x9f\x24\x98\xa1\xe0\x1f\x43\xd7\x7a\x80\x17\xb5\x91\xfc\xf1\x17\xcf\x95\xa5\xfd\xee\x30\x60\x53\x61\x64\xa6\x91\xda\x79\x87\xd6\xf3\x5a\xa4\xd4\x3c\xae\x9b\x52\x00\x00\x15\x53\x85\x4c\x71\x6d\x0a\x47\xfc\x00\x4f\x41\xca\xa7\x3e\xbe\x0d\xdc\x3a\xa4\xfd\x4c\x0e\x3d\x91\x14\x24\xcf\x58\xe1\xd1\x58\x23\x6f\xf1\x34\x48\xf2\x3c\x86\xfa\xd2\x85\xf9\x82\x52\x6e\x12\x5d\x92\x3e\x7d\xff\x76\x9b\x81\xd3\xef\x5a\xd2\x3c\xc6\xf3\xa6\xed\x67\x7d\x11\x47\x13\x07\x68\x99\x30\x7b\x9b\x2f\x24\xf7\x0c\x53\xcb\x68\xb3\xd0\x33\x49\x60\x37\x96\x1a\xf5\x75\x96\xd6\x8b\x4d\x5e\x49\x93\xb9\x10\x7f\x64\xe3\xb7\x6b\xef\xaf\x5d\xcf\xfc\x7e\xfa\x5d\x7d\x68\x60\x98\x31\x74\xda\x4f\x87\xbb\x67\x34\x4d\x41\x33\xa1\x10\xe0\xfb\x9d\xeb\xd1\x6e\x97\x9e\x94\x34\x7b\x13\x6a\xd5\xba\x6d\x7c\xcf\xee\x7a\x80\x2d\xfc\xd7\x92\xb7\xcb\xc3\x4f\x5e\xa9\xf6\xf6\x42\x3c\x71\xcd\x63\xbc\x88\xe0\x13\xd3\xdb\x05\x2c\xc8\x05\xc9\xc3\x7d\xd1\xaf\xfe\x7d\xb7\xaa\x51\xd4\x67\xd6\xa8\x46\xfd\x0b\x00\x00\xff\xff\xb7\x06\xc9\x5e\x57\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x57, 0x2e, 0x60, 0x85, 0x4, 0x8d, 0x51, 0x88, 0xaa, 0x42, 0xdf, 0x1c, 0x8a, 0x67, 0x7c, 0x3c, 0x71, 0x30, 0x5a, 0x2f, 0xcf, 0x4e, 0xe3, 0xb1, 0xb7, 0x63, 0x85, 0x19, 0x85, 0xe2, 0x8a}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6f\x9b\x40\x10\x85\xef\xfc\x8a\x57\x0e\x2d\x1c\x8a\x2f\x55\x0f\x28\x6d\x14\xd5\x8d\xe4\x4b\x54\xa5\xee\x0f\x58\x76\x07\xef\xb6\xeb\x1d\xb4\x3b\x94\x54\x51\xfe\x7b\x85\xc1\xc6\xb1\xac\xec\x05\x34\xcc\xce\xfb\xe6\xf1\x56\xab\x15\xb6\xd6\x25\x48\x54\x21\x29\x2d\x8e\x03\x06\x27\xd6\x44\x35\x24\xa8\x80\x87\xfb\x2d\xda\xc8\x7b\x88\x25\x24\xb7\x0b\x14\x13\x34\x7b\x4f\x53\xb3\x0a\x06\x86\x92\x44\xfe\x97\xe0\x24\xcb\xdc\xbe\xe3\x28\x78\xe0\x70\xdf\x87\x9d\x6b\x3c\x6d\xf9\x0f\x85\x69\x48\x7e\x59\xce\x8f\xfd\xdf\x9f\xd4\xbe\xf3\x74\x92\xcb\x97\x42\x9e\x65\x67\x78\x85\x33\x35\x7e\x6d\x82\x7c\xfe\x54\xe2\x39\xcb\x00\x60\x5c\xe3\x91\x5a\x8a\x14\x34\x41\xac\x12\x0c\xce\x7b\x34\x84\x3e\x91\x41\xcb\xf1\xc0\xcf\x43\xa0\xf8\xe1\x9c\xff\x70\xdd\x93\x9c\x95\x1e\xa9\xad\xf1\x7e\x91\xaf\xbe\x2d\xdd\x87\xf6\x2e\x52\xa7\x22\x15\x93\x1b\x35\xee\x7a\xb1\x77\x5a\x73\x1f\xe4\x44\x34\x51\xa1\xe1\x18\x79\x80\x42\x5c\xe8\xf8\x2d\x94\xf1\x24\xf2\x6d\xf5\x8a\x07\x5f\x66\xeb\xab\x69\xe0\xcd\x75\xbc\xaf\xc5\x68\x5d\x8d\xab\x1f\x7f\x0a\x47\xb5\xa3\x1f\x4a\x6c\x79\x92\x1a\xcf\xed\x2d\x3a\x15\x9c\x2e\xf2\x79\x09\x18\xa6\x84\xc0\x82\x24\x1c\x69\x4c\x01\x37\xbf\x49\x0b\x94\x4c\x31\xe8\x48\xbb\xd6\x91\x41\xa7\xc4\xe6\xe5\xb4\xf2\xcb\xf4\xa0\x27\xd2\xbd\xd0\x85\x11\xc7\x4c\x1d\xee\xbf\xca\xd4\x1b\x46\x8c\xff\x25\xb4\x82\x9b\x8f\x57\x3c\xa9\x8e\x23\x8b\xe3\xcb\x66\x5d\xc3\x99\x72\xd1\x9d\x73\x39\xce\x38\x27\xec\x38\x09\x9e\x4f\x5d\xef\xae\xcc\xde\x91\x6c\xd6\xa9\x28\x2b\xcd\x41\x94\x0b\xa9\x70\xa6\xac\x91\x6f\x67\xfa\x51\xf2\xc2\x8a\xcd\x1a\xc9\x72\xef\x0d\xac\xfa\x4b\x68\x88\x02\x0c\x79\x12\x32\xf9\xac\xfe\x92\xfd\x0f\x00\x00\xff\xff\x64\x5f\xc7\xe4\x70\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x49, 0xc9, 0xd, 0x93, 0x4, 0xd6, 0x22, 0xe4, 0xa2, 0xdd, 0x4f, 0x11, 0xbd, 0xd4, 0xaf, 0xd8, 0x18, 0xe1, 0x62, 0xe0, 0x6c, 0x53, 0x76, 0xf6, 0x12, 0x3d, 0x4e, 0xbc, 0x96, 0x2d, 0x5b, 0x1e}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5d\x4f\xe3\x3a\x13\xbe\xcf\xaf\x98\xed\x05\x9b\x6a\x51\xfb\x22\xad\xf6\x22\xda\xb2\xe2\xe3\x45\xe2\x02\x84\xa0\x7b\x6e\x10\x17\x8e\x33\x4d\x7c\x70\xed\x1c\x7b\x52\xa8\x10\xff\xfd\xc8\xb1\xf3\xe1\x92\x45\xc7\x17\x90\xda\xcf\x8c\x3d\xcf\x3c\x33\xf6\x72\xb9\x84\x75\x25\x2c\x58\x6e\x44\x4d\xd0\x58\xb4\x40\x15\xc2\xed\xd5\xfa\x46\x28\x42\x03\x06\xad\x6e\x0c\x47\x20\x0d\x5b\xa1\x08\x18\x28\x7c\x71\x80\xc4\x59\x5f\x13\x6c\x1b\x4b\x90\x23\x98\x46\xc1\x8b\xa0\xaa\x75\xc0\x38\xd7\x8d\x22\xa0\x8a\x11\x54\xcc\x7b\xdd\xc6\x2e\x5b\x07\x96\xb4\xc1\x02\x84\x82\xa5\xfb\x64\x25\x2e\xfb\xcd\x93\x44\x6c\x6b\x6d\x08\x6e\xb5\xba\x6a\x54\x29\x72\x89\x6b\xfd\x8c\x0a\x36\x46\x6f\x61\x76\x38\x3d\xeb\xf0\xff\x7f\x65\xdb\x5a\xe2\xed\xd5\x3a\x20\x87\x89\x1e\x73\x83\xc4\x0a\x46\xec\x2f\x81\x2f\x36\xc0\xa2\xb9\x1e\x39\xb5\xf5\xc1\xbe\x09\x19\xa6\x2c\xe3\x24\xb4\x4a\x13\x00\x00\x83\x5c\xd4\x02\x15\x65\x70\x56\x14\x06\xad\x3d\x6e\xe7\x15\xdb\x62\x06\x0f\x64\x84\x2a\xfd\x4c\x81\x9e\x7d\xa1\x55\xbc\x40\x55\xb3\xcd\x15\x13\x32\x9e\xe6\x0d\xd9\x0c\x1e\x7f\x5f\x89\xd7\x1f\xdf\x9f\xfc\x9c\xd1\x7b\x26\x69\x7f\x39\xb8\x72\x10\x6f\x15\x43\xce\x51\xe1\x46\x70\xc1\x8c\x40\x87\x09\x87\x7b\x4a\xe6\xf0\x96\xb4\x40\x97\x15\xa9\x39\x93\xb0\x63\x46\xb0\x5c\x22\x6c\xb4\x69\x13\x25\x54\x19\x27\x72\x83\x06\x15\xc7\xd6\x4e\x22\x85\x85\x0c\x8e\x06\xc2\x17\xa3\x74\x76\xee\xef\x3b\x43\xa7\x2a\xe7\xd0\x20\x47\xb1\x43\xf3\xd5\x02\xd7\x52\x62\x4b\x64\xef\xb5\xe7\xf2\xa2\x5f\xbb\xc7\x4d\x06\x47\x6f\x87\x0a\x58\x0c\x88\xbb\x26\x97\x82\xbf\x0f\x9b\xde\x19\xdc\x09\xdd\x58\xa7\x5d\xb8\xbe\x84\x1c\x37\xda\x60\xbb\xfd\x28\x7b\x80\xaf\xc8\x1b\x42\x1b\xc5\x24\x54\x79\x7d\x79\xde\x1a\x64\xf0\xfb\x5a\xd1\x8f\xef\xde\x71\x6d\xb0\x66\x06\x53\x2b\x4a\xe5\x02\x3f\x6b\xa8\x3a\xf3\xda\x77\x84\x42\x18\x16\xe5\x66\x71\xe0\x08\x56\x23\x9d\x2e\x48\x13\x93\x0f\x4d\x5d\xcb\x7d\xd2\x9b\x2d\x97\x90\x6b\x63\xf4\x0b\xb0\x81\xec\x8e\xb3\x89\x1a\x15\x0a\x42\x11\x7d\xdc\x19\x0d\xac\xc0\x1f\x73\xe1\x9d\xfe\x9c\xcc\xd2\x69\xea\x14\x9e\x8d\xcf\xe6\x17\x1e\xbc\xe7\x3b\x46\xd5\xbc\x77\xef\xc6\xaf\x5f\x50\x33\x25\x78\x3a\x0b\x91\x43\xa1\xd1\x82\xd2\xe4\xab\x1b\x98\x02\x9d\xff\x8d\x9c\x80\x51\x7b\x74\x5b\x23\x17\x1b\x81\x05\xd4\x8c\xaa\xd9\x3c\x8a\xf8\xdc\x47\x1c\x64\xe1\x13\xff\xd5\x42\xdd\xe6\xb3\x4d\xde\x20\x91\x03\x09\xf6\x01\x4f\x2b\x06\x56\x50\x22\x85\x43\xa6\x3d\x26\x8e\x66\x51\x22\x5d\xb0\x9a\xe5\x42\x0a\xda\xa7\x23\x1a\x0e\xb5\xf5\x91\x89\x9e\xd8\xff\x20\xcc\xd3\xf4\x4f\x2c\x5e\xe8\x46\x16\x2d\x7d\xa5\x17\x7f\x5b\x1a\x93\x02\x80\xc1\xed\xcc\xbb\x7b\xef\x75\x39\x92\x9f\x6b\x19\x0b\x89\xaa\xa4\x0a\x56\xab\xa9\x6e\xd1\xad\x1e\x1d\xfd\x01\x1c\xf5\x8d\xb0\x9c\xc1\xec\xcc\x18\xb6\x87\x80\xb6\x55\x7b\xf2\x1c\x01\xff\x69\x98\x6c\xdb\x46\x30\x07\x83\x92\x11\x16\x50\x20\x31\x21\xed\x6c\x7c\xd8\x50\x72\x5d\x03\x0a\x3a\xb8\x30\xc8\xc8\xd7\x67\xe7\x24\x18\xf7\xa8\x1d\x33\xe0\x15\xb7\x82\xff\x45\xb3\xde\xc2\xb7\xb8\xa8\xab\x2f\xee\xbd\xaf\x27\x58\xc1\xe3\x53\x6f\xf3\x52\x09\x89\x9f\xc5\x0a\xa7\x61\xa7\xb7\x28\x6b\xae\x41\xe4\x3d\x7c\x0f\xd3\x7c\x3d\xb6\xa6\x4f\x9f\x59\x0e\x92\x8b\x55\x3a\x82\x7c\xa6\xd3\x9f\x47\x6f\xb1\xde\xee\x83\x6c\xde\x4f\xd3\x38\xfe\x12\x29\x50\xd0\x41\x06\x35\xa7\xf3\x51\x29\x86\x34\xdc\xb0\x67\x04\xdb\x98\x38\x13\x7c\x38\xae\xb0\xb0\x63\x52\x14\x5d\x43\x0d\x6d\xae\x93\x68\xe4\x4f\x6c\xe0\xcb\x64\xd0\x0b\x5e\x21\x7f\x4e\xe7\xf0\xd6\x55\xc1\xf9\x88\xd5\x78\x37\x57\x19\xed\x8e\x5f\x66\xf3\x4e\x42\xdd\xe8\xf3\xbe\x60\x75\x8d\xaa\x48\xa3\x55\x37\x26\xd5\xf0\x11\x06\xfe\x0e\x6f\x09\xca\xa6\x13\x75\x3c\x69\xc4\x1b\xca\xda\x1a\x0a\x49\x9f\x46\x45\x97\xfe\x44\x3d\x4e\x29\xc6\x8d\x58\x03\xf1\xaf\xae\x12\xfc\xff\x6f\x70\xd2\xaf\xbe\x27\x49\x54\x5a\xae\xa1\xf7\x2d\x84\x29\x57\x95\xb5\xb6\x82\x40\xd0\xe8\x46\xee\x5b\xef\xc1\x95\x0c\xf1\xb5\xd2\xfe\xbb\xbd\x5a\xc7\x1c\x8e\xde\x3f\x9f\x74\xe4\x98\x1c\xff\x36\x72\x7f\xe3\xf9\x88\xac\xd1\x8f\x18\x35\x7a\x2e\xf5\x9f\xc7\xd3\xe2\xc8\x86\xcf\x24\xe6\xb2\x6b\x9f\xda\xd2\xe1\xf5\x3d\x1d\x81\xab\xa7\xeb\x4b\x9b\xce\x17\x5c\x2b\x62\x42\xd9\x74\xea\xb2\x9f\x67\x30\x5b\x57\x08\x0a\x5f\xa9\x7b\x80\x84\x76\x59\xb1\x1d\x42\x8e\xa8\xfc\xeb\xa9\x08\x09\x91\x4e\x79\x58\xcc\xfa\x43\x4c\x3f\x16\x5c\x8b\x9e\x7c\x5d\x7c\x83\x93\xb0\x67\x8b\x06\xeb\xe1\x1f\x36\x15\x8a\x1b\x64\x16\x0b\xc8\xf7\x70\xd2\xf5\xe5\xf7\xe4\xdf\x00\x00\x00\xff\xff\xb3\x66\xcd\x4c\x1c\x0c\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbb, 0xef, 0x47, 0xa, 0xcd, 0x82, 0xc6, 0x23, 0xe3, 0x2, 0x5e, 0x7a, 0x63, 0x9, 0x4e, 0x27, 0xbe, 0xde, 0xe2, 0xa7, 0xdb, 0x24, 0xda, 0x2c, 0xae, 0x1f, 0x14, 0xdb, 0xd, 0x6a, 0xcd, 0x71}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xda\x40\x10\xc5\xef\xfb\x29\x5e\x39\x44\x46\x22\xf8\x1e\xd1\x48\x51\x14\x6e\x45\x51\x8a\x7a\x1f\xcc\x18\xaf\xb2\xec\x5a\xb3\x63\x5c\x84\xf8\xee\x95\x0d\xf1\x1f\x8a\xd4\xee\xc9\x1a\xff\x66\xdf\x7b\xb3\x93\xa6\x29\xd6\x85\x8d\x50\x21\x1f\x29\x53\x1b\x3c\x6c\x44\x5d\x90\x82\x3c\x28\xcb\x42\xe5\x15\x75\xa8\xdc\x16\x52\x79\xd3\x74\x68\x40\x64\x85\xd5\xc8\x2e\x47\x55\x36\x05\xe1\x8c\xed\x81\xb1\x5a\xae\xa3\x31\x76\x5f\x06\x51\xac\x82\x5f\x56\x7e\x67\x37\x8e\xd7\xe1\x93\x3d\x72\x09\x7b\x4c\x6e\xcb\x93\x2f\xfe\xed\x37\xed\x4b\xc7\xab\xe5\xfa\x4a\xf6\x85\x8e\xf9\xc1\x4a\x5b\x52\xfa\x65\xb9\x8e\x57\x6c\x54\x9b\x18\x33\x4c\x73\x32\x06\x00\x4a\xe1\x92\x84\x93\x68\x77\x9e\xe5\x09\x2f\x95\x16\x2f\x97\x74\x53\x9c\x5a\xa4\x39\x69\x8a\x0f\xd6\x4a\x3c\x98\xc4\x1d\x61\x73\x68\xc1\xdd\x1c\xc8\x09\xd3\xf6\x88\x82\x22\x08\x59\x70\x8e\x5b\x95\xae\xdf\xe6\xb8\x28\xcc\x37\x41\x24\xd4\x8b\x87\x3e\xc2\xfc\xb5\xe3\x9f\x93\xc6\xf8\x13\xee\xfe\xfc\xa9\x41\x68\xc7\xef\xa4\xc5\x14\xdf\xbe\xc3\x5b\x37\x70\xd8\x1c\x69\x2d\x76\xa5\xb3\x19\xfa\x7f\x15\x26\x65\x10\x3c\xd7\xe0\x7d\xa9\xc7\x7b\x46\x1d\xeb\xa0\x8c\xc5\xe3\xd0\x4b\xd6\x5e\xf1\xd6\xf4\xf6\xb6\x92\xe9\x48\x26\xd2\x81\x61\xb5\x79\xfb\xc1\x84\x3a\xe2\x3a\x85\x86\x4a\x16\x8f\xbd\xd2\x0c\x1a\xfe\x23\xf7\x48\x2a\xfb\x4a\x54\x56\x1b\x67\x33\x64\x54\xd2\xc6\x3a\xab\x47\xe4\x41\x5a\xf9\x3b\x09\xaf\x0e\x9c\xf5\x9f\x8b\x87\xd3\xed\xce\x0d\x74\xdf\xdb\x5b\x67\x43\x53\xfd\xe7\xdf\xd8\x68\xd9\xe6\x1f\x1c\x83\x3b\xb0\xf4\xdc\xf9\x39\x19\x3d\xd6\xdd\xac\x97\xcb\x9a\xa8\xb3\x11\xac\x24\x3b\xd6\x7f\x0f\xa8\x6b\x9a\x9a\xcb\x06\x9c\xcd\x9f\x00\x00\x00\xff\xff\xd7\x1d\xe6\xeb\xcc\x03\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x3e, 0x4f, 0x7d, 0x5c, 0x82, 0x45, 0x6, 0x3c, 0x3, 0x47, 0x94, 0x43, 0x35, 0x60, 0x13, 0x4, 0xc7, 0x69, 0xff, 0x4e, 0x88, 0x30, 0xaf, 0x86, 0xbd, 0x48, 0x84, 0xad, 0x3a, 0x2, 0xd0}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x2f\x3e\x14\x09\x1c\xf9\x52\x7a\x30\x4e\x42\x70\x63\xe8\xa1\x26\x14\xb7\xf7\xb1\x34\xb6\x97\xc8\xbb\x62\x77\x64\x35\x84\x7c\xf7\x22\xad\x2c\x79\xe5\x42\x4a\x75\x5a\xc6\xbf\xf9\xf3\xc6\x6f\x66\xb3\x19\x36\x07\xe5\x20\x96\xb4\xa3\x4c\x94\xd1\x50\x0e\xf5\x81\x04\xa4\x41\x59\x66\x2a\x2d\xa8\x4d\x55\xe4\xb0\x95\x8e\x9a\x0c\x31\x70\x2c\x50\xe2\xb8\xd8\xa1\x2a\x9b\x80\xe5\x8c\xd5\x89\xb1\x5e\x6d\x5c\xea\x6b\xee\x2a\xdd\x16\x6c\x73\x2a\xc7\x0e\x27\xc5\xb5\x6b\xe8\x17\x6d\x6a\xd4\x07\xb6\x7c\x2e\xd6\x54\x39\x30\x32\x53\x14\x3c\x64\x29\x0d\x27\xc6\xd2\x9e\x41\x3a\x6f\xd8\xcc\x32\x09\xb7\x2c\x1f\x4b\x79\xbd\xc8\x48\xa3\x48\x1d\x4b\x63\x05\x6b\xa3\x57\x95\xde\xab\x6d\xc1\x1b\xf3\xc2\x1a\x3b\x6b\x8e\x98\x8c\xc3\x93\x33\xff\x9d\x85\x72\x12\xfa\xd5\xce\xe7\xe1\x20\xd6\x93\x4f\xbf\xe9\x58\x16\xbc\x5e\x6d\x3a\x6c\x08\x4c\xa2\xe8\x62\x8b\x31\xe5\xb9\x65\xe7\xe6\x78\xf4\x8f\x29\xca\x6a\x5b\xa8\xec\x99\xe4\x30\xc7\x73\xff\x9e\x42\xe5\x73\xfc\xfc\xa6\xe5\xcb\xe7\x04\x6f\x51\x04\x00\xa5\xe5\x92\x2c\xc7\x4e\xed\x35\xdb\x39\x1e\x2b\x39\x3c\xfa\xff\xa2\x61\xd0\x7d\x05\xcb\x85\x7e\xdc\x61\xcf\xd2\x61\xe7\xfe\x49\x0f\x37\x5f\xba\x67\x59\x52\x49\x5b\x55\x28\x79\x8d\x87\x89\x46\xd8\xd6\x58\x6b\xea\xc5\xa7\xb7\xf1\xca\xd2\x65\xdf\xce\x4b\x98\x86\xcb\x4b\x7f\xb0\x33\xc5\x89\xed\xc0\xbd\xdf\xc7\x61\xf5\x87\x07\x94\xa4\x55\x16\x4f\x96\xad\xad\xb4\x11\xf8\x86\x20\x58\xde\xb1\x65\x9d\xb5\xc6\x08\x1d\x31\x49\xa2\x40\xb9\xed\x5a\xe1\xee\xd2\x04\xbe\x52\x33\xcc\x79\x94\xb8\x59\xb0\xca\x93\x9b\x20\x5b\xef\x64\x98\xb1\xc1\x71\xd7\x57\x4c\xbb\x47\x13\x8e\x37\xaf\x25\x2f\x42\x91\xeb\xd5\x66\xc8\xfd\x4a\x42\xf7\x71\x92\xdc\x80\xdc\x0d\x3e\x00\x07\x05\xb3\x19\x96\xde\xcb\x04\xcd\xf5\x95\x9b\x5d\x30\x6d\xfb\xeb\x50\x0a\x8b\xdb\x6b\x01\xa9\xbf\x8d\xa7\x10\x8d\x93\xa0\xa7\xa3\x13\x43\xc9\x79\xbb\xdd\x81\xf7\x84\x37\x5c\xda\x50\xf1\xe2\x76\xd4\x75\x0a\x31\xf3\xbf\xf4\xed\x4e\xd4\xfb\xe8\xb2\x59\x76\x16\xe8\x8d\x86\xac\xb7\x1e\x76\xc6\x8e\x0f\x7e\x34\x43\xa1\xf4\xcb\xbf\x39\x70\xb8\xc1\x74\x78\xfe\x97\x51\x03\x9f\x5e\x0b\x1d\xee\x65\x1a\x90\x42\x76\xcf\xf2\xc1\x6a\xfa\x0c\x7f\x0d\xef\xd1\x7b\xf4\x27\x00\x00\xff\xff\x9c\xdf\x9a\xfd\x7f\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0x7b, 0x97, 0x7d, 0x5, 0xad, 0xa7, 0x5a, 0xb9, 0x92, 0xbb, 0xa4, 0x1a, 0x55, 0x80, 0xc2, 0x31, 0x3b, 0x6c, 0xa1, 0xb7, 0xbe, 0xe3, 0xe7, 0x16, 0x17, 0x8a, 0x5f, 0x37, 0xff, 0x80, 0xda}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x5f\x6b\xe3\x3e\x10\x7c\xf7\xa7\xd8\xe6\xa1\x4d\x20\x24\xef\xa5\x2d\xb4\xfd\x51\xf8\xc1\x95\x2b\x6d\xaf\xf7\x9a\x8d\xbc\xb6\x97\x28\x92\x91\xd6\x49\x4d\xc8\x77\x3f\x24\xff\x89\x75\x5c\xde\x62\x8d\x66\x67\x67\x46\xeb\xf5\x1a\x3e\x2b\xf6\x20\x0e\x8d\x47\x25\x6c\x0d\xb0\x07\x04\xa1\x7d\xad\x51\x08\x0a\xeb\xc2\xdf\xcb\x79\x16\x2e\x89\x05\xe5\x28\x9c\x23\x18\x3a\x82\x66\xb3\x03\x36\x20\x15\xb1\x03\x54\xca\x36\x46\x02\x6a\x4b\xd0\x78\xca\x23\x8d\x23\x45\x7c\x60\x53\x82\xb3\x2d\x6a\x61\xf2\xd9\x3f\x15\x28\x34\xc9\x45\x34\x2d\x14\x8d\x29\x79\xab\x09\xc4\xee\xc8\x2c\xe1\x58\xb1\xaa\x82\x56\x5f\x93\xe2\x82\x29\x87\x6d\x1b\xe6\xc3\xe6\x80\x8d\x96\x37\x94\x6a\x03\xe8\xca\x66\x4f\x46\xc2\x9c\x38\xeb\xff\x22\x62\x06\x85\x47\x34\xe2\x83\xce\x4e\x1b\x5d\x94\x85\x6d\x5e\x7e\xfc\xfc\xbd\x0c\xf8\xf6\x46\xeb\x20\x07\x36\x6b\x2f\xd6\x61\x49\xeb\x42\xdb\xe3\x67\x90\xf2\x15\xa6\x6d\x26\xe4\x6d\x64\x9d\x92\xb2\x04\xb6\x5f\x1f\xff\x3d\x2f\x7b\x80\x6d\x74\x1e\x09\x5f\x18\x25\xd2\xac\x22\xcf\x47\xc7\x1e\xc4\x47\x46\x34\x39\x78\x0b\xd6\xac\x7a\xa7\x08\x6a\x94\xea\x62\x4d\x58\xa6\x6e\xb6\x9a\x55\x9f\x81\xef\x13\x89\x30\xa9\x50\xfa\x58\xa0\x68\xa4\x71\xb4\x0c\x08\xfa\xae\x49\x09\xe5\x13\x8d\xe3\xb4\x92\x0c\x39\x56\xa9\xcd\x2a\xea\xdd\xc6\x36\x1c\xd1\xe5\xdd\xd5\x68\x64\x5d\x3b\x5b\x3b\x0e\x55\x88\xbe\x67\x19\xef\x6b\xeb\x04\x5e\xfa\xc0\xe2\x76\x50\x38\xbb\x87\x59\xf2\x6d\x36\x20\x5f\x49\x30\x47\xc1\x2f\xa6\xa3\xef\x91\xc9\xb7\x59\x96\x4d\xea\x31\x1f\xf3\xbd\x85\x89\x5f\x0b\x38\x65\x19\x00\x40\xed\xa8\x46\x47\x73\xcf\xa5\x21\x77\x0b\x8f\x8d\x54\x8f\x5d\xde\x23\x26\xfc\xd6\x6b\x78\x27\x69\x9c\x01\x42\xa7\x5b\xe0\xb4\x1a\xb9\x25\x6f\x6e\x04\x2a\x3c\x84\x96\xa7\xeb\xc4\xb0\x46\x26\x2e\xa0\x1b\xb6\xda\x5a\xe7\xec\xf1\xee\x3a\x41\x77\xd1\x3e\xcc\xc3\x66\xb7\x30\xaa\x5f\xc0\xfd\x3d\x18\xd6\x70\x1a\x89\xa2\x7c\x34\xac\xe6\xb3\xc7\x0e\x38\x86\x7c\xa9\x79\xfa\x12\xba\xa0\x83\x58\x30\x56\x80\xbe\xd9\xcb\x6c\x31\x32\x9e\x93\x7d\x9f\x87\x37\xdb\x57\x46\x61\x8d\x5b\xd6\x2c\xed\x90\x67\x94\xda\xf5\xc6\x1a\xdd\x86\xaa\x58\x4f\x7e\x4a\x12\x60\x39\xd5\xd6\xb3\x04\x2d\xdd\x93\x95\xca\xd9\xa6\xac\xe2\xe1\x7b\x57\x29\x07\x6c\x84\x5c\x81\x8a\xc6\xeb\x9a\x64\x3a\xf4\x7e\xf0\x2d\x74\xf7\xee\xfa\x94\xda\x36\xf0\x2c\x53\xf3\x57\x4f\xa8\xd1\x28\x3a\x3f\xcc\x13\xe3\x92\xca\xac\x4a\x92\xf7\xf8\x96\xdb\x81\xe6\x2d\xee\x1c\x9c\x9f\x2f\x96\xc9\x4d\x41\x57\x92\x4c\xa2\x19\x4f\x17\x57\x89\x7f\xaf\xb8\x23\xf0\x8d\xa3\xb8\xe7\x64\x11\xf6\x70\x40\xcd\xf9\xb4\x12\x57\x97\xf3\x95\xaa\x48\xed\xe6\x0b\x38\x0d\xf1\x3e\x91\xa1\x82\x15\xa3\x6b\xff\xe2\x09\x29\x46\xae\xab\xd9\x02\xce\x59\x17\xe2\x39\xfb\x13\x00\x00\xff\xff\x8e\x10\xd5\x37\xab\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0xa9, 0x87, 0x7b, 0x48, 0xe2, 0x51, 0x2e, 0xcb, 0x8e, 0x79, 0x5d, 0x19, 0x5c, 0x32, 0x84, 0xff, 0x3, 0x27, 0xd4, 0xb6, 0x29, 0xb8, 0xce, 0xc4, 0x14, 0x2e, 0x3, 0x89, 0x6b, 0xae, 0x55}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\x3e\xac\x0e\xb0\x26\x97\x61\x07\xa3\x1f\x28\xda\x15\xe8\xa5\x2b\xba\xec\x07\x28\x32\x6d\x6b\x73\x48\x41\x62\x9a\x16\x45\xff\xfb\x20\x7f\xc8\xce\x17\x36\x9f\x14\x89\xe4\x23\xdf\x7b\xcc\x62\xb1\x80\x65\x6d\x3c\x88\x53\xe4\x95\x16\xc3\x04\xc6\x43\xc9\xae\xbb\x2a\xd1\x39\x43\x15\x28\x2a\xe0\xf1\x7e\x09\xa5\xe3\x75\x12\xb2\x98\x10\x94\xd6\xbc\x21\x01\x61\x50\xc4\x52\xa3\x4b\x12\xb3\xb6\xec\x04\x1e\x99\xee\x37\x54\x99\x55\x83\x4b\xfe\x83\xd4\x26\x42\xba\x7f\x9d\x0e\xf1\xdf\x5f\xd5\xda\x36\x38\x40\x40\x3a\x5e\xa4\x49\x32\xe9\x2e\x73\xa8\x8d\x35\x48\x92\xc3\x4d\x51\x38\xf4\xfe\x0b\x6c\x8d\xd4\x85\x53\xdb\x87\xbb\x1c\x7e\x3d\x90\x7c\xfb\x3a\x83\xf7\x24\x01\x00\x08\xbd\x3e\x63\x89\x0e\x49\x63\xe8\x54\x6a\x8c\xf1\xe8\xce\x3c\x68\x6e\x1a\x6c\x6b\xb7\x09\x0d\x4a\x7c\x7f\xc6\x32\x87\xcf\x63\x2b\xf3\xdb\x31\xf6\x48\x75\x2e\xdb\xea\x63\xc1\x80\x57\xa0\x65\x6f\xa4\x7d\x09\xe3\x09\x47\x98\xfe\xa9\x43\x79\xdf\xe7\x66\x02\xf6\xb4\x59\x35\x46\x7f\x74\x98\xd6\xa1\x55\x0e\x33\x6f\x2a\x42\x97\xc3\xcd\x46\xea\x9b\x4e\x89\x30\x35\xf4\xdf\x62\x01\x2b\x76\x8e\xb7\xa0\xc0\xed\x13\xd0\xe5\x9e\xf9\xb6\xa3\x3d\x02\xc2\xe7\xb1\x29\xe7\x13\x16\xe0\xb2\x4f\x89\x11\xe1\x9b\x77\x00\x17\xc7\x19\xba\xca\x82\x92\x39\x1c\x7d\xfc\x29\xec\x54\x85\x4f\x4a\xea\xd9\x4e\xcd\xeb\x6b\xb0\x8a\x8c\xce\xd2\x7e\x26\x28\x18\x3d\x10\x0b\x78\x61\x87\xa0\x08\x78\xf5\x1b\xb5\x80\xea\x48\xf5\x16\xb5\x29\x0d\x16\x60\x95\xd4\xe9\x2c\x99\x52\x50\x61\x17\x14\x5d\xe3\xc1\xb6\x64\x46\xf3\x76\xc5\x62\x4e\xd0\x25\x06\xc3\x65\x28\xd0\x37\x32\x3a\x6f\x17\x22\xb2\xdc\x17\x3e\x20\xdb\xa1\x46\xf3\x82\xee\xc0\x6a\x91\xe9\xd1\x08\x70\x39\xa2\xef\x72\x5d\xa1\xdc\x2a\xab\x56\xa6\x31\xf2\x96\x1d\x25\xb5\xb3\xc9\x21\xa7\x51\xa7\xff\xf0\xd8\x55\x76\x4a\x8f\x5b\xde\x34\x45\x2b\xc4\x69\x5f\x0d\xa3\xee\xac\xd5\x20\x49\xef\x5f\x7c\x45\xbd\x11\x1c\x16\xb4\x67\x71\x30\x5b\xdc\x93\xf6\x6f\x20\xfc\xe0\x2d\x1d\xdb\xd3\x41\x2c\x2a\x05\x2e\xce\x0f\x1c\x1b\xcf\xd9\xf4\xcf\x61\x3c\xef\x6a\x78\xb7\xb7\xa4\x86\x76\x5d\x73\x1c\x7e\x4f\xbb\xe1\x98\x49\xa0\x36\x87\x8b\x73\x2a\x65\x36\x1d\xdd\xb2\x97\xc9\x8a\x7e\x3a\x68\xba\x42\x79\xb8\xf3\xd9\x6c\xae\x99\x44\x19\xf2\x93\xee\x67\x39\xa4\x3f\x9c\xa9\x0c\xa9\xa6\x23\x05\x7c\x1d\x35\xa9\xd5\x0b\xc6\xf6\x15\xbd\xad\xd9\x61\x7a\xb2\xd3\x7f\xe1\x2c\xfb\xe1\xf1\x65\x8a\xb2\x0d\xb0\x03\x48\xda\x0f\xf6\x91\xfc\x0d\x00\x00\xff\xff\xec\xbb\x17\xf7\x45\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x82, 0xba, 0x6e, 0x96, 0x4b, 0x26, 0xb, 0x41, 0x5a, 0x35, 0x1c, 0x35, 0x45, 0xb9, 0xde, 0x2a, 0x83, 0x78, 0x50, 0x9, 0xfa, 0x2c, 0x77, 0x97, 0x5c, 0xbb, 0x91, 0xf8, 0xa0, 0x9f, 0xaf}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x91\xc3\x48\x2f\xed\x7d\x8c\x41\x29\xcb\xb1\xf4\x90\x3d\x80\xea\xba\x8e\xa8\x6b\x19\x5b\xa6\x1b\x25\xef\x3e\x52\xb7\x49\x56\x18\xd3\xc9\x88\xef\x97\xfe\x5f\x5e\xad\x56\xd0\x76\x94\x40\x22\xfa\x84\x5a\x88\x3d\x50\x82\x4b\x87\x02\xe8\x01\xb5\xe6\xec\x05\x2e\x9c\xdd\x01\x62\xf6\x6a\x50\x08\x43\xf6\x8e\xfc\x09\x48\x12\x68\x76\xce\x14\xe5\x31\xf2\x19\x42\xde\x3b\xd2\x90\x84\x23\x5a\xa3\x14\x9d\x03\x47\x81\x2d\xfb\x26\x7b\x4b\x7b\x67\x5a\x3e\x99\x3b\x5c\x3d\xb7\xab\x07\xff\xf1\x85\xe7\xe0\xcc\xb6\x69\xef\xe4\xd4\x18\x99\x6d\xd3\x36\x1c\x2f\x18\x0f\xe4\xed\x63\xe0\xbc\x57\x29\x35\x4f\x76\x55\x0a\x00\x20\x44\x13\x30\x9a\x3a\x91\xf5\x26\xbe\xc2\x3a\x4b\xb7\x2e\x49\x17\x0f\x66\x28\x3a\x42\x41\x96\xd6\xc8\x06\x03\xee\xc9\x91\x7c\xd7\x93\x93\xe5\x66\x0c\xbf\xbb\xc5\xde\xa1\x74\x8b\xa5\xee\x8c\x3e\xbd\xbd\x5c\x67\xe0\xf4\x7c\x96\xf4\xef\xf5\xb0\x15\x66\xe5\xd8\xd6\xd5\xe7\xed\xc4\x43\xb0\xbf\xb5\x25\xf3\xb4\xba\x5a\xfc\x9a\x73\x77\x5f\x3e\xeb\x5f\xdb\xa3\xb4\x2f\x27\xe8\x55\xaf\x7e\x02\x00\x00\xff\xff\xbf\xef\x09\x3c\x21\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x40, 0xc4, 0x53, 0x49, 0x17, 0x9b, 0xf1, 0xe1, 0xe9, 0x1, 0xf1, 0x28, 0xf5, 0xe2, 0x9a, 0x5, 0x86, 0xf1, 0xf8, 0x2d, 0x5, 0xfd, 0xd3, 0xec, 0x95, 0x63, 0xe0, 0x9, 0xb7, 0x9e, 0xda}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
