// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (542B)
// ../../../scripts/get_collection_ids.cdc (514B)
// ../../../scripts/get_collection_length.cdc (421B)
// ../../../scripts/get_contract_storage_path.cdc (510B)
// ../../../scripts/get_nft_metadata.cdc (5.663kB)
// ../../../scripts/get_nft_view.cdc (4.443kB)
// ../../../scripts/get_total_supply.cdc (98B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.365kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.575kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.577kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.111kB)
// ../../../transactions/destroy_nft.cdc (900B)
// ../../../transactions/mint_nft.cdc (3.11kB)
// ../../../transactions/setup_account.cdc (1.114kB)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.557kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.554kB)
// ../../../transactions/test/upgrade_nft_contract.cdc (154B)
// ../../../transactions/transfer_nft.cdc (1.612kB)
// ../../../transactions/unlink_collection.cdc (634B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xc1\x6a\xe3\x30\x10\x86\xef\x7a\x8a\x1f\x1f\x16\x1b\x96\xf8\xb2\xec\x21\x6c\x36\xa4\xa1\x81\x5e\x42\x28\xee\xb9\xc8\xf2\x38\x19\x2a\x8f\x84\x2c\xd3\x96\x90\x77\x2f\x89\x63\x3b\x4d\x7d\xb2\x46\xf3\x89\xf9\xbf\xc9\x73\x14\x07\x6e\xd1\x9a\xc0\x3e\xa2\x74\x21\xb8\xf7\x16\x5a\xb0\xdd\x14\xa8\x83\x6b\xa0\x61\x9c\xb5\x64\x22\x3b\x51\x8a\x1b\xef\x42\xc4\xd6\xc9\xa6\x93\x3d\x97\x96\x0a\xf7\x46\xd2\xb7\x26\xf7\xe5\x64\xe8\x7f\xfc\xd0\x8d\xb7\x34\x3e\x9a\x4c\x85\x44\x29\xdf\x95\xa8\x3b\x41\xa3\x59\x52\x5d\x55\x81\xda\x76\x8e\x55\xff\xf3\x1b\x5c\xcd\xf1\xf2\x24\xf1\xef\x9f\x0c\x47\x05\x00\x96\x22\xb4\x31\xae\x93\x88\x05\xf6\x14\x57\xfd\x61\x80\x33\x35\xb6\x4d\xc3\x3f\x53\x8d\xc5\x80\x5d\xee\xcf\xdf\x6c\x4f\x71\xad\xbd\x2e\xd9\x72\xfc\x4c\xa7\xb9\x66\xeb\x91\xdc\x75\xa5\x65\xb3\xd3\xf1\x90\x4d\x5c\xef\xea\xdf\xaf\xe3\x7d\xe8\x1f\xe0\xe9\x7f\x3a\x71\xcb\x25\xbc\x16\x36\x69\xb2\x76\x9d\xad\x20\x6e\xd0\x0e\x33\x8e\xd1\x4b\xf2\x17\xfa\x26\x41\x72\xcd\x95\xe7\x78\xe8\x11\x8d\x40\x35\x05\x12\x43\x88\x0e\x1a\xad\x27\xc3\x35\x9b\xcb\xfe\x58\x10\x0f\x74\xbb\xbf\xc1\xca\x2b\x16\xdf\xcd\x5c\xe3\x6c\x37\x45\x7a\xd6\xcd\x55\xa6\x4e\xea\x2b\x00\x00\xff\xff\xc9\x72\xf5\x8c\x1e\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0xe2, 0xab, 0x39, 0xbd, 0x62, 0x2f, 0xe3, 0xf1, 0x63, 0xf4, 0xe7, 0x7, 0x2f, 0x1a, 0xe0, 0x3d, 0x24, 0xd6, 0x96, 0x48, 0xc2, 0xd5, 0x87, 0xc8, 0xe3, 0x8e, 0x45, 0xf4, 0x34, 0x55, 0xa1}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\x4d\x6b\xf2\x40\x10\xbe\xef\xaf\x78\xc8\xe1\x7d\x13\x28\x7a\x29\x3d\x48\xad\x88\x56\xf0\x22\xd2\xda\x53\xe9\x61\xb3\xd9\xe8\xd2\xcd\xec\xb2\x99\xa5\x2d\xe2\x7f\x2f\x31\x8d\xb1\xa1\x39\x4d\x66\x9f\xcf\x19\x8f\xc7\x78\x56\xc1\x78\x06\x3b\xec\x35\x63\xb3\xda\x61\xbd\xac\x61\x08\x92\x20\x95\x72\x91\xf8\x7f\x0d\xe5\xac\xd5\x8a\x8d\x23\x21\x4c\xe5\x5d\x60\x6c\x1c\xad\x22\xed\x4d\x6e\xf5\xce\xbd\x6b\x42\x19\x5c\x85\x64\xb8\x4e\x3a\xfc\xe3\xa7\xac\xbc\xd5\x8d\x43\x8b\xec\x17\x89\x10\x3e\xe6\x28\x23\xa1\x92\x86\x52\x59\x14\x41\xd7\xf5\x04\xf3\x76\xb8\xb9\xf2\xdf\xc6\xdc\x1a\xb5\x95\x7c\x98\xa0\x9f\xb3\x09\x5e\x5f\xd6\xc4\x77\xb7\x6f\x38\x0a\x00\xb0\x9a\xbb\xfc\x98\x36\xdd\xe6\xed\x4f\x27\x9e\x89\x0b\xac\x17\x7f\xd2\x25\xa6\x1d\xed\xfc\xde\x7c\xa3\xbd\xe6\x85\xf4\x32\x37\xd6\xf0\x57\xfa\x57\x96\xac\x07\xe7\x2e\x04\xf7\x71\xff\xef\x38\xbc\xc4\x68\x31\x20\x9e\x1e\xd2\x9e\x37\x9b\xc1\x4b\x32\x2a\x4d\x16\x2e\xda\x02\xe4\x18\xad\x14\xd4\xc5\xbb\xbd\x9c\x3f\xb3\xaf\x62\x43\x32\x6a\xaf\x95\x29\x8d\x2e\xe0\x25\x1f\x92\x9f\x7a\x41\x73\x0c\xf4\xbb\x61\x53\x67\xbd\xac\xd3\x4c\x9c\xc4\x77\x00\x00\x00\xff\xff\xcc\x8f\x33\x0e\x02\x02\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe9, 0xcd, 0x59, 0x9a, 0x68, 0xff, 0x26, 0xdf, 0x71, 0xd3, 0xc1, 0xb4, 0x19, 0x89, 0x5a, 0x98, 0x78, 0x24, 0x9c, 0x50, 0xd8, 0x72, 0xc2, 0xe7, 0x18, 0xba, 0x66, 0x69, 0xdd, 0x13, 0x1b, 0xf5}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6e\xc2\x30\x10\x45\xf7\x3e\xc5\x28\x8b\xca\xd9\x70\x00\x54\x8a\x50\x5a\x24\x36\x08\x55\x5c\xc0\x76\x26\xc1\xaa\x33\x63\x39\x63\xb5\x15\xe2\xee\x15\x24\x24\x2d\xf5\xca\x1e\xff\x67\xfd\x67\xdf\x45\x4e\x02\x7b\xa6\x6d\xa6\xd6\xdb\x80\x47\xfe\x40\x82\x26\x71\x07\xc5\xe3\xb8\x50\x63\xfe\xed\xcb\x74\x31\xe0\x7e\x7b\x1c\x93\xf3\xa0\x50\x2a\x66\x0b\x4d\x26\xe8\x8c\x27\x6d\xea\x3a\x61\xdf\x2f\x61\x33\x6c\xca\x25\xec\x48\xe0\xac\x00\x00\x02\x0a\x18\xe7\x38\x93\xc0\x0a\x5a\x94\xcd\x70\xb8\x53\xa5\x9a\x62\x8e\x43\x40\x27\x9e\xe9\x1d\x1b\x58\xdd\xb1\xdb\xfd\x75\x2d\x5a\x94\xca\x44\x63\x7d\xf0\xf2\xad\xe7\x42\x8b\x6a\x22\x0f\xd9\x06\xef\x0e\x46\x4e\xe5\xcc\x59\x4e\x89\x3f\x9f\x9f\xce\x8f\xb6\xff\xc0\xcb\x8b\x9e\xb9\xf5\x1a\xa2\x21\xef\x74\x51\x71\x0e\x35\x10\x0b\x0c\x4f\x81\x9b\x6a\x0c\xbf\x13\x6f\xf4\x2f\x83\x62\xf4\x4a\x28\x39\xd1\x5f\xb5\xab\xc7\xee\xb5\xd7\xe5\x22\x20\xb5\x72\x52\x17\xf5\x13\x00\x00\xff\xff\xbd\xc8\xa0\x6d\xa5\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0xcb, 0x1, 0xbd, 0xd, 0x9, 0x6e, 0x13, 0x12, 0x78, 0x65, 0x2a, 0x1d, 0x21, 0x81, 0xdd, 0xfb, 0x15, 0xae, 0xd1, 0x13, 0x39, 0x55, 0x97, 0x44, 0x60, 0x63, 0xbe, 0xd6, 0x71, 0x48, 0x1}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4d\x6b\xe3\x30\x14\xbc\xeb\x57\x4c\x7c\x58\x6c\x58\xfc\x03\x42\x9c\x10\xb2\xec\x6d\x97\xd2\x86\xde\x5f\xa4\x97\x54\x60\x4b\xe6\xe9\x39\xa1\x94\xfc\xf7\xa2\xd8\xcd\x07\x3d\xf4\x1d\x84\x34\x9a\x37\x33\x8c\xef\xfa\x28\x8a\x7f\xac\xe4\x48\xe9\xd5\xf3\x29\x61\x2f\xb1\x43\xf1\x80\x15\x66\x62\xe6\xd7\x33\xa7\xd8\x1e\x59\x26\xe2\x3d\x54\x18\xd3\x0f\x3b\xec\x87\x80\x8e\x7c\x28\xc9\x39\x99\x63\xed\x9c\x70\x4a\xbf\x11\xa8\xe3\x39\x5e\x54\x7c\x38\x54\xf9\x12\x85\x0e\xfc\x44\xfa\xb6\xc2\x87\x01\x80\x96\x15\x8a\x06\xdb\xf7\x9e\x17\x0f\x11\xea\xff\x7f\xb7\x9b\xd8\xb6\x6c\xd5\xc7\xf0\x87\x94\x96\x65\x75\xdd\xd9\x45\x91\x78\x62\xb7\x89\x41\x85\x6c\x96\x38\xb0\xae\xad\x8d\x43\xd0\x4b\x8c\xaa\xb6\xd3\x5f\xaa\x47\xf6\xe2\xd7\x7d\xf4\x65\x39\xa6\xcb\xe7\xa8\x9b\x67\xb5\x42\x4f\xc1\xdb\xb2\xf8\xda\x86\x8d\x43\xeb\x10\xa2\x62\xc7\x57\xdf\xa2\x32\xd7\x2c\x47\xcf\x27\x34\xdf\x22\xd5\x32\x3a\x65\xd3\x52\x47\x0b\xbf\x9f\xd8\x0d\x82\x6f\xa7\x0e\xf2\x08\xeb\x20\x21\x83\x17\xe8\x7c\x53\xb7\x0e\xcd\x65\x69\x06\x4a\x33\xfc\xd0\x91\xb9\x13\xb3\xae\x4e\xb7\xc6\xcd\xd9\x7c\x06\x00\x00\xff\xff\x73\xe8\x98\x91\xfe\x01\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0x56, 0x4, 0xaa, 0xcc, 0x73, 0x82, 0xc4, 0xac, 0x12, 0x70, 0xbf, 0xa5, 0x3c, 0x54, 0x63, 0xf8, 0xde, 0xd9, 0x9e, 0xc3, 0xbd, 0xe5, 0x76, 0x9b, 0x2f, 0x5a, 0x92, 0x9c, 0x19, 0x96, 0x36}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x26\x39\x14\x36\xd0\x2a\x3d\x14\x3d\x18\x55\x83\x6d\x92\x2d\x16\xc8\x1a\x8b\xc4\xdb\x4b\x90\x03\x2d\x8d\x1c\x22\x12\xa5\x92\x54\xb2\x46\x90\x7f\x2f\x48\x4a\x22\x29\x92\x76\x9a\x8b\xa5\x99\x37\x33\xa4\x38\x8f\xe4\xcb\xc5\xc5\x05\x6c\x9f\xa8\x00\x51\x70\xda\x49\xd8\xa3\x14\x40\xea\x1a\xe4\x13\xc2\x0b\xc5\xd7\x5f\x76\x44\x60\x09\x0d\x4a\x52\x12\x49\x80\x08\xd1\x16\x94\x48\x2c\xe1\x95\xca\x27\x8d\x13\x1d\x16\xb4\xa2\x58\xc2\xe6\xf3\x76\xa1\x52\x12\x56\x02\x47\xd9\x73\x26\x80\x4a\x20\x02\x08\x08\xca\xf6\x35\x82\x90\xbc\x2f\xe4\x62\x41\x9b\xae\xe5\x12\x6e\x7e\x90\xa6\xab\x71\xf3\x79\x0b\x15\x6f\x1b\x38\xb7\x86\xf3\x11\xf3\x75\x28\xfe\x0f\xc5\x57\x31\xc0\x3c\xdb\xf9\x62\xd1\xf5\xbb\x21\xb5\x1a\x04\xbc\x2d\x00\x00\x94\xb1\x46\x09\x8c\x34\xb8\x86\x7b\xc9\x29\xdb\x7b\x8e\x12\xcd\xbc\x69\xcb\xa2\x7e\xf9\xd4\x37\x3b\x46\x68\x1d\xf5\xb6\xaf\x0c\xf9\x1a\x3e\x95\x25\x47\x21\xfc\xc0\x43\x17\xaf\xc8\xdb\x03\xa9\x25\x45\xb1\x86\x07\x6f\x0e\xd9\x9d\xf6\x1c\x1e\x3d\x38\xfe\x90\xc8\x19\xa9\xbf\xdf\xdd\x46\xd3\x09\xe4\x94\xd4\x9b\xbe\xd9\xa9\x91\x7c\xff\xc2\xe4\xef\xbf\x79\x80\xa2\xad\x6b\x2c\xd4\x04\xbf\xf5\xbb\x9a\x16\xdf\x88\x7c\x5a\x83\x7d\x4e\x80\xef\x65\xcb\xc9\x1e\x0d\xda\x79\x49\xe5\xe6\xed\x0b\x2d\x91\x0f\xd9\x39\x7d\x21\xf2\x28\x5e\xd7\x8f\xce\x68\x0e\xba\xa5\xec\x19\xcb\x6d\xea\x7b\x86\x63\xf8\x70\xc0\x26\xd5\x15\x16\x72\x7d\xa2\x3f\x2c\xf2\xe6\xc4\x42\x39\x9f\xf6\xdf\x9e\x70\xfc\xd2\x90\xfd\xa9\xea\x7f\x11\xc6\x90\x7f\x04\x79\xaf\x38\x59\x8b\x35\xbc\x19\xd8\x08\x7f\xf7\x9b\xa9\xa4\x66\x26\x7e\xe3\xdd\x18\xb3\xdf\xbf\x9c\x50\x29\xe6\xc8\xad\xb6\x7a\xc0\x06\x4b\x4a\x02\xe0\x57\x6d\xbd\xf4\x90\x35\x2d\x90\x09\x9c\x43\x6f\x8d\xf9\x72\xa1\xc1\x94\x51\xb9\xd4\x4f\xea\xcf\xe5\xed\xcf\x93\x35\x42\x5a\xeb\x0c\x18\x6b\x5d\x3e\x5d\xad\x9d\x55\xd2\xed\x16\xeb\x38\xcd\x55\x8b\x8d\x10\xd5\x3a\x63\x2c\xb5\xde\x53\x14\x8d\x21\x53\xfc\x8c\x66\x4d\x91\x33\x3d\x84\x70\x0a\xa7\x69\x79\xac\xf4\xc7\xd0\x9b\xe8\x72\x1f\x65\x63\x0c\x16\xa1\x62\xf4\x13\x86\x3c\x8c\xc1\x22\x24\x8c\x66\x4b\x31\xd0\x69\x91\xa3\xf4\x73\x5a\xf8\x08\xf7\x2c\x6a\x20\x5e\x94\x77\x16\x35\x92\x2e\xc1\x39\x05\x59\x0d\x87\xa5\x69\xd4\xba\xca\x14\xeb\x20\xd7\xe4\xf3\x1d\x0e\xf1\x20\x77\x69\xe8\xc3\x26\x0a\x42\x6e\xe9\xe8\x43\x34\x15\x21\x37\x94\x9c\x45\x1f\x3a\x5d\xdd\x90\xd2\xf7\x4d\x84\x84\xdc\x92\xd3\x87\x38\x3c\x84\xdc\x65\xa5\x0f\x73\x19\x09\xb9\x47\x50\x1f\x18\x23\x27\xe4\x51\xce\xa6\x02\x1d\x7a\x7a\x91\xf3\x63\x35\x56\xd3\xa1\xae\x5f\xd5\x71\x1c\x1f\x70\x64\xb0\xc7\x03\x2c\x57\x23\xa1\xd6\x79\x6a\xc8\xa9\x34\x81\x3b\x95\x68\x63\xda\xd0\x37\xa4\xc0\xd7\x5e\x6b\x46\xed\xa9\xd0\x1b\xaf\x63\xa2\xf6\xe4\xca\xda\x2d\xc4\x5f\x59\x6b\x4f\x85\x3a\xdb\x8a\x17\xea\xd8\x93\x55\xcd\x56\xe3\x57\x34\xb6\x19\x17\xcc\xce\xa2\x78\xe0\x1c\xf1\x96\x69\x7a\x47\x51\x24\xb5\xc7\xfa\xe4\x34\xdb\x4b\x6e\x7e\x7c\xd7\xb0\xa7\xe4\xc3\xaf\x76\xbe\x2f\xde\xcd\x1d\xbc\xea\x19\x34\x84\xb2\x25\x31\xc7\xac\x3d\x6f\x81\x96\xe3\xd9\xb7\x5a\x3b\x97\x74\x75\x37\x20\x45\xd1\xf6\x4c\x42\xae\x04\xc8\x27\xf3\x32\x66\x58\x2d\x26\x98\x9d\x2f\xe4\x63\xcc\x34\xb6\x6c\x8f\xf2\x8a\x74\x64\x47\x6b\x2a\x0f\x4b\xab\x23\xb2\xab\x08\x59\x57\x36\x6e\xd7\x72\xde\xbe\xfe\xf1\xd3\x9b\x13\x62\x1f\xe7\xc1\xef\x7f\x2e\x6d\xec\xe5\x25\x74\x84\xd1\x62\x79\x7e\xd5\xf6\x75\x09\xac\x95\x60\xd2\x01\x01\x8e\x15\x72\x64\x05\x82\x6c\xb5\x4e\xb2\xc3\x3f\x77\x26\xc5\x2a\xe9\x2d\xe5\x30\x1e\x3b\x82\xa5\xfa\x70\xb4\x5c\x9d\x99\x98\x8b\x0b\xf8\x5b\x4b\x13\x84\x1d\x11\xb4\x80\x92\x8a\xae\x26\x07\xa0\xac\x6a\x79\x43\xf4\xe7\xa9\x5a\x0e\x52\xe9\x3a\xa5\xc8\xc6\x4a\x23\x30\x9f\x1d\x2d\x7b\x94\xd7\xc6\xb5\x64\x95\x8c\xd4\x31\x7b\x6d\xac\x02\xc2\x9e\xbe\x20\xf3\xca\x0c\x68\x95\x3b\x56\xea\x6e\xdc\xb8\xdd\x62\x33\xad\x13\x8b\x73\xf8\x38\x8f\x74\xf8\x9e\x9e\xa2\xb7\x96\xfe\x7c\x9d\xa5\xb0\x90\xd4\xf8\xfd\x3c\x44\x92\xf9\x68\x58\x25\x87\x33\x3d\x95\x62\x70\x8b\x59\x79\xf7\x14\x4a\x85\xde\x6b\xcc\xbc\xa4\x7f\xb5\x35\xc7\xa7\x39\x64\xcf\xb2\x81\x46\xde\x2c\xb7\xd3\x21\xab\x72\xaa\xb7\x65\x94\x66\xc9\x5b\x0d\xe4\xf0\x66\xc4\x85\xea\x83\x67\x54\xbd\x11\x2e\x43\x26\x4c\x7c\xf6\x8c\x07\xe1\x5c\x33\x82\x02\x0f\xcf\x78\x78\xf4\x37\x6e\x3f\x83\x06\x9c\x65\x3d\xaf\x87\xed\x66\x1a\xec\xb4\x8b\x05\x9f\xca\xdc\x98\xe6\x9f\x6a\xd8\xd8\x02\xb4\xb9\x3a\x69\xf4\x84\x1d\x77\xba\x00\x3c\x5c\xa0\x0c\x5a\xc3\xcd\x7f\x3b\x14\x0f\xe6\xf2\x65\x60\x9d\xbe\x56\x25\x44\xcc\x08\x71\x8c\x51\x45\x33\xe2\x26\x53\xd6\x73\xba\x5c\x05\x12\x47\xff\x44\x04\xce\xf0\x90\xd1\x12\x99\xa4\x15\x75\x41\x8e\xd8\x71\x08\xec\x13\x76\x95\xd0\x3b\xce\x8b\x5a\xa2\x94\xf0\x99\xf7\x77\xc6\xf4\xe3\x29\x25\x14\xb0\x32\xeb\x3e\xae\x8d\xc2\x60\xf1\x7f\xd4\x52\xa4\xb6\xe3\x3f\x26\xa0\x52\xa3\xb6\xc6\xe8\x32\x1c\xd3\x59\xa9\x94\x16\x73\x2a\x65\x44\x8e\xa5\x67\xf8\xe1\xb4\x46\xb7\x85\xdc\xf5\x3b\x3e\xa1\xe3\xc2\xb0\x28\x0b\x12\xf2\x2e\x8c\x4e\xf6\x62\x42\xf9\x45\xb6\x1c\xeb\xce\x2a\x5a\xe3\x9c\x64\x09\x6d\x18\x26\xda\x59\xf7\x89\x44\xd3\x3e\x1b\x98\x22\xf2\xd1\x3f\x5f\x32\x75\x28\xdf\x52\x21\x1f\x7e\x7d\x0c\x35\xa4\x8c\xab\x46\xf3\x13\xca\x44\xf7\x4a\xb7\x5a\xbc\x2f\xfe\x0b\x00\x00\xff\xff\xa0\xd8\x58\x6a\x1f\x16\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x9f, 0x4f, 0x3b, 0x55, 0x3a, 0xf4, 0xcf, 0xd4, 0x62, 0xfe, 0x5c, 0xd6, 0x6, 0x4a, 0x14, 0xde, 0x39, 0x8b, 0x0, 0xbb, 0xa3, 0x32, 0x51, 0xb0, 0x81, 0xba, 0xe5, 0x2a, 0x2f, 0x81, 0x95}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x8c\x7d\x58\xd8\x40\xa0\xd3\x62\x0f\xc2\x6a\x8b\x6e\x9a\x02\x05\xba\x46\x91\xa4\xbd\x14\x3d\xd0\xd2\xd8\x19\x84\x26\xb5\x14\x95\xc4\x08\xfc\xdf\x17\x92\x2c\x91\x94\x48\x49\xeb\x93\x39\xf3\xe6\x43\xe4\x1b\xf2\xd1\xa9\x90\x4a\xc3\xdd\x1b\x3b\x15\x1c\x77\x9f\x1f\xe1\xa0\xe4\x09\xd6\xc6\xb0\x8e\xae\x98\x7f\x50\xb3\x9c\x69\xf6\x83\xf0\xb5\xbc\xc2\x1c\xdb\x3a\x8a\x8a\x6a\x0f\xa5\x56\x55\xa6\x61\xf7\xf9\xb1\xb6\xc2\x7b\x04\x00\x50\x3b\x38\x6a\xa0\x3c\x81\xef\x5f\x84\xfe\xe3\x77\xc7\x5c\x55\x01\x87\x60\x27\x4c\xe0\x41\x2b\x12\x47\xc7\x91\x63\x99\x29\x2a\x34\x49\xe1\xf5\xeb\xa7\xea\xb4\x17\x8c\xb8\xd7\xab\xe4\x99\x71\x4d\x58\x26\xf0\xd3\xf9\x86\xf8\xbe\xf1\x9c\x7f\x39\x70\x7c\xd3\xa8\x04\xe3\xdf\xef\xbf\x7a\xd3\x65\x92\x73\xcc\xea\x5e\xbe\x55\x7b\x4e\xd9\x37\xa6\x9f\x12\x30\xff\x03\xe0\x07\x2d\x15\x3b\x62\x8b\xb6\x16\xa1\xdc\x4a\xbe\x50\x8e\xea\x9a\x5d\xd1\x0b\xd3\x93\xf8\xa6\xfe\xa2\x86\xbf\x92\x78\xc6\xfc\xf1\x5c\xf8\x37\x7b\xdc\xc3\xe2\x80\x5d\xe8\x00\x0d\xe4\xd3\xcc\x51\x1a\xe4\xdd\xe2\x73\x78\xf8\xb7\x62\x0a\xbf\x9c\xd8\x71\xae\xfa\xdf\x4c\x08\x54\x4b\x90\x0f\x32\x23\xc6\xcb\x04\xde\x5b\x58\x07\xbf\xb8\xc4\x53\x8c\x74\x99\xb8\xe3\x12\x3f\x36\xd6\xa8\x41\x92\x20\xbd\x69\xfe\x35\xab\x9e\xf8\x37\xbd\xcd\x1e\x07\x63\xb5\x67\xc1\x58\x3d\x83\x60\x9c\xa3\x29\x30\xae\xf9\x11\x30\x58\x0f\xff\x8d\x73\x8e\xfc\x3e\x64\x88\xf9\xde\xac\x21\xda\x87\x5b\x98\x6f\x72\xcc\xdf\xa9\xd2\xcb\xd0\x3b\xef\xf9\x4c\xf2\xdc\x07\xf3\x90\xdc\xbb\x85\x63\x86\xfb\x60\x1e\x7a\x7b\xb3\x85\xb8\x6d\x71\x69\x8a\xd8\x35\x60\x7b\xbd\xeb\xeb\x5f\x89\xfc\x10\x53\x0e\x29\x50\xee\x1a\x6b\x6e\x43\xda\x50\xdc\x75\xd4\xf4\x86\xb4\x61\xb9\xeb\xb0\x18\x0e\xa9\xcd\x77\x17\xd6\x73\x1d\x52\xc3\x7b\x17\xd2\x73\x1e\x52\xc3\x7f\x17\x62\x51\x1d\x52\x9b\xf8\x2e\xcc\x47\x7a\x48\xbd\xb3\x10\x0a\xb4\x68\xef\x44\x0e\x1f\x02\x5f\x4d\x6b\x24\xdc\xaa\x96\x63\xba\x61\x4f\xb3\xd3\x01\x66\x06\x3c\xa1\xc6\x39\xd7\x72\x28\xcd\xc8\x1d\x4a\xb4\x6b\x69\xe2\x1a\x42\xe0\x4f\x0e\x75\xbc\xf6\x50\xe8\x9d\x43\x04\xaf\x3d\x78\xb2\x66\x34\xdd\x93\x35\xf6\x50\xa8\x35\xae\x4e\xa8\x65\x0f\x56\x6d\x47\xd8\xad\xd8\xda\x06\x83\xd2\x8c\x6c\x3d\x25\x66\x76\x2f\xd1\xa5\x55\x6f\x87\x4a\xc0\x89\x91\xd8\xb0\x3c\x57\x58\x96\x09\x7c\x6c\xff\xdc\x58\x2f\xd5\x36\x19\xc8\xbb\xfa\xe1\x63\x59\x26\x2b\xa1\x21\x85\x23\xea\x8f\xed\xa2\xcb\xb2\x8d\x7a\x98\x69\x0e\xd2\x2e\xa6\xef\x2f\x3e\xa2\xbe\x65\x05\xdb\x13\x27\x7d\xde\x18\x15\x1a\xdf\x7a\x26\x6b\x6b\xe2\xf6\x52\x29\xf9\xfa\xe7\x6f\xef\x83\xa7\x0c\x4b\xc9\x5f\x50\x99\xe8\xcb\x5f\x1b\x13\xf6\xe1\x03\x14\x4c\x50\xb6\x59\xdf\xca\x8a\xe7\x20\xa4\x86\x36\x13\x30\x50\x78\x40\x85\x22\x43\xd0\x12\xf4\x13\x5a\x9d\xaf\xad\xef\x79\x21\x7c\xed\xca\x38\x7b\x7f\xed\xe9\x87\xe5\xdf\xd4\x5b\x48\xf9\x76\x65\xc2\xc5\x41\x37\xfb\x98\x0e\xee\xd5\x23\xea\xeb\x16\x5f\x83\x6e\xdc\x4a\x89\xb3\xf4\xee\x6f\xf0\x4e\x87\x14\xde\x5b\xd1\x72\x90\x0a\x9e\xf1\x0c\x24\xba\x46\xec\xe1\xa1\xb2\xe0\xec\xbc\x8a\xcb\x36\x51\xfc\x8c\xe7\xd2\xba\xe3\x47\x95\x7e\x3e\xe3\xf9\x57\x7d\x85\xcf\xa6\x6a\x90\xab\xb8\x52\xfc\xca\xbe\xb6\x7f\x85\xba\x52\xa2\xe3\x96\xab\x91\xba\xa4\x94\x0f\x75\x52\xe7\xa9\x57\x43\xb5\xd4\xf9\xf2\xae\x81\xda\x1c\x10\x4f\x23\xac\xe5\xf5\x4a\xaa\x51\x40\xef\x8b\x2b\x45\x9b\xad\x57\x6c\x75\x41\xbd\x69\x55\x9f\xf5\x7d\xb7\xb2\xa3\x1c\xd9\xd5\xc5\x59\xc6\x66\x03\xe7\x84\x98\xe7\x30\x98\x66\xab\xb8\x58\x2e\xd0\x42\x29\xca\xff\x23\xdc\x82\x7d\x58\xa8\x29\x45\x37\xfd\x1d\x66\xc0\x63\xca\x51\x68\x3a\x10\xaa\x65\xf2\x6f\x3a\xb1\x41\xce\x25\xf6\x68\xc5\xb9\x6f\x5e\x9c\x7c\xe7\x90\xd9\x33\x57\x2e\xad\x03\x9a\x73\x22\xde\x4b\xf5\x80\x26\x9d\x48\x63\x91\x33\xc4\x4d\x47\xb7\x4e\xdd\x14\x06\x17\x1f\x88\xe3\x70\xa4\x02\x12\x77\x22\xe3\xde\xe0\x66\x32\xf6\x37\xe7\xc8\x34\x96\xc3\x5d\xc1\x76\xbd\x6a\x01\xdb\xe8\x12\xfd\x17\x00\x00\xff\xff\xdd\x41\x95\x28\x5b\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0x51, 0xfe, 0xbb, 0xc, 0x3d, 0xb5, 0xe, 0xc, 0x7e, 0x46, 0x6e, 0xba, 0x3a, 0xbd, 0x93, 0xa9, 0x9a, 0x72, 0x8a, 0x3f, 0xfb, 0xa1, 0x4c, 0xb, 0x93, 0xed, 0x31, 0xb6, 0x1b, 0x1e, 0x4b}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x70\xad\x48\xcc\x2d\xc8\x49\xf5\x73\x0b\x51\x48\x2b\xca\xcf\x55\x50\x42\x08\x28\x71\x71\x15\x94\x26\x29\xa4\x95\xe6\x29\xe4\x26\x66\xe6\x69\x68\x5a\x29\x84\x7a\xe6\x95\x98\x99\x28\x54\x73\x29\x28\x28\x28\x14\xa5\x96\x94\x16\xe5\x21\x99\xa0\x57\x92\x5f\x92\x98\x13\x5c\x5a\x50\x90\x53\xc9\x55\xcb\x05\x08\x00\x00\xff\xff\xb3\x36\x44\x68\x62\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xf7, 0xfd, 0x89, 0x44, 0x74, 0x88, 0x5b, 0x29, 0xd8, 0x20, 0xeb, 0x11, 0xe0, 0x17, 0xe7, 0xfc, 0x31, 0xdb, 0x36, 0x7c, 0x7a, 0xc8, 0x3e, 0x28, 0xb2, 0x81, 0xb0, 0xec, 0x29, 0xfb, 0x26}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcb\x6e\xa3\x3c\x14\xde\xf3\x14\x5f\x59\x54\x64\x43\xf6\xa8\x17\xf5\x8f\xfe\xcc\x6a\xa2\x2a\xcd\x0b\x18\x73\x00\x2b\x8e\x8d\x8c\x29\x1d\x55\x79\xf7\x91\xb9\x1a\x26\xca\x68\xbc\x48\x22\xe7\x70\xce\x77\x3b\x6c\xb7\x5b\x9c\x4a\x51\xc3\x1a\xa6\x6a\xc6\xad\xd0\x0a\xa2\x46\x5b\x32\x0b\xa6\xc0\x38\xd7\x8d\xb2\x68\x75\x23\x33\x98\x46\x05\xee\x09\xab\xc1\x4b\xa6\x0a\x82\x2d\x09\x87\xfd\x69\xaf\x4d\xcb\x4c\x46\x06\x86\xb8\xa8\x04\x29\x1b\x04\xe2\x52\x69\x63\x71\xd0\x6a\xdf\xa8\x42\xa4\x92\x4e\xfa\x4c\x0a\xb9\xd1\x17\x84\xeb\xeb\x70\xac\xff\xff\x8b\x5d\x2a\x49\x87\xfd\x69\xa8\x9c\x2f\xa6\x9a\x79\xa4\x50\xc5\xd8\xd0\xbf\x0b\x83\xc0\x63\x14\x29\x6a\x8f\x23\xb0\xb7\x2c\x33\x54\xd7\x09\x86\x1f\x1b\x7c\x07\x01\x00\x38\x66\x47\xca\xc9\x90\xe2\xe4\x38\x4e\xe4\x06\x6e\x47\xaa\x75\x63\x38\x75\xd5\x92\x2c\xf2\x91\xf6\x91\xf2\x04\x8f\x0b\x04\xb1\x2f\xcb\xd4\x7f\xa7\xa5\xa4\x5e\xe5\x96\xd0\x0a\x29\x91\x51\x2d\x0a\xc5\x2c\x81\xd5\x63\x47\xc7\x6a\x56\x72\x1c\xe7\xb3\x98\x1b\x25\xd8\xb1\x8a\xa5\x42\x0a\xfb\xeb\xe9\xf1\x7b\xad\x6b\x3c\x57\xbe\x37\xa9\x14\xfc\xfa\xd2\xd3\xad\x0c\x55\xcc\x50\xe4\xa6\x93\x49\xf0\xd6\xd8\xf2\xad\xb7\xdb\x49\x82\xe1\x6c\xb7\xf8\x4f\x1b\xa3\x5b\x18\x5f\x9b\x95\xe9\x9e\x30\xee\xd4\x24\xf3\xd8\x57\x07\xcf\xe8\xe7\x4c\x25\xee\xc4\x69\xd7\xf9\xe9\x8e\x72\x2f\x91\x73\x37\x59\x3a\x1e\x7f\x58\x6d\x58\x41\xef\xcc\x96\x9b\x45\xc7\xd7\x57\x54\x4c\x09\x1e\x85\xbb\x2e\xb1\x4a\x5b\xa4\x7f\x81\x1f\x6e\x02\x9f\xed\x0f\xb2\x38\x12\x27\xf1\x49\xc6\x93\xb6\x4f\x99\x8b\x84\x59\x25\x69\x5c\x92\x25\xfb\xdb\x66\xe1\x19\x05\xd9\x41\xe6\x5b\xb1\x5c\xd2\x89\x0b\xb2\xff\xea\x6e\x34\xef\xcb\x1f\xff\xf6\x82\xf9\x6c\x7f\xb2\x33\xa1\x6e\x4c\xbf\xca\xeb\x7a\xf0\x99\xbf\xa8\xf1\xc9\xa4\xc8\x90\x52\xae\x0d\xe1\x22\x94\x75\x39\x1d\xb6\x64\x6a\x2a\x72\x3c\xdc\x51\x20\xe6\x25\xf1\x73\xe4\x47\xac\x4b\xe3\xe8\xda\x5d\x00\xce\xce\x0e\xc4\x43\x38\x0b\x75\x0d\xfa\xcf\xee\x8b\xbe\x88\x37\x96\x96\x01\xfe\xe8\x97\x67\xb5\x52\x37\x83\x1a\xf7\x2f\xb6\x09\xf8\xc2\xa3\xe4\x9e\xb5\x9b\x01\xc6\x35\xf8\x1d\x00\x00\xff\xff\x1c\x10\xd4\x05\x55\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x40, 0xb3, 0xf3, 0x54, 0x96, 0x3a, 0xa1, 0xac, 0x7b, 0x77, 0xaa, 0xee, 0xf4, 0xa5, 0x2, 0xb4, 0xf8, 0x81, 0x97, 0x38, 0x8c, 0xd5, 0x57, 0x7f, 0xf5, 0x79, 0x83, 0x20, 0xdc, 0x22, 0x65}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcd\x6e\xea\x3a\x10\xc7\xf7\x79\x8a\x81\x45\x6f\x90\xce\x49\xf6\x88\x22\x55\xe8\x72\x57\x07\x55\x14\xdd\xfd\xe0\x4c\x12\x8b\x60\x47\xb6\x43\x5a\x55\xbc\xfb\x91\xf3\xed\x84\x96\x56\xaa\x57\xd4\x9d\xb1\x67\xfe\xf3\x9b\x71\xc2\x30\x84\x43\xca\x35\x18\x85\x42\x23\x33\x5c\x0a\xe0\x1a\xca\x14\x0d\xa0\x00\x64\x4c\x16\xc2\x40\x29\x8b\x2c\x02\x55\x08\xcf\x7a\x18\x09\x9a\x0c\x70\xa3\x29\x8b\xa1\xc8\xed\x46\x2c\x55\x89\x2a\x82\xdd\xf6\xa0\xed\xdf\x08\x11\x69\x9e\x08\x34\x14\x55\x4e\x8a\x18\xcf\x39\x09\xf3\x8f\x06\x26\xb3\x8c\xaa\xcb\x3c\x8f\x9f\x73\xa9\x0c\xec\xa4\xd8\x16\x22\xe1\xc7\x8c\x0e\xf2\x44\x02\x62\x25\xcf\x30\x1f\x6f\xcf\x5b\xfb\x3f\x64\x30\x42\x83\xff\x73\x2a\x75\x63\xec\xec\x75\x96\xff\xbe\xe2\x39\xcf\x68\xb7\x3d\x34\x66\xfd\x46\x67\xb3\xdb\x1e\xb6\x75\x02\x5c\x24\xed\xd5\xc3\xbd\xb9\xe7\x0d\x24\xf2\xbb\x64\x9e\xa2\x48\x91\xd6\x4b\x68\x7e\x2c\xe0\xdd\xf3\x00\x00\x72\x45\x39\x2a\xf2\xad\x06\xa4\x96\xf0\x54\x98\xf4\xa9\x56\xd3\xda\x40\xb3\xc2\x10\x36\x29\x8a\x84\x7a\x7d\x00\x45\x04\x8a\x4c\xa1\x04\xf0\x18\x4c\x4a\x5d\x19\x30\x53\x84\xd1\x1b\xa4\xa8\x6d\x75\xfa\x08\x49\x75\x27\xf2\x18\xea\x3b\x83\xa3\x54\x4a\x96\xab\x07\x27\x91\x60\xe8\xb4\xf6\x6d\xaa\x4b\x37\xfd\xe0\xc5\x48\x85\x09\x3d\xa3\x49\x17\x30\x7b\x04\xc1\xb3\x36\xab\x76\x65\x64\xda\x8a\x93\xda\x53\x0c\x8f\x3f\x79\xe9\x6c\x72\x97\xa0\x72\xdf\xea\xb3\xe9\xe0\x81\x47\x48\xc8\x34\xaa\x4e\x6a\xb2\x70\x4e\xb1\x2b\x48\xc8\x6c\x30\xc7\x23\xcf\xb8\x79\x5b\x3d\xbc\x8f\xe9\x0a\xfa\xb3\x9f\x8b\x63\xc6\xd9\x75\xed\xf7\xb4\x4c\xfe\x5b\x05\xeb\x0a\x13\x86\xf0\x07\x4f\x04\xba\x50\x54\x95\x6e\xec\x03\xac\x0b\xc0\x36\xda\x05\x33\x1e\xc1\x91\x62\xa9\x08\xce\x5c\x18\xcb\x9f\xf5\xdb\x6d\x0f\xce\xc1\x3c\x86\xd9\x6d\x15\x02\x96\x12\x3b\xf9\x43\xaa\xda\x95\xa3\xe0\xcc\x9f\xef\x07\xad\x77\x27\x1e\x21\x4d\x1d\xd3\x6c\xee\xea\x77\x9d\xe4\xf9\x52\xd7\xa5\x07\xd7\x31\x18\xd2\x11\xb0\x0a\xf1\x2e\x0c\x7f\x98\xc8\xf2\x83\xe2\xba\xd7\xd7\xfd\xe0\xdd\x88\x26\x0c\xe1\x3f\x32\xb0\x27\x46\xfc\x42\x0a\xfa\x02\xd7\x7d\x6c\xc5\x1c\xa3\xd1\x36\x94\x37\x64\x4c\x4d\x63\xd8\x60\xfe\x1d\xc6\x46\x7c\x4d\xca\xf1\x15\xe0\x1c\xa7\xb5\x3f\x39\xe3\x0e\x8e\x8e\xfd\xc2\x51\xe9\xe7\xb9\xb4\x4c\xde\x56\xad\x67\xb2\x65\xf0\x1b\xdc\x8d\xaa\xbb\x51\x84\x86\x00\x2b\xd8\x86\x83\x04\x14\x69\x59\x28\x46\x4e\x19\x3b\xf0\x60\xf5\x7b\x34\x63\x58\x75\xd2\x8e\xca\xe1\x29\x7d\x4d\x97\x1f\x20\xe0\xca\xa8\xf1\x42\xc0\x8d\x7d\xe3\x06\xa3\xb9\xb3\x68\xc6\xa0\xb5\xf2\x57\xbf\xbb\x60\x7e\x81\x91\x9f\x8d\x3c\xe7\x8a\x42\x64\x5c\x9c\x80\x5e\xb9\xae\x74\x1f\x4c\xbc\x4e\x35\x4e\xcd\xab\x77\xa3\xf6\xfd\x13\xe0\x00\x79\x7f\x94\x39\x30\x57\x25\x5c\x3d\x4c\xa7\xca\x5d\x88\x7f\x7d\x46\x6d\xff\xf3\xbe\x9b\xf3\xa0\x07\x7b\xd2\x32\xbb\x90\xea\xfd\xdc\x09\xb5\x9e\xcc\xc0\x46\x85\x5a\xcf\xaf\xa7\xef\xf2\xc7\x5a\xfe\xf2\x09\xb8\xb1\x54\x15\x04\x3d\x73\x65\x4a\x4d\x83\xf5\xdf\x38\xcd\xd7\xd3\x91\xc6\x90\xd8\xa8\x6e\xbd\x42\xed\x2c\xbb\x8e\xfa\xff\x4e\x02\xae\x7e\x06\x55\x42\xe6\x13\xe6\x3a\xeb\x3a\xf1\xab\x77\xf5\xfe\x06\x00\x00\xff\xff\x56\x6e\xb3\x11\x0f\x0a\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0xe3, 0x58, 0xae, 0x9, 0x18, 0xba, 0x7c, 0x55, 0x15, 0x1e, 0x2a, 0x5d, 0x2e, 0x4d, 0x88, 0xa8, 0x45, 0xd7, 0x4b, 0x51, 0x17, 0x10, 0xbb, 0xc4, 0x79, 0xf5, 0xfe, 0x88, 0xe0, 0x45, 0xa5}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc9\x6e\xdb\x3c\x10\xbe\xeb\x29\xbe\x5f\x87\x3f\x32\xd0\xd8\x97\xa2\x07\x23\x0b\x82\xa4\x01\x72\x49\x03\x37\x7d\x00\x9a\x1a\x49\x6c\x65\x8e\x40\x8e\xe2\x04\x41\xde\xbd\xa0\x16\xda\xb2\x9d\xea\x44\x93\xb3\x7d\xcb\x78\xb1\x58\xe0\xb9\x32\x1e\xe2\x94\xf5\x4a\x8b\x61\x0b\xe3\x51\xb0\xeb\xaf\x0a\x72\xce\xd8\x12\xca\xe2\xf1\xfe\x19\x85\xe3\x4d\x12\x92\xd8\x12\x94\xd6\xdc\x5a\x81\x30\x94\x65\xa9\xc8\xa1\xf5\x21\x58\x2a\x82\x23\x6d\x1a\x43\x56\xce\x3c\x56\xa4\xc9\xbc\x90\x83\x23\xcf\xad\xd3\xd4\x95\xd8\x56\x46\x57\xa1\xd9\x86\x1d\xa1\x36\x1b\x23\x94\x43\x2a\x65\xa1\x70\xcb\x75\x4d\xdd\x38\x4f\xed\xba\x36\x1a\xab\x31\x35\x31\x9b\x86\x9d\xe0\x91\xed\x7d\x6b\x4b\xb3\xae\xe9\x99\xff\x90\xed\x66\x43\x7a\x78\x9d\x8e\xf1\xdf\x5f\xd5\xa6\xa9\x69\x44\x81\x74\x77\x91\x26\xc9\x1e\xfe\x2c\x8e\xbe\xc4\x4d\x9e\x3b\xf2\xfe\x0b\xb6\x46\xaa\xdc\xa9\xed\xc3\xdd\x12\xbf\x1e\xac\x7c\xfb\x3a\xc3\x7b\x92\x00\x40\xc0\xb2\xa2\x82\x1c\x59\x4d\x81\x8c\x00\x7f\x8c\x27\x77\xe6\xa1\x23\x98\x2e\xa1\x26\x89\xef\x2b\x2a\x96\xf8\x7f\x37\xca\x7c\x07\xfc\x54\x75\x2e\xba\xea\x91\x50\x61\xe4\xd4\xb0\x37\xd2\xdd\x07\x70\xc2\xb1\xc9\xf0\xd4\xf7\x78\x3f\x64\x66\x3e\x56\xf9\xe8\x3b\x35\x8e\x1a\xe5\x28\xf3\xa6\xb4\xe4\x96\xb8\x69\xa5\xba\xe9\x25\x0e\x58\x31\x7c\x8b\x05\xd6\xec\x1c\x6f\xa1\xe0\x0e\x61\xf7\xb9\x67\xbe\x9b\xe4\x00\x76\xf8\x3c\xd5\xc5\x7c\x0f\x3b\x2e\x87\x94\x18\x11\xbe\x79\xdf\xe0\xe2\x34\x2f\x57\x59\xd0\x6f\x89\x93\x8f\x3f\x85\x9d\x2a\xe9\x49\x49\x35\x9b\xd4\xbc\xbe\x46\xa3\xac\xd1\x59\x3a\x60\x42\xce\xe4\x61\x59\xe0\x25\x18\x50\x59\xf0\xfa\x37\x69\x81\xea\xc9\xf4\x0d\x69\x53\x18\xca\xd1\x28\xa9\xd2\x59\xb2\x4f\x41\x49\x32\xb5\xb9\x47\xd3\x1b\x75\xdc\x8a\xbe\x58\xcc\x09\x7a\xc4\x60\x5c\x86\x02\xc3\x20\x3b\xbf\x4d\x5b\x44\x96\x87\xc2\x47\x64\x9f\x5a\xb1\x29\xd3\x3b\x03\xe0\x72\x17\x3e\xe5\xba\x24\xb9\x55\x8d\x5a\x9b\xda\xc8\x5b\x76\x92\xd4\x7e\x05\x8f\x39\x8d\x3a\xfd\xc3\x5b\x57\xd9\x67\x3a\xdc\x72\x5b\xe7\x9d\x00\x9f\xfb\xe9\x14\xc4\xb4\x2f\x38\xb8\x96\x5e\x49\xb7\x42\xe3\x32\x0e\xdc\x8d\x16\x8b\x5b\xd1\xad\x7c\xf8\xc1\x5b\x7b\x6a\x27\x47\x89\x6c\x21\xb8\x38\x3f\xf2\x69\x3c\x67\xfb\x7f\x04\xbb\xf3\x54\xb9\xbb\x83\x95\x34\x76\x0a\xe6\x33\x91\xc6\x63\x26\x81\xc3\x25\x2e\xce\x6d\x21\x13\xb4\x0d\x7b\xd9\xdb\xc5\xff\x8e\xe6\x2c\x49\x1e\xee\x7c\x36\x9b\x6b\xb6\xa2\x8c\xf5\x7b\x03\xcf\x96\x48\x7f\x38\x53\x1a\xab\xea\x9e\x07\xf8\x2a\x8a\x50\xa9\x17\x8a\x13\x2b\xfb\x16\xfe\x95\xd3\xa1\xf7\x47\xf2\x37\x00\x00\xff\xff\xf5\xdb\x8a\x90\x29\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x28, 0x3c, 0x1, 0x82, 0xf1, 0x2d, 0x15, 0xf4, 0x59, 0x6c, 0x88, 0xad, 0xc8, 0x31, 0xc7, 0x51, 0xaf, 0xbd, 0xa7, 0x9a, 0xf5, 0x54, 0x1, 0x75, 0xa, 0x52, 0x28, 0xc8, 0xec, 0x76, 0xba}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfb\x29\x06\x1d\x8a\x0c\x46\xba\x87\x12\x08\xa1\xbe\xd5\x84\xd4\xed\x7d\xbc\x1a\x49\x8b\xd7\xbb\x62\x34\x6b\x37\x18\x7d\xf7\xa2\x3f\xd1\x3f\x1c\xd2\x43\x74\x12\xc3\xef\x31\xf3\xde\xcc\xa6\x69\x0a\x87\xd2\xd4\x20\x8c\xae\x46\x2d\xc6\x3b\x30\x35\x5c\x4b\x14\x40\x07\xa8\xb5\x0f\x4e\xe0\xea\x83\xcd\x80\x83\x53\xad\x42\x3c\x58\xe3\x4e\x80\xa0\xbd\xb5\xd4\xab\xc4\x83\x91\x1a\xaa\x70\xb4\x46\x43\x2d\x9e\xb1\xa0\x0e\xc7\x5c\x88\xa1\xc4\x8b\x71\x05\x68\xef\x72\x53\x04\xa6\xac\xc3\xf7\xbb\xc3\xce\xf3\x15\x39\x23\x56\xca\x9c\x2b\xcf\x02\x7b\xef\x76\xc1\x15\xe6\x68\xe9\xe0\x4f\xe4\x20\x67\x7f\x86\x68\x5d\x8e\xde\xf9\x9f\x24\x98\xa1\xe0\x1f\x43\xd7\x7a\x80\x17\xb5\x91\xfc\xf1\x17\xcf\x95\xa5\xfd\xee\x30\x60\x53\x61\x64\xa6\x91\xda\x79\x87\xd6\xf3\x5a\xa4\xd4\x3c\xae\x9b\x52\x00\x00\x15\x53\x85\x4c\x71\x6d\x0a\x47\xfc\x00\x4f\x41\xca\xa7\x3e\xbe\x0d\xdc\x3a\xa4\xfd\x4c\x0e\x3d\x91\x14\x24\xcf\x58\xe1\xd1\x58\x23\x6f\xf1\x34\x48\xf2\x3c\x86\xfa\xd2\x85\xf9\x82\x52\x6e\x12\x5d\x92\x3e\x7d\xff\x76\x9b\x81\xd3\xef\x5a\xd2\x3c\xc6\xf3\xa6\xed\x67\x7d\x11\x47\x13\x07\x68\x99\x30\x7b\x9b\x2f\x24\xf7\x0c\x53\xcb\x68\xb3\xd0\x33\x49\x60\x37\x96\x1a\xf5\x75\x96\xd6\x8b\x4d\x5e\x49\x93\xb9\x10\x7f\x64\xe3\xb7\x6b\xef\xaf\x5d\xcf\xfc\x7e\xfa\x5d\x7d\x68\x60\x98\x31\x74\xda\x4f\x87\xbb\x67\x34\x4d\x41\x33\xa1\x10\xe0\xfb\x9d\xeb\xd1\x6e\x97\x9e\x94\x34\x7b\x13\x6a\xd5\xba\x6d\x7c\xcf\xee\x7a\x80\x2d\xfc\xd7\x92\xb7\xcb\xc3\x4f\x5e\xa9\xf6\xf6\x42\x3c\x71\xcd\x63\xbc\x88\xe0\x13\xd3\xdb\x05\x2c\xc8\x05\xc9\xc3\x7d\xd1\xaf\xfe\x7d\xb7\xaa\x51\xd4\x67\xd6\xa8\x46\xfd\x0b\x00\x00\xff\xff\xb7\x06\xc9\x5e\x57\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x57, 0x2e, 0x60, 0x85, 0x4, 0x8d, 0x51, 0x88, 0xaa, 0x42, 0xdf, 0x1c, 0x8a, 0x67, 0x7c, 0x3c, 0x71, 0x30, 0x5a, 0x2f, 0xcf, 0x4e, 0xe3, 0xb1, 0xb7, 0x63, 0x85, 0x19, 0x85, 0xe2, 0x8a}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x8f\xd3\x3e\x10\xc5\xef\xf9\x14\xef\x9f\xc3\xfe\x93\x03\xe9\x05\x71\x88\x16\x56\x40\x59\xa9\x97\x15\x5a\x0a\x77\xd7\x9e\x34\x06\xd7\x13\xd9\x13\xb2\x08\xed\x77\x47\x4e\xd2\x36\x5d\x55\xeb\x53\x34\x99\x79\xef\xe7\xe7\x59\xad\x56\xd8\xb6\x36\x42\x82\xf2\x51\x69\xb1\xec\x31\x58\x69\x4d\x50\x43\x84\xf2\x78\xb8\xdf\xa2\x09\x7c\x80\xb4\x84\x68\xf7\x9e\x42\x84\x66\xe7\x68\x6a\x56\xde\xc0\x50\x94\xc0\x7f\x22\xac\x64\x99\x3d\x74\x1c\x04\x0f\xec\xef\x7b\xbf\xb7\x3b\x47\x5b\xfe\x45\x7e\x12\xc9\x5f\x96\xf3\x63\xff\x97\x27\x75\xe8\x1c\x9d\xec\xf2\x73\x21\xcf\xb2\x05\x5e\x61\x4d\x8d\xef\x1b\x2f\xef\xde\x96\xf8\x9b\x65\x00\x90\xae\xf1\x48\x0d\x05\xf2\x9a\x20\xad\x12\x0c\xd6\x39\xec\x08\x7d\x24\x83\x86\xc3\xc8\xcf\x83\xa7\xf0\xff\x92\x7f\x1c\x77\x24\x8b\xd2\x23\x35\x35\x6e\xce\xf6\xd5\xe7\x73\xf7\xd8\xde\x05\xea\x54\xa0\x62\x4a\xa3\x86\xea\xa5\x2d\x3e\x71\x08\x3c\xfc\x50\xae\xa7\x12\x37\x1f\xb5\xe6\xde\x4b\x02\xc4\x7c\x56\x2b\xec\xc6\x1e\x28\x84\x33\x2b\xbf\x06\x96\x4e\x24\xd7\x54\x17\x74\x78\x3f\x3f\x44\x15\x85\x83\xda\x53\x35\x09\xdf\x5e\x87\xfe\x50\xa4\x40\x6b\x5c\xfd\xf9\x6d\x52\xf8\xaa\xa4\x2d\x4f\x96\xe9\xdc\xdd\xa1\x53\xde\xea\x22\x9f\xef\x02\xc3\x14\xe1\x59\x90\x5c\x29\xed\x06\xef\x7e\x92\x16\x28\x99\x96\xa3\x23\x6d\x1b\x4b\x06\x9d\x92\x36\x9f\xe4\x9e\xa7\xc8\xe8\x89\x74\x2f\x74\x19\xc7\x71\xcf\xc6\xe9\x8b\x3d\x7b\x25\x8e\xf4\x56\xbe\x11\xdc\xbe\xb9\x92\x4c\x75\x94\x2c\x8e\x1f\x9b\x75\x0d\x6b\xca\xec\x34\x3f\xef\x6a\xd2\x58\x02\x76\x1c\x65\x41\xf7\xdf\x15\xed\x3d\xc9\x66\x1d\x8b\xb2\xd2\xec\x45\x59\x1f\x0b\x6b\xca\x1a\xf9\x76\xa6\x4f\x96\x2f\x82\xd8\xac\x11\x5b\xee\x9d\x41\xab\x7e\x13\x76\x44\x1e\x86\x1c\x09\x99\x7c\x76\x7f\xce\xfe\x05\x00\x00\xff\xff\x72\xbf\x82\x1d\x84\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd3, 0xf, 0x5, 0x98, 0xac, 0x88, 0x6b, 0xf8, 0x1c, 0x1c, 0xca, 0x78, 0xdc, 0x44, 0x8d, 0x44, 0x8b, 0x54, 0x2e, 0xc3, 0x6d, 0xb9, 0x56, 0xd8, 0x4a, 0xce, 0xab, 0xe5, 0x32, 0xd6, 0xb6, 0x92}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x6f\xdb\xb8\x13\xbd\xeb\x53\x4c\x7d\x70\x65\xb4\x90\x7f\x05\x8a\x1e\x84\x3a\x45\x93\xfc\x02\xe4\xd0\xa0\x48\xdd\x5e\x82\x1c\x28\x6a\x6c\x71\x43\x93\x5a\x72\xe4\xc4\x08\xf2\xdd\x17\xfc\x23\x59\x74\xb4\xc1\xf2\x90\xc8\xe4\x9b\x19\xf2\xcd\x9b\x21\x97\xcb\x25\xac\x1b\x61\xc1\x72\x23\x5a\x82\xce\xa2\x05\x6a\x10\x6e\xae\xd6\x3f\x84\x22\x34\x60\xd0\xea\xce\x70\x04\xd2\xb0\x13\x8a\x80\x81\xc2\x47\x07\xc8\x9c\xf5\x35\xc1\xae\xb3\x04\x15\x82\xe9\x14\x3c\x0a\x6a\xbc\x03\xc6\xb9\xee\x14\x01\x35\x8c\xa0\x61\xc1\xeb\x2e\x75\xe9\x1d\x58\xd2\x06\x6b\x10\x0a\x96\xee\x93\x6d\x71\x39\x04\xcf\x32\xb1\x6b\xb5\x21\xb8\xd1\xea\xaa\x53\x5b\x51\x49\x5c\xeb\x07\x54\xb0\x31\x7a\x07\xb3\xd3\xe9\x59\x8f\xff\xff\x13\xdb\xb5\x12\x6f\xae\xd6\x11\x79\x9c\x18\x30\x3f\x90\x58\xcd\x88\xfd\x11\xf8\x68\x23\x2c\x99\x1b\x90\x53\xa1\x4f\xe2\x66\x64\x98\xb2\x8c\x93\xd0\x2a\xcf\x00\x00\x0c\x72\xd1\x0a\x54\x54\xc2\xf7\xba\x36\x68\xed\x47\x3f\xaf\xd8\x0e\x4b\xf8\x45\x46\xa8\x6d\x98\xa9\x31\xb0\x2f\xb4\x4a\x17\xa8\xe9\x76\x95\x62\x42\xa6\xd3\xbc\x23\x5b\xc2\xdd\xef\x2b\xf1\xf4\xe5\xf3\x7d\x98\x33\xfa\xc0\x24\x1d\x2e\x8f\xae\x1c\x24\x58\xa5\x90\x73\x54\xb8\x11\x5c\x30\x23\xd0\x61\xe2\xe6\xee\xb3\x05\x3c\x67\x1e\xe8\xb2\x22\x35\x67\x12\xf6\xcc\x08\x56\x49\x84\x8d\x36\x3e\x51\x42\x6d\xd3\x44\x6e\xd0\xa0\xe2\xe8\xed\x24\x52\x5c\x28\x61\x7e\x24\xbc\x18\xa5\xb3\x77\x7f\xdb\x1b\x3a\x55\x39\x87\x06\x39\x8a\x3d\x9a\xf7\x16\xb8\x96\x12\x3d\x91\x83\xd7\x81\xcb\x8b\x61\xed\x16\x37\x25\xcc\x9f\x4f\x15\x50\x1c\x11\x3f\xbb\x4a\x0a\xfe\x72\x0c\xfa\xd3\xe0\x5e\xe8\xce\x3a\xed\xc2\xf5\x25\x54\xb8\xd1\x06\x7d\xf8\x51\xf6\x00\x9f\x90\x77\x84\x36\x39\x93\x50\xdb\xeb\xcb\x73\x6f\x50\xc2\xef\x6b\x45\x5f\x3e\x07\xc7\xad\xc1\x96\x19\xcc\xad\xd8\x2a\x77\x70\xd6\x51\x93\x9f\x6b\x63\xf4\xe3\x1f\x26\x3b\x5c\xc0\xfc\x7b\x28\x05\xc7\x2f\xc4\x61\x51\x6e\x8a\x13\xbf\xb0\x1a\xc9\xb6\x20\x4d\x4c\xfe\xea\xda\x56\x1e\xb2\xc1\x6c\xb9\x84\xca\xbb\x06\x76\xe4\xbe\xa7\x70\xa2\x64\x85\x82\x58\x53\xaf\x23\xa3\x81\x15\x84\x5d\x17\x11\x54\x04\xe7\x5f\x27\x93\x77\x96\x3b\xe1\x97\xe3\x3d\x86\x85\x5f\xc1\xf8\x27\xa3\x66\x31\x84\x71\xe3\xdb\x37\x68\x99\x12\x3c\x9f\x45\x06\xa0\xd6\x68\x41\x69\x0a\x45\x0f\x4c\x81\xae\xfe\x42\x4e\xc0\xc8\x1f\xc1\xb6\xc8\xc5\x46\x60\x0d\x2d\xa3\x66\xb6\x48\x4e\x1e\x48\xed\xd5\x12\xf4\xf0\xde\x42\xeb\xd3\xec\x73\x7a\x54\xce\x89\x32\x87\x83\x4f\x0b\x09\x56\xb0\x45\x8a\x9b\xcc\x07\x4c\x7a\x9a\x82\xb3\x96\x55\x42\x0a\x12\x68\x07\xa6\xfe\x83\x00\xcf\xf2\x11\x65\xa7\xab\x6f\xb1\x76\xa1\x3b\x59\x7b\xba\xb6\xa1\x06\x7c\x85\x4c\x26\x1e\x8e\x7e\x67\xc1\xdd\xcb\x20\xcf\x91\xec\x5c\xe7\x28\x24\xaa\x2d\x35\xb0\x5a\x4d\x35\x8d\x7e\x75\x3e\xff\x17\x70\xd2\x3e\xe2\x72\x09\xb3\xef\xc6\xb0\x03\x44\xb4\x6d\xfc\xce\x2b\x04\xfc\xbb\x63\xd2\x77\x8f\x68\x0e\x06\x25\x23\xac\xa1\x46\x62\x42\xda\xd9\x78\xb3\xb1\xf2\xfa\x3e\x14\xf3\x7e\x61\x90\x51\x28\xd3\xde\x49\x34\x1e\x50\x7b\x66\x20\x28\x6c\x05\xff\x4b\x66\x83\x45\xe8\x74\x49\x73\x2f\x6e\x83\xaf\x7b\x58\xc1\xdd\xfd\x60\xf3\xd8\x08\x89\x6f\x9d\x15\xce\x62\xa4\xe7\x24\x6b\xae\x4f\x54\x03\xfc\x00\xd3\x7c\xdd\x79\xd3\xfb\xb7\x2c\x2f\x7a\x95\x1d\x52\x55\x8e\x20\x6f\xe9\x72\x8b\xf4\x75\xfe\x9c\x2a\xf2\x36\x2a\xe7\xe5\x2c\x4f\x29\xd8\x22\x45\x16\x7a\xc8\x51\x94\xf9\x62\x54\x7d\x31\x13\x3f\xd8\x03\x82\xed\x4c\x9a\x0c\x7e\xdc\xb1\xb0\xb0\x67\x52\xd4\x7d\x6b\x8d\x1d\xae\x57\x69\xe2\x4f\x6c\xe0\xdd\xe4\xb9\x0b\xde\x20\x7f\xc8\x17\xf0\xdc\x17\xc2\xf9\x88\xd8\x34\x9a\x2b\x0e\x1f\xf1\xdd\x6c\xd1\xab\xa8\x1f\x43\xea\x0b\xd6\xb6\xa8\xea\x3c\x59\x75\x63\x52\x10\xaf\x61\x10\x6e\x73\x4f\x50\x39\x9d\xab\x8f\x93\x46\xbc\xa3\xd2\x97\x51\xcc\xfb\x34\x2a\xb9\xfe\x27\x4a\x72\x4a\x34\x6e\xa4\x32\x48\x7f\xf5\xc5\x10\xfe\x7f\x80\x4f\xc3\xea\x4b\x96\x25\xd5\xe5\x7a\xf8\xd0\x45\x98\x72\x85\xd9\x6a\x2b\x08\x04\x8d\xee\xe6\xa1\xdb\x9e\x5c\xce\x90\xde\x28\xfe\xdf\xcd\xd5\x3a\xe5\x70\xf4\x12\x7a\xa3\x09\xa7\xe4\x84\x57\x92\xfb\x9b\xce\x27\x64\x8d\x7e\xa4\xa8\xd1\xc3\x69\xf8\xfc\x38\x2d\x8e\xf2\xf8\x99\xa5\x5c\xf6\x1d\x54\x5b\x3a\xbd\xb9\xa7\x4f\xe0\xea\xe9\xfa\xd2\xe6\x8b\x82\x6b\x45\x4c\x28\x9b\x4f\xdd\xf3\x8b\x12\x66\xeb\x06\x41\xe1\x13\xf5\x4f\x91\xd8\x31\x1b\xb6\x47\xa8\x10\x55\x78\x47\xd5\x31\x21\xd2\x29\x0f\xeb\xd9\xb0\x89\xe9\x77\x82\xeb\xd2\x93\x0f\x8b\x0f\xf0\x29\xc6\xf4\x68\xb0\x01\xfe\x2a\xa8\x50\xdc\x20\xb3\x58\x43\x75\x80\x4f\x7d\x6b\x7e\xc9\xfe\x09\x00\x00\xff\xff\x6a\xa2\x23\x8d\x26\x0c\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0xa8, 0xaf, 0x9e, 0x9e, 0x61, 0x2, 0x51, 0xaf, 0xcb, 0x78, 0x40, 0x6c, 0xd, 0x3a, 0x97, 0xb3, 0x59, 0x30, 0xed, 0xa7, 0xd4, 0x75, 0x14, 0xee, 0xd3, 0xf3, 0x2a, 0xbc, 0xdb, 0xd0, 0x5c}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcd\x6e\xe2\x3c\x14\xdd\xfb\x29\xce\xc7\x02\x05\x89\x92\x7d\x45\x2b\x7d\x83\xca\x6e\x50\xd5\x41\xdd\x5f\xc2\x0d\xb1\xc6\xd8\x91\x7d\x4d\x06\x21\xde\x7d\x94\x50\xf2\x37\x1d\x75\xb2\x8a\x8e\xcf\xbd\xe7\xc7\x4e\xd3\x14\xdb\x42\x07\x88\x27\x1b\x28\x13\xed\x2c\x74\x40\x55\x90\x80\x2c\x28\xcb\x5c\xb4\x82\xca\x45\xb3\x87\x8f\x56\xd5\x13\xe2\x10\x58\xa0\x25\xb0\xc9\x11\xcb\x1a\xf0\x9c\xb1\x3e\x31\x36\xeb\x6d\x50\x4a\x1f\x4b\xe7\x05\x1b\x67\xd7\xd1\x1e\xf4\xce\xf0\xd6\xfd\x64\x8b\xdc\xbb\x23\x26\x63\x78\x72\xe7\xbf\xfc\xa2\x63\x69\x78\xb3\xde\x7e\x30\x3b\xa0\xe5\x7c\x67\xa1\x3d\x09\xbd\x6b\xae\xc2\x07\x6d\x80\x4d\x94\xea\xa7\xb9\x28\x05\x00\xa5\xe7\x92\x3c\x27\x41\x1f\x2c\xfb\x47\x50\x94\x22\xf9\xe6\xbc\x77\xd5\x3b\x99\xc8\x33\x4c\xff\xbf\x85\x9d\xe1\xd2\x4c\xd4\x5f\x9a\xe2\x8d\x25\x7a\x0b\x26\x6f\xce\xd0\x39\xa4\xe0\xb6\x16\x32\x9e\x69\x7f\x46\x41\x01\x84\xcc\x19\xc3\x8d\x68\x3b\xaf\x73\xdc\x04\x17\x41\x9c\xa7\x03\x2f\x76\x8d\xe4\x72\xda\x25\x5b\xac\xda\xb9\xe7\xa4\xce\xf3\x88\x4f\x0f\x7f\xdc\x36\xbc\x92\x14\x33\xfc\xf7\x04\xab\x4d\xcf\x69\xfd\xf9\xc6\x6a\x0b\x5d\x55\x3f\xc7\xca\x33\x09\x83\x60\xb9\x02\x1f\x4b\x39\x7f\x66\xd8\xb0\xf4\x60\x2c\x1f\xfa\x5e\xb2\x66\xc5\x4b\x3d\xdb\xd9\x4a\x66\x03\x99\x40\x27\x86\x96\xfa\x49\xf4\x9a\x6a\x19\xa3\x36\x6a\x76\xb2\x7c\xe8\x14\xe7\x10\xf7\x0f\xf9\x07\x92\xd9\x3d\x59\x19\x77\x46\x67\xc8\xa8\xa4\x9d\x36\x5a\xce\xc8\x9d\x6f\x6c\x7c\x99\x74\x45\x25\x9e\xee\xee\xda\x05\x9a\x43\x6b\x55\x87\x10\x79\x39\xbd\x8c\x1f\x6f\xcf\xe1\x6b\xa3\x3f\xef\xdb\xef\x7e\xff\xa4\x0d\x5e\xed\xe2\x8d\x83\x33\x27\xf6\x1d\xef\xfa\x9c\x0c\xae\xf7\xab\x56\x5a\xf2\x6c\x5c\xf7\x20\x50\xd3\x52\x28\x86\xbb\x07\x4d\x0c\x4e\x48\xfe\x72\x1f\xb7\x18\xb5\xf0\x7c\xa4\x7c\x55\x57\xf5\x3b\x00\x00\xff\xff\x84\x77\x0d\xad\x5a\x04\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x11, 0xb4, 0xc9, 0x50, 0x4d, 0xc4, 0xfb, 0xba, 0x27, 0x74, 0x5f, 0x59, 0x5f, 0x11, 0x10, 0x12, 0xb5, 0x59, 0xe9, 0xdb, 0x6c, 0xb3, 0xf6, 0xc0, 0xf7, 0xbe, 0x3a, 0x16, 0x1e, 0xe2, 0xb1}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x26\x3e\x04\x12\xe0\xc8\x97\x0f\xdf\xc1\xb0\x13\x04\x6e\x0c\xf4\x50\x23\x68\xdd\xde\xd7\xf2\xda\x22\x22\x93\x02\x49\x59\x0d\x82\xbc\x7b\x41\x51\x7f\x74\x8c\xb6\x28\x0f\x06\xb1\x9a\xdd\xd9\x1d\xce\x7a\x36\x9b\x61\x9b\x0b\x03\xab\x49\x1a\xca\xac\x50\x12\xc2\xa0\xce\xc9\x82\x24\x28\xcb\x54\x25\x2d\x6a\x55\x15\x7b\xe8\x4a\x46\x2e\xc3\x2a\x18\xb6\x10\xd6\x70\x71\x40\x55\xba\x80\xe6\x8c\xc5\x99\xb1\x59\x6f\x4d\xea\x6b\x1e\x2a\xd9\x14\x6c\x72\x2a\xc3\x06\x67\xc1\xb5\x71\xe8\x17\xa9\x6a\xd4\x39\x6b\xee\x8a\xb9\x2a\x39\x23\x53\x45\xc1\x43\x96\x90\x30\x56\x69\x3a\x32\x48\xee\x1d\x36\xd3\x4c\x96\x1b\x2c\x9f\x4a\xfb\x3a\xca\x48\xa3\x48\x9c\x4a\xa5\x2d\x36\x4a\xae\x2b\x79\x14\xbb\x82\xb7\xea\x85\x25\x0e\x5a\x9d\x30\xb9\x0c\x4f\x3a\xfc\x17\xb6\xb4\x27\x4b\x3f\x9a\xfe\x3c\x38\x88\xf5\xc8\xa7\x9f\x74\x2a\x0b\xde\xac\xb7\x2d\x6c\x08\x4c\xa2\x68\xa4\x62\x4c\xfb\xbd\x66\x63\xe6\x78\xf4\x97\x29\xca\x6a\x57\x88\xec\x99\x6c\x3e\xc7\x73\x7f\x9f\x42\xec\xe7\xf8\xfe\x59\xda\xff\xff\x4b\xf0\x16\x45\x00\x50\x6a\x2e\x49\x73\x6c\xc4\x51\xb2\x9e\x83\x2a\x9b\xc7\x2b\x2a\x69\x27\x0a\x61\x05\x9b\x29\xbe\x79\x5d\x12\xdc\x3e\xfa\x47\x72\xc9\x68\x4f\xc1\x76\x24\x0c\x96\x38\xb2\x6d\x61\x5d\x63\x49\x0f\x76\x27\xcd\x46\xc5\xd3\x9d\xd2\x5a\xd5\x8b\xdb\xb7\x4b\xc5\xd2\x55\x5f\xd4\x4f\x30\x0d\xb5\x4b\xbf\xb2\x51\xc5\x99\xf5\x80\x7b\xbf\x8f\x87\xc1\x43\xd2\x87\x07\x94\x24\x45\x16\x4f\x56\x8d\xbf\xa4\xb2\xf0\xd4\x20\x68\x3e\xb0\x66\x99\x35\x0e\x09\xad\x31\x49\xa2\x60\x52\xdd\x92\x62\x39\x76\x83\xaf\xe4\xda\xea\x9a\x8a\x9d\xd2\x62\x9f\xdc\x04\xd9\xf2\x60\x87\x6e\x1d\x1c\xcb\xbe\x62\xda\x5e\x5c\x38\xde\xbe\x96\xbc\x08\xc7\xdd\xac\xb7\x43\xee\x27\xb2\x74\x1f\x27\xc9\x0d\xc8\xdc\xe0\x0f\xc0\x61\x82\xd9\x0c\x2b\x6f\x6a\x82\xe4\xfa\x83\xad\x4d\xd0\x6d\xf3\x75\x28\x85\xc5\xdd\xc7\x01\x52\xbf\x24\x4f\x21\x34\x4e\x02\x4e\x43\x67\x86\xb0\x9d\xba\xed\xa6\xf7\x08\xef\xbc\xb4\xdd\xbe\xd4\xa1\xe3\xc5\xdd\x05\xfb\x14\x56\xcd\xaf\xf0\xb7\x59\xfe\xc5\xc7\xa4\x59\x37\xa8\xb7\x04\x7a\xd7\xbd\xe2\xa0\xf4\xe5\x3f\xc0\x75\x37\xaf\xa8\xc4\xb2\xeb\x2f\xb0\x6d\x4b\x1b\x1a\x5b\x18\x53\xf1\xdf\x59\x79\xd8\xe5\x74\xb8\xfe\x93\xe3\x83\x16\xdc\xf9\xad\x46\x01\x7a\x24\xd8\xb5\x19\x1b\xe1\x4c\x1e\x32\x04\xe2\x04\x5f\xc8\x5e\x7b\x9f\x61\x21\xa7\xd1\xc0\xeb\x7e\xdf\xa3\xf7\xe8\x57\x00\x00\x00\xff\xff\x73\x82\xa2\xac\x15\x06\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3d, 0x20, 0x53, 0x1, 0x1c, 0xd4, 0x44, 0x1b, 0x44, 0x61, 0xe0, 0x5d, 0xcf, 0x6b, 0xb7, 0x25, 0xa6, 0x98, 0x98, 0xce, 0xf1, 0x70, 0x92, 0x13, 0xb6, 0xd9, 0xec, 0x58, 0x1c, 0x38, 0xbf, 0xbd}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x54\x4d\x8f\xdb\x38\x0c\xbd\xfb\x57\xb0\x39\x4c\x6d\x20\x70\xee\x83\x4e\x81\x4e\x17\x03\x2c\xb0\xc5\x16\xd3\xee\xec\x75\x18\x99\xb6\x89\x28\x92\x21\xd1\x49\x8d\x20\xff\x7d\x21\xf9\x53\x8b\xe6\x16\x89\x7c\x7c\x7c\xef\xc9\x87\xc3\x01\x7e\xb6\xec\x41\x1c\x1a\x8f\x4a\xd8\x1a\x60\x0f\x08\x42\xe7\x4e\xa3\x10\xd4\xd6\x85\xbf\xeb\x7d\x16\x9a\xc4\x82\x72\x14\xee\x11\x0c\x5d\x41\xb3\x39\x01\x1b\x90\x96\xd8\x01\x2a\x65\x7b\x23\xa1\xea\x48\xd0\x7b\xaa\x22\x8c\x23\x45\x7c\x61\xd3\x80\xb3\x03\x6a\x61\xf2\xd9\x6f\x19\x28\x34\x49\x23\x9a\x01\xea\xde\x34\x7c\xd4\x04\x62\x4f\x64\xf6\x70\x6d\x59\xb5\x81\xab\xef\x48\x71\xcd\x54\xc1\x71\x08\xf3\xe1\xfd\x82\xbd\x96\xef\x28\xed\x3b\xa0\x6b\xfa\x33\x19\x09\x73\xe2\xac\x3f\xeb\x58\x33\x33\xbc\xa2\x11\x1f\x78\x8e\xdc\x68\x65\x16\xb6\x79\xf9\xeb\xef\x7f\xf7\xa1\x7e\xf8\xa8\x75\xa0\x03\xef\x07\x2f\xd6\x61\x43\x87\x5a\xdb\xeb\xcf\x40\xe5\x2d\x4c\x7b\xdf\x80\x0f\x11\x75\x0b\xca\x12\xd0\xfe\xf9\xf1\xc7\xd7\xfd\x54\x60\x7b\x5d\x45\xc0\x17\x46\x89\x30\x65\xc4\xf9\x31\xa2\x07\xf2\x11\x11\x4d\x05\xde\x82\x35\xe5\xa4\x14\x41\x87\xd2\xae\xd2\x84\x65\xba\xfe\xa8\x59\x4d\x1e\xf8\xc9\x91\x58\x26\x2d\xca\x64\x0b\xd4\xbd\xf4\x8e\xf6\xa1\x82\x7e\x75\xa4\x84\xaa\x0d\xc7\x65\x5a\x43\x86\x1c\xab\x54\x66\x15\xf9\x1e\x63\x1a\xae\xe8\xaa\xb1\x35\x0a\xd9\x75\xce\x76\x8e\x43\x14\xa2\xee\x59\xc6\xe7\xce\x3a\x81\x97\xc9\xb0\xb8\x1d\xd4\xce\x9e\x61\x97\x9c\xed\xe6\xca\x6f\x24\x58\xa1\xe0\x1b\xd3\xd5\x4f\x95\xc9\xd9\x2e\xcb\x36\xf1\xc8\x17\x7f\x1f\x61\xa3\x57\x01\xb7\x2c\x03\x00\xe8\x1c\x75\xe8\x28\xf7\xdc\x18\x72\x8f\x80\xbd\xb4\xf9\xb3\x75\xce\x5e\xdf\x50\xf7\x54\xc0\xc3\x97\xd1\xfe\xa5\x25\xfc\x0e\x07\x78\x25\xe9\x9d\x01\x42\xa7\x07\xe0\x34\x29\x95\x25\x6f\x3e\x0a\xb4\x78\x09\xa1\x4f\xb7\x8b\xde\x2d\x48\x5c\xc3\x38\xbb\x9c\xc2\x52\x1e\xe3\xf4\x4f\x0f\x49\xd7\xe8\xf8\xe7\x3c\x2c\xfc\x08\xcb\x52\x05\x3c\x3d\x81\x61\x0d\xb7\x05\x30\x6e\x85\x86\x55\xbe\xfb\x32\x16\x2e\xde\xaf\xe9\x4f\x1f\xc8\xe8\x7f\x20\x0d\xc6\x0a\xd0\x2f\xf6\xb2\x2b\x16\xc4\x7b\xb2\xf7\xd7\xf9\x29\x4f\x49\x52\xd8\xe1\x91\x35\xcb\x30\xdb\x1c\xa9\x8e\x71\xb2\x46\x0f\x21\x41\xd6\x93\xdf\x82\x84\xb2\x8a\x3a\xeb\x59\x02\x97\xf1\x25\x4b\xeb\x6c\xdf\xb4\xf1\xf2\x75\x4c\x9a\x03\x36\x42\xae\x46\x45\x4b\xbb\x26\xd9\x0e\x7d\x9a\xf5\x5b\xce\x98\xfc\x2c\x66\xa2\x4a\xc9\xde\xf7\xf4\xe9\xe1\x96\x2a\x3b\x8f\xda\xa7\x3e\x95\xcf\xa8\xd1\x28\xba\x7f\x5e\x33\x54\xac\x4a\xfc\x6e\x68\x54\xc4\xb7\x79\x32\x75\xa5\xba\x4f\xce\x51\x1e\xd3\x30\x97\x0d\xc9\x6b\xfc\xa2\x0c\x33\xa5\xef\x51\xe2\x30\x39\x2f\xd6\xee\x22\xf1\xe3\x1b\x9e\x08\x7c\xef\x28\xea\xb6\x11\x86\x3d\x5c\x50\x73\xb5\x8d\xda\x87\xf5\xbe\x54\x2d\xa9\x53\x5e\xc0\x6d\x8e\xcb\x33\x19\xaa\x59\x31\xba\xe1\x7f\x38\x21\x15\x11\xeb\xc3\xae\x80\x7b\x36\x86\xe2\x9e\xfd\x17\x00\x00\xff\xff\xaa\x2d\x24\x26\x12\x06\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7b, 0x5b, 0x4, 0x4, 0xa4, 0xb0, 0xb8, 0x37, 0x60, 0xbe, 0x57, 0x32, 0xe, 0xa9, 0x53, 0xc8, 0xff, 0xb, 0x81, 0xa6, 0xab, 0x1e, 0x9b, 0x21, 0x6a, 0x1f, 0x3a, 0x90, 0x27, 0xdc, 0x6d, 0xd9}}
	return a, nil
}

var _transactionsTestUpgrade_nft_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\x31\x0b\xc2\x30\x10\x85\xf7\xfc\x8a\xa3\x53\x0a\xd2\x59\xb2\x75\x11\x5c\x9c\x74\x12\x29\xe7\xf5\xd0\x60\x7b\x17\xd2\x0b\x08\xd2\xff\x2e\x51\xe8\x1b\xde\xf2\x1e\xdf\xe7\x2c\xa3\x2c\x48\x16\x55\x3c\xe9\xc8\x01\xae\x97\xa3\xd8\xfe\xd6\xc2\xc7\x39\x00\x80\x94\x39\x61\x66\x8f\x44\x16\xa0\x2f\xf6\xec\x89\xb4\x88\x6d\x8f\x9a\xba\x76\xa4\x62\x19\xc9\x96\xae\xa4\x11\x8d\x87\x81\xdf\x89\x73\x9c\x59\x0c\x27\x2f\x38\x73\x80\xe6\xa4\x72\x28\xf2\x88\xf7\x89\xcf\xfa\x62\x69\x76\xf0\x37\xd7\x6e\x7f\xc4\xd5\xad\xdf\x00\x00\x00\xff\xff\x3c\xcf\x13\x58\x9a\x00\x00\x00"

func transactionsTestUpgrade_nft_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTestUpgrade_nft_contractCdc,
		"transactions/test/upgrade_nft_contract.cdc",
	)
}

func transactionsTestUpgrade_nft_contractCdc() (*asset, error) {
	bytes, err := transactionsTestUpgrade_nft_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/test/upgrade_nft_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0x83, 0x6c, 0xb3, 0x45, 0x7c, 0xc1, 0x2e, 0xd2, 0x17, 0x38, 0x61, 0x46, 0x9f, 0xbf, 0x3e, 0xd1, 0xf, 0x62, 0x68, 0x44, 0xbd, 0x3b, 0x6d, 0x7, 0x58, 0xa9, 0x65, 0x57, 0xb0, 0x9, 0x5b}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4b\x6f\xdc\x3c\x0c\xbc\xfb\x57\xf0\xf3\x21\xb1\x81\x2f\xbb\x97\xa2\x07\x23\x0f\xa4\x49\x03\xe4\x92\x06\xe9\xb6\x77\xad\x4c\xdb\x6a\xbd\xa4\x21\xd1\xd9\x14\x41\xfe\x7b\x21\x3f\x64\xef\x23\x6d\x75\x92\x25\x8a\x33\x1c\x0e\xbd\x5c\x2e\x61\x55\x19\x07\x62\x15\x39\xa5\xc5\x30\x81\x71\x50\xb0\xed\x8f\x0a\xb4\xd6\x50\x09\x8a\x72\x78\xb8\x5b\x41\x61\x79\x13\xf9\x57\x4c\x08\x4a\x6b\x6e\x49\x40\x18\x14\xb1\x54\x68\xa3\xc8\x6c\x1a\xb6\x02\x0f\x4c\x77\x2d\x95\x66\x5d\xe3\x8a\x7f\x22\x75\x0f\x21\xde\x3f\x8e\xc7\xf8\xcf\x2f\x6a\xd3\xd4\x38\x42\x40\x3c\x1d\xc4\x51\x34\x63\x97\x58\xd4\xa6\x31\x48\x92\xc1\x75\x9e\x5b\x74\xee\x7f\xd8\x1a\xa9\x72\xab\xb6\xf7\xb7\x19\x7c\xbb\x27\xf9\xf8\x21\x85\xd7\x28\x02\x00\xf0\x5c\x9f\xb0\x40\x8b\xa4\xd1\x33\x95\x0a\x43\x3c\xda\x53\x07\x9a\xeb\x1a\xbb\xdc\xdd\x83\x1a\x25\xdc\x3f\x61\x91\xc1\xc9\x44\x65\x71\x33\xc5\x1e\xc9\xce\x45\x97\x7d\x4a\xe8\xf1\x72\x6c\xd8\x19\xe9\x6e\x7c\x79\xc2\x01\x66\xb8\xea\x51\x5e\xf7\xb5\x99\x81\x3d\xb6\xeb\xda\xe8\xb7\x1e\xb3\xb1\xd8\x28\x8b\x89\x33\x25\xa1\xcd\x40\xb5\x52\x25\x9f\xd8\x5a\xde\x7e\x57\x75\x8b\x29\x9c\x5c\xf7\x8d\xf1\x22\xc0\xb0\x96\x4b\x58\x77\x31\xa0\xc0\xee\xeb\xd1\xa7\x3a\x75\x1d\xc1\x3d\x3d\xfc\x72\x58\x17\x8b\x99\x28\x70\x31\x3c\x59\x38\x61\xab\x4a\x0c\x91\x7e\x2d\x7a\xa0\xf3\xe3\xc2\x5d\x26\xbe\xc1\x19\x1c\xbd\xfc\xda\xa7\x7b\x54\x52\xa5\x3b\x39\xaf\xae\xa0\x51\x64\x74\x12\x0f\xb5\x41\xce\xe8\x80\x58\xc0\x53\x40\x50\x04\xbc\xfe\x81\x5a\x40\xf5\x5a\xbb\x06\xb5\x29\x0c\xe6\xd0\x28\xa9\xe2\x34\x9a\x4b\x51\x62\x1f\x14\xcc\xe4\xa0\xe9\x34\x0e\x9e\xee\x93\x85\x37\xbe\x5d\x21\x18\x2e\x7c\x82\x81\xc8\x64\xc8\x5d\x88\xa0\xf6\x90\xf8\x40\x74\x8b\x1a\xcd\x33\xda\x03\x07\x06\xc5\x27\x7f\xc0\xc5\x84\xbe\xab\xb5\x56\x8d\x5a\x9b\xda\x88\x41\x17\x84\xff\x07\x2f\x5d\x26\x47\x1b\xd0\xdf\xfe\x49\xff\x1b\x6e\xeb\xbc\x13\xfe\x7d\x3f\x8d\xa5\xed\x4c\xd7\xd8\x82\xc1\xc6\xf8\x82\xba\x15\x1c\xe7\x74\x50\x6d\x34\x59\x18\x97\xee\x6f\xe0\x3f\x78\x4b\xc7\xc6\x75\x6c\x0e\x15\x02\xe7\x67\x07\x4e\x0d\xfb\x64\xfe\x8f\x98\xf6\xbb\x3d\xbb\xdd\x9b\x55\x43\xbb\x2e\x39\x0e\xbf\xd7\xab\x71\x9b\x88\x57\x3e\x83\xf3\x33\x2a\x24\x9d\x97\xde\xb0\x93\xd9\x68\xfe\x77\x40\xba\x44\xb9\xbf\x75\x49\xba\xd0\x4c\xa2\x0c\xb9\x19\xfb\x34\x83\xf8\x8b\x35\xa5\x21\x55\xf7\xa2\x80\xab\x42\x4f\x2a\xf5\x8c\x81\xbe\xa2\x5f\x1b\xb6\x18\xbf\xcb\xf4\x6f\x38\xab\xa1\x78\x7c\x9e\xa3\x6c\x3d\xec\x08\x12\x0f\x85\xbd\x45\xbf\x03\x00\x00\xff\xff\xfd\x65\xf9\xbc\x4c\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd5, 0x5b, 0xa8, 0xde, 0x19, 0xfe, 0xd0, 0x55, 0x84, 0x7b, 0x50, 0x9a, 0x36, 0xa, 0x27, 0x6f, 0x8b, 0x10, 0xb9, 0x39, 0x88, 0x92, 0xf4, 0xec, 0x9, 0x46, 0x4a, 0xdd, 0xc4, 0x48, 0x81, 0x34}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\xcd\x4e\xc3\x30\x0c\xbe\xe7\x29\xac\x1e\xa6\xee\xd2\xdd\x11\x20\x01\xa2\xc7\x69\x87\xc2\xdd\xcb\xb2\xd6\x5a\x16\x47\x89\xa3\x22\x4d\x7d\x77\xd4\x75\x5d\xbb\x01\xc2\x27\xcb\xfe\x7e\xec\x6f\xb5\x5a\x41\xd5\x50\x04\x09\xe8\x22\x6a\x21\x76\x40\x11\xda\x06\x05\xd0\x01\x6a\xcd\xc9\x09\xb4\x9c\xec\x0e\x42\x72\xaa\x67\x08\x43\x72\x96\xdc\x01\x48\x22\x68\xb6\xd6\x0c\xcc\x7d\xe0\x23\xf8\xb4\xb5\xa4\x21\x0a\x07\xac\x8d\x52\x74\xf4\x1c\x04\xd6\xec\xca\xe4\x6a\xda\x5a\x53\xf1\xc1\x5c\xc0\xd9\xfd\x38\x1b\xf1\xef\x5f\x78\xf4\xd6\xac\xcb\xea\x82\x9c\x06\x57\xcc\xba\xac\x4a\x0e\x2d\x86\x1d\xb9\x7a\x14\x9c\xcf\x32\xa5\xe6\x9f\x9d\x94\x02\x00\xf0\xc1\x78\x0c\x26\x8f\x54\x3b\x13\x1e\x00\x93\x34\xf9\x2b\x87\xc0\xed\x27\xda\x64\x96\xb0\x78\x19\x1e\x5f\x8e\x94\xbe\x68\x0f\xd6\x08\x68\xf4\xf0\x04\x03\xb7\xd0\xe8\x71\x4b\x96\x84\x4c\x2c\x6a\x23\x8f\x8b\xd3\x74\x67\x31\xb5\x6f\xd7\x90\x36\xe7\x78\xba\xe7\x7c\x86\xbb\xdf\x6e\x50\x9a\xde\x1a\x66\x45\xfb\xde\xb9\xd0\x8d\xd1\x87\xfc\x7e\xd9\x97\xe5\x3a\xcf\x3e\xdc\x39\xfe\xd8\xf4\x81\xfc\x6d\x3f\x64\x35\x99\x65\xcb\x1f\x72\xbf\x3d\x98\x46\xf5\x7f\x8f\xbf\x91\xeb\xd4\x6d\xd7\xa9\x4e\x7d\x07\x00\x00\xff\xff\xb8\x6a\x91\xc6\x7a\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0x82, 0x33, 0xc2, 0x28, 0xd7, 0x27, 0xd0, 0x1b, 0x2b, 0x9b, 0x99, 0x7, 0x5e, 0x77, 0x9b, 0x8d, 0x2a, 0xc2, 0x64, 0xd8, 0xbc, 0xc7, 0xf6, 0x87, 0x22, 0x64, 0xd2, 0x6, 0x78, 0x1d, 0xe4}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/test/upgrade_nft_contract.cdc":                      transactionsTestUpgrade_nft_contractCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"test": {nil, map[string]*bintree{
			"upgrade_nft_contract.cdc": {transactionsTestUpgrade_nft_contractCdc, map[string]*bintree{}},
		}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
