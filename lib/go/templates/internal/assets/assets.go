// Code generated by go-bindata. DO NOT EDIT.
// sources:
// scripts/borrow_nft.cdc (713B)
// scripts/get_collection_data.cdc (249B)
// scripts/get_collection_ids.cdc (464B)
// scripts/get_collection_length.cdc (591B)
// scripts/get_collection_length_from_storage.cdc (685B)
// scripts/get_contract_storage_path.cdc (481B)
// scripts/get_nft_metadata.cdc (6.074kB)
// scripts/get_nft_view.cdc (4.843kB)
// transactions/destroy_nft.cdc (1.219kB)
// transactions/mint_nft.cdc (2.792kB)
// transactions/nft-forwarding/change_forwarder_recipient.cdc (1.298kB)
// transactions/nft-forwarding/create_forwarder.cdc (1.594kB)
// transactions/nft-forwarding/transfer_nft_to_receiver.cdc (2.041kB)
// transactions/nft-forwarding/unlink_forwarder_link_collection.cdc (1.104kB)
// transactions/setup_account.cdc (1.271kB)
// transactions/setup_account_from_nft_reference.cdc (1.352kB)
// transactions/setup_account_to_receive_royalty.cdc (1.471kB)
// transactions/test/upgrade_nft_contract.cdc (172B)
// transactions/transfer_nft.cdc (2.152kB)
// transactions/unlink_collection.cdc (518B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4d\x6f\xd3\x40\x10\xbd\xef\xaf\x78\xf5\x01\xd9\x12\x72\x2e\x88\x43\xd5\x34\x2a\x05\x4b\x1c\xb0\x50\x65\xb8\xa2\xc9\x7a\xdc\x8c\xd8\xec\xae\x76\xd7\x0d\x55\xd5\xff\x8e\x92\x4d\x9c\x18\x90\x98\x93\x3f\xde\x9b\xf7\xde\xcc\x2c\x16\xe8\x36\x12\x11\x75\x10\x9f\xb0\x76\x21\xb8\x5d\x04\x59\xb4\x4d\x87\x21\xb8\x2d\x08\xda\x19\xc3\x3a\x89\xb3\x4a\xc9\xd6\xbb\x90\x50\xb4\xce\x36\xa3\x7d\x94\xb5\xe1\xce\xfd\x64\x5b\x4c\x7f\x3e\xfd\xa2\xad\x37\xdc\x36\xdd\xf9\xdb\x17\x4e\xd4\x53\xa2\xef\xc2\xbb\x58\x28\x45\x5a\x73\x8c\x25\x19\x53\x61\x18\x2d\xb6\x24\xb6\xa4\xbe\x0f\x1c\xe3\x35\xee\xf2\xc3\x5b\x48\x7f\x8d\x6f\x9f\x6d\x7a\xff\xae\xc2\x8b\x02\x00\xc3\x09\xa4\xb5\x1b\x6d\xc2\x12\x8f\x9c\xee\xf2\xcb\x89\x5c\xa9\x09\x76\x76\xfd\x91\x12\x61\x89\xb3\xb1\x3a\x70\x74\xe6\x89\xf7\x76\xca\xee\xd9\xf3\xcd\xcc\x60\xdd\x36\xdd\xfd\x8c\x7d\x5b\x56\x15\x28\x5e\xe1\x3f\xb8\xd5\x41\x7d\x5f\xab\x15\x3c\x59\xd1\x65\xb1\x87\x3e\x64\xbd\x80\xde\x71\x84\x75\x09\x47\x07\xf8\xab\x05\x9e\x84\x77\xc5\x3f\x73\x3c\xf0\x80\xe5\x29\x7e\xad\xc9\xd3\x5a\x8c\x24\xe1\x58\xe7\xc5\xdd\xbc\x79\xf9\x73\x2f\xf5\xb9\xfb\xeb\x6d\x39\xd9\xdb\xd7\x7c\x40\xb5\x1f\xd7\x46\xf4\x57\x4a\x9b\x09\x55\x5d\xc4\xb8\x77\xa3\xe9\x0f\xd6\xb3\x16\x26\xfd\xe7\x7c\x27\x99\x7f\xd1\xf5\x14\x62\xb1\xc0\x87\x4c\x21\x04\x1e\x38\xb0\xd5\x8c\xe4\x40\x88\x9e\xb5\x0c\xa2\x0f\xd7\x26\x16\x69\xc3\x97\xd7\x76\x1a\xc1\x0f\x2c\xe7\x63\x38\xe6\x6d\x9b\xae\x94\xbe\xba\x52\xaf\xea\x77\x00\x00\x00\xff\xff\x07\x23\x40\xc2\xc9\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xec, 0x62, 0xd, 0xb7, 0xd2, 0x76, 0xc, 0x4b, 0x72, 0x9a, 0x7a, 0xe0, 0x9c, 0x24, 0xf0, 0xa, 0xd0, 0xe7, 0xa7, 0xa9, 0x21, 0x13, 0x9f, 0xcd, 0x4d, 0x4b, 0xe9, 0xb1, 0x63, 0x2f, 0xd4}}
	return a, nil
}

var _scriptsGet_collection_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\xbf\x0a\xc2\x30\x10\xc7\xf1\x3d\x4f\xf1\xa3\x53\xb2\xf4\x01\x8a\xa8\xa0\x76\xb3\x53\x70\x3f\xea\x55\x02\xf9\x53\x92\x2b\x2a\xe2\xbb\x8b\x50\xb0\x9d\x5c\x6e\xf8\xf1\xe1\xbe\x2e\x8c\x29\x0b\xce\x2c\x74\x25\xa1\x8b\xe3\x7b\xc1\x90\x53\x40\xb5\xda\x2a\x35\xcb\xd3\x83\xc2\xe8\xb9\x6b\xed\xcc\x7e\x43\xa5\x14\xf5\x3d\x97\xa2\xc9\x7b\x83\x61\x8a\x08\xe4\xa2\x36\xcd\xfa\x7f\xdd\xb5\xf6\x90\xbc\xe7\x5e\x5c\x8a\x47\x12\xda\xe1\xa5\x00\x20\xb3\x4c\x39\x2e\x1a\xf5\x8d\x65\x4d\x75\x1c\xc4\x3e\x47\x6e\xf0\xbd\x9b\xfd\xc2\x76\xad\xdd\x6a\x63\x40\xe5\x6f\x4f\xbd\x3f\x01\x00\x00\xff\xff\xb1\x9c\x4d\xb5\xf9\x00\x00\x00"

func scriptsGet_collection_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_dataCdc,
		"scripts/get_collection_data.cdc",
	)
}

func scriptsGet_collection_dataCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0x65, 0x71, 0xe4, 0x18, 0xa1, 0xec, 0x42, 0xe9, 0x76, 0xea, 0xa0, 0x89, 0x8f, 0x83, 0xeb, 0x97, 0xd8, 0x6e, 0x93, 0x33, 0x3a, 0xa8, 0x2c, 0xe3, 0x97, 0xee, 0xac, 0xd4, 0x88, 0xdc, 0x15}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x6b\xeb\x30\x10\x84\xef\xfa\x15\x83\x0f\xef\xd9\xf0\x70\x2e\x8f\x1e\x42\xd3\x10\x92\x06\x72\x09\xa1\x4d\x4f\xa5\x07\x59\x5e\x27\xa2\xf2\x4a\x48\x6b\xda\x12\xf2\xdf\x4b\x9b\xda\x49\x4b\x75\x5a\xb1\x3b\xdf\xcc\x8c\x46\x23\xdc\x9b\x68\x83\x40\x3c\x76\x24\x58\x2f\xb7\x58\x2d\x12\x2c\x43\x33\xb4\x31\xbe\x63\xf9\x9b\x60\xbc\x73\x64\xc4\x7a\x56\xca\xb6\xc1\x47\x41\xb6\xf6\xbc\xec\x78\x67\x2b\x47\x5b\xff\x4c\x9c\x0d\x9b\xdb\x57\xdd\x06\x47\xeb\xe5\x36\x53\x4a\x1b\x43\x29\xe5\xda\xb9\x02\x4d\xc7\x68\xb5\xe5\x5c\xd7\x75\xa4\x94\xc6\x98\x9d\x86\x7f\x17\x0e\x9b\xae\x72\xd6\x6c\xb4\xec\xc7\x38\xcf\xc5\x18\x8f\x0f\x2b\x96\xab\xff\x4f\x38\x28\x00\x70\x24\x7d\x42\x4c\x3e\xd2\xcf\x4e\x9f\x1e\x5e\xa8\xe1\xec\x0c\xbf\xa3\x06\x93\x5e\x56\x1a\x1d\x74\x65\x9d\x15\x4b\xa9\xac\x7c\x8c\xfe\xe5\xfa\xcf\xe1\x67\xb1\x72\x3e\xc8\x8f\x37\xf9\x27\xb4\x7f\xbf\xa5\x1e\x0e\x0a\x4c\xa7\x08\x9a\xad\xc9\xb3\xb9\xef\x5c\x0d\xf6\x82\x93\x0d\x06\xeb\x37\x34\xd1\xb7\x17\x24\x68\x41\x0a\x64\x6c\x63\xa9\x46\xd0\xb2\xcf\xbe\xaa\x44\x92\x2e\xf2\xf7\x36\xe5\x8e\x64\xb5\x48\x79\xa1\x8e\xea\x3d\x00\x00\xff\xff\xbd\x0f\x9a\x7e\xd0\x01\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0x82, 0x9f, 0x84, 0xef, 0x6d, 0x1a, 0x4, 0x5d, 0x4f, 0x4b, 0x30, 0x9f, 0x84, 0x8c, 0x59, 0x9a, 0x47, 0x98, 0x70, 0x24, 0xbf, 0x56, 0x75, 0xfc, 0xee, 0x9b, 0x44, 0xad, 0x57, 0x5f, 0xf3}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcb\x6a\xf3\x30\x10\x85\xf7\x7e\x8a\xf9\xbd\xf8\x91\x36\x7a\x80\x90\x0b\x21\x6d\xa0\xd0\x86\x12\x4c\xf7\x63\x79\xe2\x88\xca\x92\x91\xc6\x49\x43\xc8\xbb\x17\xc7\xb5\x13\xb7\x85\xce\x4a\x97\x33\x73\xbe\x23\x99\xaa\xf6\x81\x21\xdd\x78\xb7\x6e\x5c\x69\x72\x4b\x99\x7f\x27\x97\x26\xfd\xcd\xe3\x07\x56\xb5\xa5\xcd\x3a\xbb\x9d\xbd\x10\x63\x81\x8c\x6f\x86\x8e\x31\x4d\x12\xd4\x9a\x62\x14\x68\xad\x84\x5d\xe3\xa0\x42\xe3\x04\x16\x45\xa0\x18\x27\xb0\xec\x16\x72\x02\x4f\x8e\xe1\x9c\x00\x00\x58\x62\x40\xad\x7d\xe3\x18\x66\x50\x12\x2f\xbb\x4d\xdf\x25\x93\x41\xa6\xbd\xb5\xa4\xd9\x78\xf7\x80\x8c\x30\x83\x1b\x91\x0a\x14\xbd\x3d\x50\xcb\x21\xb2\x53\x4d\xd3\x11\x99\xda\xac\xb3\xd5\xa8\x7b\x2e\xa4\x04\x8c\xff\xe0\x0f\xdd\xe2\xea\xde\xd6\x62\x01\x35\x3a\xa3\x45\xda\x4a\xb7\x9d\x5f\x80\xc2\x53\x04\xe7\x19\xbe\x08\xe0\xc7\x08\x38\x18\x3a\xa6\xbf\xe6\xd8\xd2\x0e\x66\x7d\x7c\xa5\xb1\xc6\xdc\x58\xc3\x86\xa2\xca\x7d\x08\xfe\x38\xfd\x7f\xfe\xfe\x21\xea\x36\xfd\x32\x17\x03\x5e\x5b\xe3\x07\x52\x75\x93\x5b\xa3\x5f\x91\xf7\x83\x4a\xde\xc5\x58\xf9\xc6\x16\x57\xf4\xce\x0b\x06\xff\x13\xec\x82\xaf\xa0\xeb\xbf\x9b\xda\x87\x08\xc4\x4d\x70\xe3\x1c\xaa\x24\x7e\x26\x57\xf2\x5e\xc8\xe4\x92\x7c\x06\x00\x00\xff\xff\x5f\x4c\x6f\xad\x4f\x02\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0x25, 0xbd, 0x6e, 0x99, 0x17, 0x77, 0xeb, 0x6e, 0xb, 0x96, 0x2b, 0xd0, 0x83, 0x5, 0x6e, 0x24, 0x6c, 0xbd, 0x9a, 0x9e, 0x8c, 0x47, 0x19, 0x88, 0xb9, 0xaa, 0xbc, 0xb5, 0xba, 0xf1, 0xbf}}
	return a, nil
}

var _scriptsGet_collection_length_from_storageCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xcb\xaa\xdb\x30\x10\xdd\xfb\x2b\xa6\x5e\x04\x69\xe3\x0f\x08\x79\x90\xa6\x0d\x14\xda\x50\x82\xc9\x7e\x22\x8f\x1f\x54\x96\x8c\x34\x4a\x7a\x09\xf9\xf7\x8b\xe3\x47\xe2\xdc\x0b\x77\x56\xe2\xe8\xe8\xcc\x39\x33\xaa\xea\xc6\x3a\x86\xbd\x35\xbb\x60\x8a\xea\xa4\x29\xb5\xff\xc8\x40\xee\x6c\x0d\xf1\x2b\x1c\x47\x3d\xff\x0f\x31\x66\xc8\x78\xac\xe8\xe2\x7b\xf2\x04\x1b\x99\x3f\xff\x63\xdd\x68\xda\xef\xd2\x9e\xf6\x00\xe2\x28\x42\xa5\xc8\x7b\x81\x5a\x4b\xc8\x83\x81\x1a\x2b\x23\x30\xcb\x1c\x79\x3f\x87\x4d\x77\x90\x73\xf8\x65\x18\xae\x11\x00\x80\x26\x06\x54\xca\x06\xc3\xb0\x84\x82\x78\x13\xb8\xdc\x74\xc0\x02\x03\x97\xe2\xbb\x75\xce\x5e\x8e\xa8\x03\x49\x98\xf5\x57\xab\x41\x55\x46\xa3\x8c\xb2\x5a\x93\xe2\xca\x9a\x1f\xc8\x08\xcb\x27\xaf\x89\x23\x6f\xf5\x99\xda\x2c\x22\x7d\x6b\x68\x31\x49\x97\xec\x77\xe9\x76\xf2\x7a\x25\xa4\x04\xf4\xdf\xe0\x0b\xde\xfa\xde\xbd\xad\xf5\x1a\x1a\x34\x95\x12\x71\x4b\x3d\x74\xfd\x1c\x64\x96\x3c\x18\xcb\xd0\x3b\x80\x0f\x12\x70\xae\xe8\x12\x7f\x9a\xe3\x40\x39\x2c\x87\xf1\x24\x9e\xad\xc3\x82\x92\xd3\x7d\x20\x8b\xd9\xf5\x75\x9d\xc9\x43\xf8\xb6\x12\xa3\xb3\xb6\xda\x5d\xcd\x5f\x26\x34\x08\xfe\x45\x2e\x47\xb2\x7c\x0a\xb2\xb5\x41\x67\x77\xf3\x5d\x4b\x70\x94\x93\x23\xa3\x08\xd8\x3e\x89\x75\x3f\xa1\x57\x1b\x92\x38\xe2\xe0\xcc\x34\x4c\x52\x10\xff\x26\x53\x70\x29\x64\x74\x8b\xde\x03\x00\x00\xff\xff\xb8\xaa\x7a\x18\xad\x02\x00\x00"

func scriptsGet_collection_length_from_storageCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_length_from_storageCdc,
		"scripts/get_collection_length_from_storage.cdc",
	)
}

func scriptsGet_collection_length_from_storageCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_length_from_storageCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length_from_storage.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0x4, 0x13, 0x33, 0x10, 0xbb, 0x35, 0x8d, 0x77, 0x91, 0xaa, 0xd9, 0x3, 0xfa, 0xa8, 0x61, 0xd, 0xae, 0x29, 0x3d, 0x34, 0xce, 0x68, 0xd5, 0x4b, 0x1e, 0x6c, 0x6c, 0x4f, 0x53, 0x82, 0x96}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4d\x6a\xf3\x30\x10\xdd\xeb\x14\x13\x2f\x3e\x64\xf8\xf0\x01\x42\x9c\x10\x52\xba\x6b\x29\x6d\xe8\x7e\x22\x4d\x52\x81\x2c\x99\xd1\x38\xa6\x94\xdc\xbd\xc8\x76\x9c\x94\x2e\x3a\x0b\x63\x3d\xcd\xfb\xd1\x73\x4d\x1b\x59\xa0\x78\x22\x41\x8b\x82\xef\x8e\xfa\x54\xa8\x2b\x9c\x8f\xaf\x94\xa2\x3f\x13\x17\x4a\xa1\x31\x94\x92\x46\xef\x4b\x38\x76\x01\x1a\x74\x41\xa3\xb5\xbc\x84\xad\xb5\x4c\x29\xfd\x87\x80\x0d\x2d\xe1\x4d\xd8\x85\x53\x99\x7f\x22\xe3\x89\x5e\x50\x3e\x36\xf0\xa5\x00\x00\x3c\x09\x08\xd4\xb0\xff\x6c\x69\xf5\xc3\xb8\x7a\x7e\xdc\xef\xa2\xf7\x64\xc4\xc5\xf0\x80\x82\x6b\x5d\xce\x9c\x43\x64\x8e\x3d\xd9\x5d\x0c\xc2\x68\xb2\xc4\x89\x64\x6b\x4c\xec\x82\x0c\x31\xca\xca\x4c\x77\xa9\x1a\xb7\x57\xff\xee\x9f\xb0\xd6\x63\xba\xfc\x1d\x75\xf3\x6c\x36\xd0\x62\x70\x46\x17\x57\x36\x98\xd8\x79\x0b\x21\x0a\x1c\x68\xf6\x2d\x4a\x35\x67\x39\x3b\xea\xa1\xfe\x15\xa9\xe2\xd1\x29\x9b\x6a\x19\x2d\xdc\x71\xda\xae\x21\x38\x3f\x75\x90\x87\x49\x3a\x0e\x19\x1c\xa0\xcb\x4d\xdd\x58\xa8\x07\xd2\x02\x30\x2d\xe0\x8f\x8e\xd4\x9d\x98\xb1\x55\xba\x35\xae\x2e\xea\x3b\x00\x00\xff\xff\xdd\x9d\x33\x48\xe1\x01\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0xb4, 0x1c, 0x19, 0xf0, 0x34, 0x45, 0x98, 0xcb, 0xc6, 0x87, 0x3b, 0xe0, 0xd0, 0x37, 0x8f, 0x3d, 0x65, 0xdc, 0x53, 0xaf, 0xcc, 0xea, 0xe7, 0x2, 0x6e, 0x65, 0xf4, 0xa6, 0xe4, 0xcb, 0x5d}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x41\x6f\xe3\x28\x14\xbe\xe7\x57\xbc\xe6\xb0\x8a\xa5\x5d\x77\x0f\xab\x3d\x44\xe3\xa9\x66\xa7\xed\xaa\x52\x27\x1a\xb5\x99\xbd\x54\x3d\x10\x1b\xa7\xa8\x04\x67\x81\xb4\x13\x55\xfd\xef\x23\xc0\x36\x60\xc0\x4e\x7b\x89\xcd\xfb\xde\x7b\x60\xde\xf7\xe0\xeb\xf9\xf9\x39\xac\x9f\x88\x00\x51\x72\xb2\x97\xb0\xc5\x52\x00\xa2\x14\xe4\x13\x86\x17\x82\x5f\xff\xd8\x20\x81\x2b\xd8\x61\x89\x2a\x24\x11\x20\x21\x9a\x92\x20\x89\x2b\x78\x25\xf2\x49\xe3\xc4\x1e\x97\xa4\x26\xb8\x82\xd5\xf5\x7a\xa6\x42\x22\x56\x01\xc7\xf2\xc0\x99\x00\x22\x01\x09\x40\x20\x08\xdb\x52\x0c\x42\xf2\x43\x29\x67\x33\xb2\xdb\x37\x5c\xc2\xfc\xea\x27\xda\xed\x29\x5e\x5d\xaf\xe7\xfd\xd8\xb7\x36\xdb\x7f\x04\xbf\x8a\xf9\x6c\x86\xca\x12\x0b\xb1\x40\x94\x66\xad\xbf\xca\x04\x6f\x33\x00\x00\xd7\x48\xb1\x04\x86\x76\x78\x09\xf7\x92\x13\xb6\x8d\x02\x2a\x6c\x16\x4b\x1a\x36\x8a\x93\x4f\x87\xdd\x86\x21\x42\x47\x51\xcd\x2b\xc3\x7c\x09\x5f\xaa\x8a\x63\x21\xe2\x81\x8e\xfb\xf1\x19\xf1\xe6\x88\xa8\x24\x58\x2c\xe1\xc1\x5b\x7b\x7e\xa7\x2d\xc7\xc7\xa8\x1b\xfe\x29\x31\x67\x88\xfe\xb8\xbb\x1d\x0d\x2f\x30\x27\x88\xae\x0e\xbb\x8d\x9a\xe9\x8f\x1b\x26\xff\xfe\x2b\x0a\x2c\x1b\x4a\x71\xa9\x3e\xcc\xf7\xc3\x86\x92\xf2\x3b\x92\x4f\x4b\xb0\xcf\x13\x4e\xf7\xb2\xe1\x68\x8b\x8d\x97\xf3\x32\x95\x8b\x37\x2f\xa4\xc2\xbc\xcd\xc6\xc9\x0b\x92\x27\xf9\xe9\x79\x8d\xae\x7c\x08\xbe\x25\xec\x19\x57\xeb\xa9\xfd\x08\xe7\xf6\x61\xc7\xd5\x54\x15\x5a\xe8\xe5\x89\xf5\x68\x3d\xae\x4e\xdc\x78\x67\x6b\xfe\x3f\x20\x8e\x6f\x76\x68\x7b\xea\xac\xfe\x41\x8c\x61\xfe\x11\x8f\x7b\xd5\x18\xa8\x58\xc2\x9b\x81\x77\x6e\xef\xf1\xe2\xad\x88\x59\xb1\x5f\xf0\x57\x66\x38\xce\x23\x8e\x88\x14\x43\x8f\xb5\x1e\x8d\x3a\xec\x70\x45\x50\xe0\xf0\x4d\x8f\x5e\x44\x3d\x28\x29\x31\x13\x78\xe8\x72\x6b\x86\x2f\x66\xda\x89\x30\x22\x17\xfa\x49\xfd\xb9\xfd\xe6\xf7\x7e\x34\xd2\x64\xac\x31\xe8\x2c\xd6\xe4\xb7\x13\x3b\xce\x6a\xe9\x56\x9f\x35\x4c\xf7\x0e\x8b\x8d\x34\x0c\x6b\x8c\x75\x09\x6b\x9d\x6a\x0d\x31\x64\xaa\x1f\x44\xa3\xa6\x9a\x40\x7a\x0a\xe1\x12\xa6\xe9\x3e\x96\xfa\x34\xf4\x2a\xba\xdd\xa3\x6c\x8e\xc1\x22\x14\x8e\x7e\xc2\x90\xb7\x31\x58\x84\xac\xd1\x68\x29\x86\x3a\x25\x32\x4a\x4b\xa7\x84\x47\xb8\x68\x51\x2d\x01\xa3\xfc\xb3\xa8\x8e\x74\x09\xce\x29\x48\xd6\x1e\xf6\xa6\x50\x69\x9d\x2b\xd6\x41\xa1\xc9\xe7\x1b\x1c\xe2\x41\xe1\xd2\xd0\x87\xf5\x14\x84\xc2\xd2\xd1\x87\x68\x2a\x42\x61\x28\x39\xf0\x3e\xee\x75\x76\x43\x4a\xdf\xd6\x13\x12\x0a\x4b\x4e\x1f\xe2\xf0\x10\x0a\x97\x95\x3e\xcc\x65\x24\x14\x1e\x41\x7d\x60\x8c\x9c\x50\x44\x39\x9b\x72\x74\xe8\xe9\x79\x0e\x8f\xf1\x58\x4e\x87\xba\x7e\x56\xc7\x30\x3e\xe1\xc8\x64\xc7\x1d\x2c\x57\x23\xae\xd6\x38\x35\xe5\x54\x98\xc0\x9c\x0a\xb4\x32\x65\xe8\x0f\xa4\xc0\x97\x5e\x69\x46\xc7\x53\xae\x57\x5e\xc5\x44\xc7\x93\x3b\x6b\x5b\x88\xbf\xb3\x76\x3c\xe5\xea\xb4\x15\xcf\xd5\x19\x4f\x66\x35\xad\xc6\xcf\x68\xc6\x06\x5c\x30\x9d\x45\xf1\xc0\x39\xfa\x2d\xd3\x74\x47\x51\x24\xb5\xc7\x7c\x6f\x34\xed\xa5\x30\x3f\xbe\xa9\xed\x29\x45\xfb\xab\x8d\xef\xb3\x77\x5f\x4b\xd4\x07\x06\x3b\x44\xd8\x02\x99\xe3\xd6\x9e\xbb\x40\xaa\xee\x0c\xcc\x96\x8e\xd8\x50\x77\x04\x54\x96\xcd\x81\x49\x28\x94\x5a\xfa\x62\x5e\xba\x08\xd9\xac\x87\x39\xfb\xab\x84\x53\x01\x56\xe9\xe4\x1c\x8b\x86\xbe\x60\xd5\xe8\x16\xaa\xbc\x3e\xf9\xad\x6f\x75\xbd\xfe\xea\x79\x7f\x5e\x64\x19\x20\x71\x06\x13\xb8\x8b\xfe\x23\x5c\x5c\xc0\x1e\x31\x52\x2e\xe6\x0a\x7a\x67\xf2\x71\xa8\x1a\x2c\x80\x35\x12\xda\x19\x40\x10\x42\xab\xbe\x79\xa6\x03\x45\xd6\x02\x45\xb7\xfe\xbc\x44\x7b\xb4\x21\x94\xa8\xfe\x96\x6f\x1a\xce\x9b\xd7\x4f\xbf\x39\x8b\xb4\x71\x3f\xdb\xdb\x12\xf8\x87\x25\x92\x28\xdf\x87\xcd\x29\x73\xe6\xff\xb5\x39\xd0\x4a\xcf\xd9\xe4\x00\x04\x1c\xd7\x98\x63\x56\x62\x90\x8d\x56\xa0\x36\xe2\xdc\xd9\x01\x56\x4b\xaf\xfe\xda\x49\xae\xae\xd7\x0b\x52\x65\x91\x4f\x35\x95\x0a\x31\x5d\x0a\xbd\xf0\xdd\x92\x17\xcc\xe0\xe6\xb2\x4b\x7a\x7e\x0e\xff\x6a\xe1\x88\x61\x83\x04\x29\xa1\x22\x62\x4f\xd1\x11\x08\xab\x1b\xbe\x43\xfa\x03\xd6\x0d\x07\xa9\x24\xb7\x12\xcb\xdd\x54\x3b\x60\x31\xd8\xe1\x2d\x96\x97\xc6\xb4\x60\xb5\xcc\xce\x82\x3c\xe6\x84\x89\x65\xe8\xa6\xe7\xa6\x69\xd1\x2a\x76\x2c\xd5\x5d\x77\x5c\xb9\xc9\x06\x4a\x33\xe6\xe7\x74\xa1\xa1\xa7\xb3\xd7\xe9\x25\xfa\x45\xe8\xad\xd7\xd9\x4b\x0b\x49\xcd\x3f\x28\xe6\xe1\x6c\x58\x2d\xdb\x9b\x4c\x2a\x44\x6b\x16\x83\xf4\xee\xd9\x9b\x72\xbd\xd7\x98\x61\x4a\xff\x42\x6f\x2e\x0d\xe6\x6a\x71\x96\xb7\x4d\xc3\x5b\xe5\xba\xbf\x5a\xa8\x98\xea\x6d\x11\x6d\x2a\xc9\xbb\x1c\x14\xf0\x66\x24\x97\xaa\x83\x67\xac\x6a\x23\xdc\x86\x5c\x18\xff\xfc\x19\x1f\x85\x73\xb9\x0a\x12\x3c\x3c\xe3\xe3\xa3\x7f\x5c\xf9\x11\x34\xe0\x2c\x3f\x70\xda\x36\xd9\x7e\xb2\x7d\xef\x0e\x3e\x95\xb9\x27\x0e\x3f\x55\xdb\xce\x03\xb4\xb9\x30\x6a\x74\x8f\xed\xfa\x7b\x00\x6e\xaf\x8d\x06\xad\xe1\xe6\x1f\x51\x8a\x07\x43\xd1\xd6\xb2\x4e\x5f\x26\x13\xd2\xad\x83\x38\x83\x51\x1d\xd7\xe1\xfa\xa1\xfc\xc0\xc9\x22\x0b\x84\x9d\xfe\x89\xc8\xba\xf6\x21\x27\x15\x66\x92\xd4\xc4\x05\x39\x12\xcf\x21\xb0\x4f\xd8\x2c\xa1\xf2\x9c\x17\xb5\x45\x29\xb9\x37\xac\xef\x9c\xe9\xc7\x29\xfd\x17\xb0\xd2\x69\xe6\x93\x8a\x30\x74\x16\x1f\xd1\x88\x91\xdc\x8e\x7d\x4c\x36\xa6\x66\x6d\x07\xa3\xdb\x30\xa6\x2e\x53\x21\x2d\x66\x2a\x64\x44\x84\xa6\x57\x78\x72\x58\xa3\x56\x43\xee\xfa\x15\x9f\x50\xaf\xa1\x5b\x94\x05\x09\x51\x1b\x7a\x27\x6b\x31\xa1\x77\x23\x2d\xc7\x9a\xf3\x9a\x50\x3c\x24\x59\x42\x11\x87\x81\x36\xd6\x3c\x11\xa8\xef\xb3\xc1\x50\x44\x34\xfb\xe7\x4b\xae\x0e\xe5\x5b\x22\xe4\xc3\x9f\x8f\xa1\x72\x96\x71\xad\x6c\x7e\x42\x71\xec\x5e\x64\xb3\xd9\xfb\xec\x57\x00\x00\x00\xff\xff\x1a\xf1\x29\x87\xba\x17\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x81, 0x29, 0xe8, 0x9b, 0x80, 0x4c, 0x96, 0x95, 0xed, 0x64, 0x15, 0xdb, 0x3e, 0xf3, 0x37, 0xf7, 0xe1, 0x29, 0xaa, 0xa8, 0x0, 0x8d, 0xd5, 0x25, 0xd4, 0x5d, 0xc2, 0x64, 0xcb, 0xfa, 0x41}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x8c\x73\x58\x58\x40\xa0\xd3\x62\x0f\x42\xd5\xa0\xdb\x26\x40\x81\xae\x51\x24\xe9\x5e\x8a\x1e\x68\x69\xec\x0c\x42\x53\x5e\x92\x72\x6a\x04\xfe\xef\x0b\x4a\x96\x48\x5a\xa4\x64\xe7\x64\xce\xbc\xf9\xa0\xf8\x1e\x39\xa1\xed\xae\x92\x1a\x6e\xee\x7f\xb3\xed\x8e\xe3\xf2\xe1\xf9\x66\xd6\xd9\xfe\x41\xcd\x4a\xa6\xd9\xbf\x84\x6f\xca\x9a\xcd\xf2\x11\x55\xc5\xf7\x28\x6f\x66\x33\x56\x14\xa8\xd4\x82\x71\x9e\x80\xd2\xb2\x2e\x34\x2c\x1f\x9e\x0d\x08\xde\x67\x00\x00\x2e\x80\xa3\x06\x2a\x33\xf8\xf1\x55\xe8\xbf\xfe\x0c\xba\xeb\x7a\x02\x20\xd8\x16\x33\x78\xd2\x92\xc4\x26\x08\x28\x51\x15\x92\x76\x9a\x2a\x31\x8a\xd3\x2f\xf5\x76\x25\x18\xf1\x51\x94\xac\x0e\x8c\x6b\x42\x95\xc1\x4f\xef\x8b\xa4\x8f\x8d\xe7\xf0\x2b\x18\x86\xbf\x35\x4a\xc1\xf8\x8f\xc7\x6f\xa3\xe9\x8b\x8a\x73\x2c\x4c\xaf\xdf\xeb\x15\xa7\xe2\x3b\xd3\x2f\x19\xd8\xdf\x13\x41\x4f\xba\x92\x6c\x83\x6d\x94\xb3\x98\xaa\x25\xab\x3d\x95\x28\x4f\xd5\x24\xed\x99\xbe\x28\xae\xe9\xeb\xaa\x0d\x7d\x23\xf1\x8a\xe5\xf3\x61\x37\x7e\x68\xc3\xde\xae\x0e\x5c\x4e\x11\xc3\x42\xbf\x5c\x48\x11\x1b\x71\x7f\xf5\x79\x3e\xfd\x57\x33\x89\x5f\xb7\x6c\x73\x69\x57\x7f\x33\x21\x50\x5e\x13\xf1\x54\x15\xc4\xb8\xca\xe0\xbd\x85\x77\x61\xc7\x30\xe1\x25\x23\xad\x32\xf0\x69\xfc\xdc\x58\x67\x4d\x04\x09\xd2\x8b\xe6\x57\xb3\xea\x85\x78\xdb\xdb\x5c\x79\x5a\xab\xab\x49\x6b\x0d\x08\xd1\x3a\x07\xea\xb3\xae\x69\xc9\x59\x6c\x40\x67\xd6\x39\x25\xae\x10\x32\xa6\xa8\x60\xd6\x98\x8c\xe2\x2d\x4c\x37\x39\xe4\xfd\x58\xe9\xcb\xd0\xcb\xe0\xf9\x8c\xea\x21\x04\x0b\x88\x20\xf8\x09\x87\xcc\x0f\xc1\x02\x74\x0f\x66\x8b\x71\xdc\xe1\xd2\x18\xb1\x0d\x20\x39\xbd\x45\xe6\x4f\x21\x5f\xa7\x54\x42\x0e\x54\xfa\x46\xc3\x6d\xc8\x1b\x8a\xfb\x0e\x43\x6f\xc8\x1b\x96\xfb\x0e\x87\xe1\x90\xbb\x7c\xf7\x61\x3d\xd7\x21\xb7\xbc\xf7\x21\x3d\xe7\x21\xb7\xfc\xf7\x21\x0e\xd5\x21\x77\x89\xef\xc3\x42\xa4\x87\x3c\xa8\x85\x58\xa0\x43\x7b\x2f\xf2\xfc\x81\x09\xd5\x74\x24\xe1\x57\x75\x1c\xe3\x0d\x07\x9a\x1d\x0f\xb0\x1a\x08\x84\x5a\xe7\x54\xcb\xb1\x34\x03\x77\x2c\xd1\xb2\xa5\x89\x6f\x88\x81\xbf\x78\xd4\x09\xda\x63\xa1\xf7\x1e\x11\x82\xf6\xe8\xc9\x5a\x69\xfa\x27\x6b\xed\xb1\x50\x47\xae\x5e\xa8\x63\x8f\x56\x6d\x25\xec\x57\x6c\x6d\x67\x42\x69\x24\x6b\x54\x62\xb5\x7b\x9c\x1d\xfd\x29\x73\x5d\x0b\xd8\x32\x12\x0b\x56\x96\x12\x95\xca\xe0\x53\xfb\xe3\xd6\x79\xb1\x92\xec\x6c\x0c\x35\x0f\x20\x2b\x8a\xaa\x16\x1a\x72\xd8\xa0\xfe\xd4\x2e\xba\x2c\xc9\xac\x87\x39\x87\xc1\x34\x83\x1c\xec\x74\x9c\xca\x76\xf2\x35\x89\x17\x86\x0b\x1f\xfc\x3b\x67\xf9\xf0\xfc\xd9\x8b\xfe\xb8\x48\x12\x60\x6a\x0e\x13\xb8\xbb\xfe\x43\xdc\xdd\xc1\x8e\x09\x2a\x16\xde\xa4\x0d\x65\x85\x0a\x44\xa5\xe1\xd4\x01\x0c\x52\xc0\x9e\xf0\xed\x26\xb8\x0f\xc8\xbb\xbd\xa7\x05\xdb\xb1\x15\x71\x32\xf7\x4b\xba\xaa\xa4\xac\xde\x3e\xfc\xf1\xee\x96\x4a\xbb\x1f\x36\xfd\xf1\xa3\x9d\x0a\xfc\xdb\xd9\x14\x4e\x77\xc3\x1b\x25\x71\xf6\xf1\xb9\xaa\x79\xd9\xf4\xde\xd6\x03\x06\x12\xd7\x28\x51\x14\x08\xba\x02\xfd\x82\x4e\x46\x77\x07\x7b\xf7\x0b\xb8\xec\x39\x75\xee\xb6\xbd\x30\x87\x4f\xe5\x68\x61\xd9\xe5\x7a\x23\xfd\x02\x1b\xda\xa3\x00\x2a\xdd\x8a\x62\xad\x1b\xd2\xe4\x67\x07\xb6\x41\x7d\xe2\xd3\xa9\xce\xad\xdf\x5c\xe6\x2d\x83\x87\x10\x7d\xc8\x20\x87\xf7\x76\x62\x5b\x57\x12\x5e\xf1\x00\x24\xba\x46\xdc\x1b\x83\xd4\x8e\xb3\xc3\x3c\x55\x6d\xa2\xf4\x15\x0f\xca\x79\xd8\x06\x95\x7e\xbe\xe2\xe1\x97\x79\xb7\x26\x53\x35\xc8\x79\x5a\x4b\x7e\x92\x5c\xdb\xbf\x44\x5d\x4b\xd1\x09\xc9\x1f\x0c\xbb\xa4\x54\x9e\x0f\x87\x9d\xc7\xac\xce\x47\xc4\xce\x57\x76\x0d\x18\x73\x64\x62\x1c\x60\x1d\x6f\x70\x8e\x1c\x04\xf4\xbe\xb4\x96\xb4\x48\x82\x13\x66\x17\xd4\x9b\xe6\xe6\xac\x1f\xbb\x95\x1b\xe5\xcd\x9a\x5d\x9c\x63\x6c\x3e\xe0\xd4\xf4\x19\x38\x0c\xa6\xd9\xdc\xd1\xd0\xe4\x54\x1a\x4b\xa1\xae\x99\x56\xa3\x7d\x38\xa8\xb1\x31\x76\x7c\x1f\xf6\xea\x48\xa9\x44\xa1\x69\x4d\x28\x2f\x9b\x79\xc7\x13\x5b\xe4\x54\xe2\xc0\x80\x3c\xb5\xe7\x8b\x93\x2f\x3d\x32\x07\x74\xe5\xd3\x3a\x32\x68\x8f\xc4\x07\xa9\x1e\x19\xc4\x47\xd2\x38\xe4\x8c\x71\xd3\x1b\xd6\xc7\x6e\x0a\x8b\x4b\xd7\xc4\xf1\x5c\x52\x91\xb9\x7e\x24\xe3\xca\xe2\x26\x32\xf6\x37\xe7\xc0\x34\xfc\x1f\xa0\x2b\xd8\xae\xe7\x2d\x20\x99\x1d\x67\xff\x07\x00\x00\xff\xff\x32\xdf\x8a\xcb\xeb\x12\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x8e, 0xde, 0x80, 0xf, 0x7e, 0x6d, 0x3, 0xb3, 0xda, 0xdf, 0x43, 0x21, 0x54, 0x5f, 0x31, 0x9b, 0x87, 0x70, 0xdb, 0x84, 0x9e, 0x78, 0xc6, 0xdb, 0x82, 0x91, 0x9b, 0x7c, 0xdb, 0x9c, 0xc0}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6f\x9c\x4e\x0c\xbd\xf3\x29\xde\x8f\x43\x7e\x70\x28\x7b\xa9\x7a\x40\xf9\xd3\x36\xdb\x95\xf6\xd0\x55\x15\xd1\xf4\x3c\xcb\x98\x65\xda\xc9\x0c\x9a\x31\x21\x51\x95\xef\x5e\xcd\x02\x0b\x6c\xa3\x1c\xea\x03\x20\x63\x3f\xfb\x3d\xdb\xab\xd5\x0a\x45\xad\x3c\xd8\x09\xe3\x45\xc9\xca\x1a\x74\x8a\x6b\xe9\x44\xe7\x21\x0c\x76\x9b\x02\x95\xb3\x0f\xe0\x9a\xe0\xd5\xc1\x90\xf3\x28\xad\xd6\xd4\x07\x0b\x23\x21\xc9\xb3\xb3\xcf\x1e\x8a\xa3\x48\x3d\x34\xd6\x31\x76\xd6\x6c\x5a\x73\x50\x7b\x4d\x85\xfd\x45\xa6\x07\x89\xcf\xdd\xf1\x18\xff\x95\x58\x48\xc1\xe2\x5e\x51\xe7\x87\xe0\x85\xef\x14\xf9\xe5\x49\x3c\x34\x9a\x4e\x8d\xc5\x93\x23\x8e\xa2\x19\x91\x44\xc9\x1c\xdf\xb7\x86\x3f\xbc\x4f\xf1\x3b\x8a\x00\x20\x10\xbe\xa3\x8a\x1c\x99\x92\xc0\xb5\x60\x74\x4a\x6b\xec\x09\xad\x27\x89\xca\xba\x23\x53\xdb\x19\x72\xff\xcf\x99\x1e\xd3\x35\xf1\xcc\x75\x47\x55\x0e\xd1\x72\x9d\x9c\xd3\xca\x7e\x0c\x1a\xa6\xb8\x98\xda\xcb\x6e\x27\xb4\x23\x5c\xe3\xa8\x11\x8e\x92\x5e\xd7\x01\xeb\xb3\x75\xce\x76\xf7\x42\xb7\x94\xe2\xe2\x53\x59\xda\xd6\x70\x20\x80\xc1\x96\x4d\xac\x05\x8b\x7c\x29\x5f\xb6\xdb\x14\xb7\x8b\x00\x5c\xcd\x64\xcb\x0e\xc4\xcb\xdf\x89\xa9\xb8\x78\x6e\x28\x47\x78\x5e\x7e\x9c\xc5\xee\x36\xc5\x75\x92\xa6\xa7\xe2\xc1\x6e\x6e\xd0\x08\xa3\xca\x64\x26\x3d\xa4\x92\x30\x96\xe1\xc8\x5b\xfd\x48\xf8\xbb\x87\x47\x45\x5d\x3c\x21\xad\x56\xd8\x1f\xa9\x42\xc0\x4d\x23\xb1\x6f\xe9\x1f\xcc\x93\xae\xb2\xc5\x10\x70\x35\x6c\x66\xe6\xd9\x3a\x71\xa0\xac\x07\xbe\xfc\xb7\xd9\x5c\x27\x0b\xb6\xc1\xc2\xa2\xe5\x67\xa2\x8f\xc5\xbe\x09\xae\x17\x09\xe9\x4c\xa0\x61\x7c\x90\x96\xfc\x51\x9e\x90\x44\xe1\xb0\xec\xfe\x27\x95\x0c\xc1\xfd\x65\x35\x54\xaa\x4a\x91\x44\x23\xb8\x8e\xd3\x7e\x3f\x5e\xfa\x17\x3d\x51\xd9\x32\x8d\x3b\x3c\x88\x37\x9e\xe9\x31\x7f\x71\xa6\x6f\x88\x17\x76\xc7\x54\x8c\xcb\x77\xaf\xe8\x98\x8d\x90\xc9\xf8\xb1\x5d\xe7\x50\x32\x9d\xea\x0e\xa7\x1e\x30\xe6\x1d\x36\xd6\xf3\x6c\x43\xff\x7b\x05\xfb\x40\xbc\x5d\xfb\x24\xcd\x4a\x6b\x58\x28\xe3\x13\x25\xd3\x1c\x71\x31\x74\x1f\x4a\x9e\x49\xb1\x5d\xc3\xd7\xb6\xd5\x12\xb5\x78\x24\xec\x89\x0c\x24\x69\x62\x92\xf1\x50\xfd\x25\xfa\x13\x00\x00\xff\xff\x00\x45\xac\xf8\xc3\x04\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0x72, 0xba, 0xd2, 0x81, 0xc0, 0xb0, 0xab, 0xd8, 0x78, 0x63, 0x64, 0x5e, 0x6f, 0xc0, 0x9, 0x2, 0xc5, 0xcc, 0xb9, 0x65, 0xef, 0xb9, 0x93, 0x7c, 0xf8, 0xb4, 0x35, 0xc5, 0xf9, 0x8e, 0xa7}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x41\x6f\xe3\x36\x13\xbd\xeb\x57\xcc\xe7\x83\x57\xc6\x97\xb5\x5b\xa0\xe8\x41\x88\x13\x24\xd9\x06\xe8\x61\x83\x45\xd6\xdd\x4b\x90\xc3\x58\x1a\x4b\x6c\x69\x52\x25\x47\x76\x8c\x20\xff\xbd\xa0\x28\x51\x62\xa2\xa4\xf5\xc1\x96\xc9\x99\xc7\x99\x37\x6f\x86\x5a\xad\x56\xb0\xa9\x84\x05\x9b\x1b\x51\x33\x34\x96\x2c\x70\x45\x70\x77\xbb\xf9\x2a\x14\x93\x01\x43\x56\x37\x26\x27\x60\x0d\x7b\xa1\x18\x10\x14\x1d\x9d\x41\xe2\xbc\x7f\x67\xd8\x37\x96\x61\x4b\x60\x1a\x05\x47\xc1\x55\x0b\x80\x79\xae\x1b\xc5\xc0\x15\x32\x54\xe8\x51\xf7\x31\x64\x0b\x60\x59\x1b\x2a\x40\x28\x58\xb9\x47\x2c\x69\x15\x0e\x4f\x12\xb1\xaf\xb5\x61\x98\xdd\x69\x75\xdb\xa8\x52\x6c\x25\x6d\xf4\x5f\xa4\x66\x61\xe7\xb7\x27\xdc\xd7\x92\xee\x6e\x37\xc3\xda\x57\x62\x2c\x90\xf1\x87\xa0\xa3\x1d\x96\x5f\x21\x24\x6c\x50\x59\xcc\x59\x68\x95\x26\x00\x00\x86\x72\x51\x0b\x52\x9c\xc1\x55\x51\x18\xb2\xf6\xac\x5d\x57\xb8\xa7\x0c\xbe\xb3\x11\xaa\xf4\x2b\x05\x79\xc6\x84\x56\xf1\x06\x57\xcd\x7e\xab\x50\xc8\x78\x39\x6f\xd8\x66\xf0\xf0\xc7\xad\x78\xfa\xf5\x97\x47\xbf\x66\xf4\x09\x25\x9f\xbe\x0c\x50\xce\xc4\x7b\xc5\x26\xd7\xa4\x68\x27\x72\x81\x46\x90\xb3\xe9\x82\x7b\x4c\x16\xf0\x9c\xb4\x86\x8e\x49\xa9\x73\x94\x70\x40\x23\x70\x2b\x09\x76\xda\xb4\xe4\x0a\x55\xc6\xe4\xef\xc8\x90\xca\xa9\xf5\x93\xc4\xdd\x46\x06\xf3\x81\xca\xe5\xa8\x04\x3d\xfc\x7d\xef\xe8\x94\xe0\x00\x0d\xe5\x24\x0e\x64\x3e\x59\xc8\xb5\x94\xd4\x12\x19\x50\x03\x97\x37\x61\xef\x9e\x76\x19\xcc\x9f\x5f\xd7\x72\x79\xdf\x01\xbd\xf8\xc3\x6a\x43\x35\x1a\x4a\xad\x28\x95\x8b\x0b\x1b\xae\xd2\x6b\x6d\x8c\x3e\xfe\x40\xd9\xd0\x02\xe6\x57\x5e\x5d\x21\xfd\xfe\xd0\x21\x8e\x2f\xc8\x08\x6b\x18\xa5\xe4\x54\x27\x0f\xe4\x34\x91\x6e\x4e\x35\x9d\x47\x2a\x71\x19\xdf\x44\xde\x17\xe9\x62\x01\x68\xff\x07\xff\x62\x77\x19\x22\x70\x9f\xcb\x4b\xa8\x51\x89\x3c\x9d\x39\xf3\x7b\x7f\xa6\x81\x42\x93\x05\xa5\x19\xba\x28\xe0\x0d\x0c\x1c\x04\x1d\x67\x8b\x00\x16\x1e\x56\x2b\xd8\xb6\xc9\x03\x0e\xc5\xeb\x6b\x30\xd1\xa7\x42\x41\xd7\x48\x01\xc2\x92\xdc\x2d\xbb\xfa\xaf\xc1\xf3\xba\xec\x8c\x96\x1e\xfc\x7c\xb2\xfa\x17\xe9\xce\xe8\x7d\x36\xa6\xd1\x6f\x7c\xf7\xce\xdf\x90\xab\xc5\x3b\xf9\x77\x35\x1a\x52\x6f\x3b\x1d\x50\x81\xde\xfe\x49\x39\x03\x72\x9b\x82\xad\x29\x17\x3b\x41\x05\xd4\xc8\xd5\x6c\x91\x8c\x33\xf7\x65\xef\xe5\xe6\x05\xf5\xc9\x42\xdd\x6c\xa5\xc8\x5d\xf6\xa3\x92\xbf\x92\x76\x48\x7c\x5a\x89\xb0\x86\x92\xb8\x0b\x32\x0d\x36\x8b\x65\x8e\x35\x6e\x85\x14\x2c\xc8\x06\x72\x3e\x10\xed\x45\x1a\x11\xd0\x76\x7b\x54\xd9\xa5\x8f\xd6\x71\x15\x59\x2e\x46\x64\xdd\xe8\x46\x16\x2d\x4b\xa5\xef\x9d\x16\x7b\xb2\xde\x30\xa4\xd1\xc9\x65\xe8\x1b\x78\x0e\x27\xb8\x89\xb3\x94\xa4\x4a\xae\x60\xbd\x9e\x1a\x36\xfd\xee\x7c\xfe\x8e\x71\x34\x76\xba\xed\x0c\x66\x57\xc6\xe0\x09\x3a\x6b\x5b\xb5\x91\x6f\x09\xe8\xef\x06\x65\x3b\x75\x3a\x77\x30\x24\x91\xa9\x80\x82\x18\x85\xb4\xb3\x71\xb0\xf4\x44\x79\xc3\x34\x6e\xe0\xd5\x0a\x6e\x0c\x21\x93\x2f\x77\x07\xd2\x39\x07\xab\x03\x1a\xf0\xc2\x5a\xc3\x4f\xd1\xaa\xf7\xf0\x13\x32\xee\xd9\x7b\x8f\xf5\x08\x6b\x78\x78\x0c\x3e\xc7\x4a\x48\xfa\x28\x57\xb8\xe8\x4e\x7a\x8e\xea\xe6\x06\xcd\x36\x98\x9f\x60\x9a\xaf\x87\xd6\xf5\xf1\x23\xcf\x9b\x5e\x69\xa7\x58\x8c\x23\x93\x57\x72\x2c\x89\xcf\xe7\xcf\xff\x5d\x88\xee\x13\x53\x51\x12\x77\x6c\xf4\x7e\xdf\x82\x3a\xd3\xc5\x1b\x80\xb1\x46\xaf\x47\x39\x87\xa6\xae\xf0\x40\xd0\x43\x41\xae\xd5\x4e\x94\x8d\xbb\xd0\x91\xe1\xdd\x83\xc6\x4d\x0e\xe1\x9a\x73\x09\x62\x5d\x93\x2a\xde\x26\x32\x59\xcf\xe9\x7c\xfb\xe6\xc9\xa6\xa9\x3e\x9b\x74\xca\x1b\xce\xda\x2e\xe8\xca\x36\x6d\x15\xdd\xfa\x13\x1d\x35\x55\xf3\x96\xc5\xe4\xfd\x7f\xbd\x96\xfd\xef\xff\xe1\xe7\xb0\xfb\x92\x44\xbd\xe1\x06\x6f\x98\x01\xa8\x5c\x5b\xd5\xda\x0a\x06\xc1\xa3\x1b\x39\x8c\xc8\x57\x57\x32\x8c\x2f\xfb\xc2\x41\x9c\x7f\x1e\xdf\x0b\xed\xcf\xdd\xed\x26\xe6\xd4\xbf\xf8\xb8\xef\x98\x90\x88\x88\xd1\x9f\xd8\x6a\xf4\x2e\x14\x1e\xcf\xa6\x0b\x9f\x0d\x8f\xc9\x5b\x9e\x3e\x18\xe3\xcb\x8e\x85\x94\x5d\x33\x64\x70\xfe\x39\x64\x18\x86\xe3\x4b\xf2\x4f\x00\x00\x00\xff\xff\xf6\x93\x54\x60\xe8\x0a\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x9d, 0x1a, 0xed, 0x79, 0x26, 0x36, 0x12, 0x54, 0x29, 0x2c, 0x8b, 0xd, 0x29, 0xb0, 0xd0, 0x39, 0xf1, 0x5a, 0xff, 0x40, 0x51, 0x13, 0x48, 0x8b, 0x9, 0xba, 0x0, 0xdb, 0x66, 0x44, 0x1a}}
	return a, nil
}

var _transactionsNftForwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x8f\x9b\x30\x10\xc5\xef\x7c\x8a\x11\x87\x15\x48\x15\xdc\xd1\xfe\xd1\x36\x52\x6e\xad\x56\x69\xd4\xbb\x31\x03\x58\xf5\xda\xc8\x1e\x97\x56\xab\x7c\xf7\xca\x80\x89\xa1\x51\xb7\x5a\x5f\x12\x99\xd1\xbc\x79\xbf\x79\x16\xaf\x83\x36\x04\x5f\xb5\x3a\x3a\xd5\x89\x5a\xe2\x59\xff\x40\x05\xad\xd1\xaf\x90\xee\xaf\xd3\x24\xd4\x1f\xcf\x47\x6d\x46\x66\x1a\xa1\xba\x50\x1c\xdf\xa5\x49\x52\x96\x25\x9c\x7b\x61\x81\x0c\x53\x96\x71\x12\x5a\x81\x1b\x1a\x46\x68\x81\x7a\x8c\x9a\xa0\x01\x83\x5c\x0c\x02\x15\x01\xe9\xe9\xab\x56\x08\x9d\xf8\x89\x0a\x18\x4d\x17\x76\x40\x2e\x5a\x81\x0d\xbc\xb8\x5a\x0a\xfe\xc2\xa8\xf7\x22\x49\xd4\x3f\x53\x38\x9e\x42\xa7\xe7\xa6\x31\x68\x6d\x05\xcb\x9f\x4f\xc0\xb5\x94\x38\x15\x5e\x5b\x54\x51\xbb\x1c\xde\x92\x04\x00\xa0\x2c\xc1\x60\x8b\x06\x15\xc7\x30\xd0\x34\xee\x32\xed\x09\xad\x76\x86\xe3\x54\x2c\x91\xa0\x0d\x46\x4e\xd8\x56\xc0\x1c\xf5\xd9\x86\x47\xf1\xc5\x11\xab\x25\xe6\x70\xb7\xbd\x8f\x21\x04\xe9\xc3\x3a\x26\x8c\x08\xa3\x90\x12\x1a\xb4\xa2\x53\x8c\x10\x98\x0d\x62\x1e\xfd\x8a\x6d\x9d\x24\x26\x70\x6d\x54\xc1\x81\x0d\xac\x16\x52\xd0\xef\xfb\xbb\xb7\xfd\x62\x8b\x6b\xe5\xe5\x71\x46\x30\x18\x1c\x98\xc1\xcc\xeb\xa2\x59\x3c\x7d\xd6\xc6\xe8\xf1\x3b\x93\xce\x3b\x79\xe6\x5c\x3b\x45\x9e\x1a\x2c\xa7\x2c\xa1\x9e\x6a\xb6\xfc\x76\xab\x8e\xe0\xf9\x63\x51\xb6\x45\x4c\x10\x1e\x60\x96\x2d\x2c\x69\xc3\x3a\x2c\xe6\xa6\xf7\x1f\x04\xfb\x98\xad\x5a\xe1\xf8\xcc\x56\xdb\x1c\x17\xdf\x66\xb1\x29\x58\x71\x6d\x0e\x4f\x4f\x30\x30\x25\x78\x96\x1e\xb4\x93\x0d\x28\x4d\xef\xfa\x4c\xf3\x24\xc6\xd2\x21\xc5\x8b\xbd\xae\x63\x7e\x3e\x3e\x61\x66\x97\x5c\x60\x33\xe0\x2d\xa8\xdb\x0b\x86\x07\xaf\xb0\x6c\xe4\xd6\x33\xc8\x0b\x1e\x24\x05\xda\xa2\x43\x7a\x2f\x07\x7f\x43\xbb\xf5\x7e\xfe\x83\xd4\xce\x3a\xdf\x59\x5f\x6d\x07\x62\x97\xf9\x07\x7f\x21\x77\x84\xdb\x74\xd9\x39\xe2\xbb\xe0\xdf\x4c\x51\xc1\x7b\xa6\x3a\x5c\x41\x64\xff\xc0\x97\x2f\xc2\x97\xe4\x4f\x00\x00\x00\xff\xff\x3b\x07\xa6\x67\x12\x05\x00\x00"

func transactionsNftForwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingChange_forwarder_recipientCdc,
		"transactions/nft-forwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftForwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0x22, 0x7d, 0x1, 0xf3, 0x90, 0xde, 0xec, 0xd2, 0x6a, 0xb0, 0x4f, 0xb7, 0xe5, 0xa0, 0xa9, 0x97, 0xf6, 0x8f, 0x22, 0xbe, 0xa7, 0xf9, 0x69, 0x69, 0x4c, 0x74, 0x1, 0xcf, 0x7f, 0x60, 0x8d}}
	return a, nil
}

var _transactionsNftForwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xe2\x30\x10\xbd\xe7\x57\x8c\x38\xd0\x20\xa5\x70\x47\xdd\x56\x5d\x24\xa4\x3d\x2c\xaa\x5a\xb6\xf7\x21\x19\x12\x6b\x83\x1d\x8d\xc7\x64\xab\x8a\xff\xbe\x32\xf9\x72\xd8\x6c\x73\x32\xf6\xf8\xbd\xe7\x37\x6f\x50\xa7\xca\xb0\xc0\xce\xe8\xad\xd3\xb9\x3a\x94\xb4\x37\xbf\x49\xc3\x91\xcd\x09\x66\xb7\xdb\xb3\xa8\xad\xff\x49\x82\x19\x0a\xbe\x2b\xaa\x6d\x5b\x3c\xda\xeb\x2b\x77\xdb\xfd\xd6\x70\x8d\x9c\x29\x9d\x77\xb0\xe1\xde\x2c\x8a\x56\xab\x15\xec\x0b\x65\x41\x18\xb5\xc5\x54\x94\xd1\xa0\x2c\xd4\x05\x0a\xa0\x06\x4c\x53\xe3\xb4\x40\x6d\x5c\x99\x01\x3b\x0d\x62\xc0\x92\x80\x12\x4b\xe5\x11\x5c\xe5\x37\x8e\x0d\xa4\x67\xb4\xfe\x37\x42\x46\x56\xe5\x1a\x85\x32\x60\x4a\x55\xa5\x48\xcb\x9d\x85\x2b\xdf\x6e\xbb\x5f\x6e\x4c\x59\x52\xc3\x86\xd6\xba\x93\x57\x28\x05\x0d\xc5\x5e\x44\x6a\xf4\x51\xe5\x8e\x29\xf3\x0c\xd7\xf3\x5c\x9d\x49\x7b\x04\x18\x10\x3c\x68\x14\xe8\x8f\x7b\x90\xe7\x2c\x63\xb2\x76\x0d\xed\x22\x81\xb4\xbf\xf5\xe2\x0e\xa5\x4a\x5f\x50\x8a\x35\x0c\xeb\x05\x7c\x46\x11\x00\x40\xc5\x54\x21\x53\xec\x9f\x41\xbc\x06\x74\x52\xc4\xdf\x0d\xb3\xa9\xdf\xb1\x74\x94\xc0\x0f\x6b\x1d\xbd\x89\x61\xcc\x69\x83\x15\x1e\x54\xa9\xe4\x63\x63\xb4\xb0\x27\xe1\xa4\x81\xb5\xc5\x70\x98\xc0\x1b\x9e\xa9\xbd\xff\x4b\x57\xb7\xe7\x0b\x98\x3f\x37\x86\x7b\x1d\xd0\x7e\xfd\x62\xb5\x82\x9c\x24\x78\x39\x0c\x57\x9b\xfe\x8e\x2c\x6c\x1f\xdd\xf5\xb0\x87\x29\x49\x86\xa2\x01\x6c\x83\x15\x7c\xf3\x04\xad\x84\x7f\x6c\x5c\x2c\xd3\x8e\x4e\x91\x5d\xe6\x24\x0f\xf3\xcf\xdb\x9c\x06\x9d\xbd\x3c\xc6\x3d\x67\xf7\x4d\xf9\x3f\x2a\x5a\xc0\xd3\x13\x54\xa8\x55\x1a\xcf\x5e\xc3\x30\x68\x23\x61\x20\x6a\x25\xc5\x4d\x0e\x00\x25\xc8\x48\x85\x52\xcc\x16\x51\x68\x5e\xca\x84\x42\x80\xa0\xa9\x0e\xa6\x83\x18\x98\xac\x71\x9c\x12\xcc\xc1\xe2\x99\x40\x69\xb0\x4d\x67\x93\x2e\xdc\xd7\x84\x9a\xb1\xc3\x77\x36\x8c\x61\xe8\xef\xb1\x87\x7e\xb8\x1f\x0f\xe2\xb2\x51\xb1\xa3\x3a\x54\x30\x98\xbd\xfe\x4f\x6f\x16\x3d\x7e\x13\xc9\x65\x2b\x70\xe9\x05\xc7\x0f\xf7\x3d\x63\x02\x62\xd6\x37\x9c\x6d\x4c\xaf\x09\x1f\x59\xe2\xba\x10\x02\xfd\x51\x56\xfc\x23\x03\x43\xc3\x7e\x37\x01\x9b\xe8\x5a\x2b\x67\x94\x8d\x1e\x36\x9e\x6a\xf8\x64\x57\xe6\xd0\x29\xc1\x81\xf7\xa3\x1f\xfc\xc1\xd0\xba\x20\xa6\xeb\xde\x80\xdd\xfe\x3f\x69\xc3\x27\x2c\xcb\x0f\x38\xd0\x74\x37\x5e\x29\x25\x75\x26\x6e\xb2\x3e\xa5\xbc\x73\x55\xf9\xe9\x9e\xca\x77\x07\x71\x79\x8c\xbf\xf0\xf8\x2b\x73\x3a\x6b\xa6\x54\x25\x80\xb2\x9e\x9c\x92\xd6\xb4\x4b\x74\x89\xfe\x06\x00\x00\xff\xff\xca\x59\xbf\x49\x3a\x06\x00\x00"

func transactionsNftForwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingCreate_forwarderCdc,
		"transactions/nft-forwarding/create_forwarder.cdc",
	)
}

func transactionsNftForwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0xcd, 0x9a, 0xe9, 0x55, 0x66, 0xe1, 0x94, 0x74, 0x4d, 0xcd, 0xd1, 0x64, 0xbe, 0x45, 0x10, 0x96, 0x3f, 0xb5, 0xe0, 0x7b, 0xf7, 0xf, 0x62, 0x13, 0x17, 0xa5, 0xf1, 0x80, 0xb0, 0xa2, 0x76}}
	return a, nil
}

var _transactionsNftForwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\xcc\xea\x90\x48\xc0\x46\xbe\x2c\xf6\x60\x38\x09\x52\x1b\x01\x72\xa8\x5b\xa4\x6e\x7a\xa6\xa9\x91\xc5\x56\x26\x05\x72\x64\x37\x08\xf2\xdf\x0b\x4a\x14\x2d\x4a\x4e\x72\xa8\x4e\x02\x39\x1f\x6f\xde\x7b\x1c\xb1\xaf\x95\x26\x58\x2b\x79\xdf\xc8\x9d\xd8\x56\xb8\x51\xbf\x50\x42\xa1\xd5\x1e\xe2\xf1\x71\x1c\xb9\xf8\x27\x81\xc7\x47\x34\xaa\x3a\xa0\x76\xb1\xc3\x23\x1f\xf7\x19\x89\xe5\x8c\x98\xbd\x34\x2e\x30\x38\x8b\xa3\x68\x36\x9b\xc1\xa6\x14\x06\x48\x33\x69\x18\x27\xa1\x24\x08\x03\x85\xd2\xdd\x51\x81\x5a\x0b\xb9\x03\x26\x61\x7d\xbf\xe9\xaa\x28\x89\xc0\x38\x57\x8d\x24\x20\x05\x54\x22\x68\xe4\xa2\x16\x28\xe9\xd2\xc0\x23\x72\x14\x07\xd4\xb6\x78\x34\xa8\x9b\x44\x00\x00\x5c\x49\xd2\x8c\xd3\x5d\x9e\x6b\x34\x66\x0e\xee\xe7\xdf\xe0\x76\xcd\xf6\x38\x87\x6f\x64\x7b\x77\x37\xbe\xc3\x28\xe3\x28\xa8\xcc\x35\x3b\x3e\xac\xe6\xf0\xfd\x41\xd2\xff\xff\x45\x29\xbc\x44\xed\xdd\x6c\x06\x1a\x0b\xd4\x28\x39\xf6\x48\xfb\x78\xd4\x97\x06\xb8\xaa\x2a\x6c\xc1\xb5\xf1\x15\x92\xbf\x7f\xc4\x62\x0e\xac\xa1\x32\x19\x0b\x91\xfd\x70\x21\x29\x5c\xbc\x4c\x2e\x97\xbe\xe4\xeb\x14\x83\x2a\x5a\x0c\x3d\x43\x16\x53\x8e\xb5\x32\x82\xda\x73\xcb\x30\x29\x0f\xc5\x5d\xb5\x48\xce\x74\xea\xab\xbc\x76\xc3\xd6\x1a\x6b\xa6\x31\x31\x62\x27\x51\x3b\xec\x9f\x94\xd6\xea\xf8\xc4\xaa\x06\x53\xb8\xb8\xeb\x44\xf3\xfc\x38\x7c\x3b\xec\xda\x9f\xd8\x00\xeb\x91\x4e\xec\x1e\x57\xaf\x8c\x4f\xb4\x08\x65\x41\x4b\x77\x0e\xd7\xb6\x8e\xeb\x90\x8c\x54\x4e\xb3\xfe\xc0\x64\xdb\x16\xd2\xe2\x62\xe8\xd9\x9b\x44\xb6\x82\x0f\xe5\x4f\x7d\x27\xfb\xdd\xde\x42\xcd\xa4\xe0\x49\xbc\x54\x4d\x95\x83\x54\x04\x5d\xa5\xf0\x3d\x4c\xf4\xee\x4b\xc6\x69\x80\xfc\x34\xeb\xca\x8e\x7a\x3d\x1c\x25\xd3\x5d\x35\x5b\x38\xd9\x3c\xd7\xb8\x08\x9e\x4d\xb6\xbe\xdf\x2c\x83\xf4\x9b\x24\x4d\x81\x19\xf8\x20\xec\xf6\xc3\x89\x5c\x63\x98\xa4\xc2\x41\xe0\x31\x4e\x03\xd9\xdc\xf8\x6c\x3a\x73\x67\x81\x4b\xe3\x84\x0b\x3c\x6e\x3f\x83\x55\x91\x0d\x8c\x0e\xd7\x2e\x25\x33\xa4\x34\xdb\x61\x2f\xd2\xdf\xf9\xff\x26\x09\x06\xb6\x9f\xb5\xd4\x7c\x44\x7e\xdf\xf4\x2b\xa3\x32\x48\x48\x07\x1c\x39\x63\x41\xae\xd0\xb4\x54\xd9\x24\xb4\x6b\x49\x6d\x7f\x22\x27\x60\x9d\x87\x4d\x8d\x5c\x14\x02\x73\xa8\x19\x95\x6f\x31\x56\x37\xdb\x4a\xf0\x29\x71\x67\xd7\x58\xc0\xda\xe9\x4d\x86\x86\xf7\x99\x69\xc6\x59\xcd\xb6\xa2\x12\x24\xf0\xe4\xf6\x77\x9e\xef\x19\x9a\x46\x04\x75\x70\xdf\xe5\x67\xf2\x2a\xce\xd8\xe2\xdc\x74\xee\x59\xb8\x1d\x82\xbf\x91\x37\x84\xa3\xfd\xd0\x3b\xc5\xef\x02\xbf\x18\xd4\x51\x9e\xdb\xa3\x83\xf5\x00\x8b\xab\x89\xdd\xfc\x7f\x32\x5c\xde\xa7\xff\x50\xb4\xd5\x68\x41\x0a\x19\x0e\xf3\x96\x3e\xfd\x6f\x42\x96\xee\x39\x2c\xae\x64\x41\xc1\xb4\xb5\x32\x04\x2f\x3e\xff\x9f\x09\xce\x1d\xd2\xc3\xca\x24\xdd\xf6\x62\x42\x9a\x01\xe0\x74\x0e\xf1\x17\x2d\x76\x42\xb2\xaa\xe3\x01\x4c\xe9\x45\x28\xd9\x01\x3d\x62\x26\x9f\xf7\x4a\x63\xec\x7a\xbf\x46\x7f\x02\x00\x00\xff\xff\xb8\x1e\x9a\x5c\xf9\x07\x00\x00"

func transactionsNftForwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingTransfer_nft_to_receiverCdc,
		"transactions/nft-forwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftForwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x47, 0xea, 0x48, 0x15, 0xfc, 0x13, 0x2e, 0xe, 0xab, 0x4d, 0x46, 0x12, 0xfd, 0x1e, 0x6e, 0xab, 0xc1, 0xec, 0x2c, 0xa1, 0x1e, 0x40, 0x31, 0xc9, 0xd6, 0x8, 0x56, 0xf4, 0x59, 0x3c, 0x8a}}
	return a, nil
}

var _transactionsNftForwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xcd\xaa\xda\x50\x10\xde\xe7\x29\xbe\xba\x10\x85\x34\xd9\x4b\x6f\xa1\x08\x42\x17\x95\x4b\x6b\xbb\x1f\x93\x31\x19\x1a\xcf\x09\x73\x26\x57\xe4\xe2\xbb\x97\x68\xfe\xb4\xd2\x66\x75\x1c\x67\xbe\xbf\x99\x48\x8e\xb5\x57\xc3\xd6\xbb\x4d\xe3\x0a\xd9\x57\xbc\xf3\xbf\xd9\xe1\xa0\xfe\x88\xd9\x63\x79\xd6\xf7\x7f\x63\xa3\x9c\x8c\x7e\x09\x9f\x42\xd7\x7c\x57\x1b\x3a\xb7\x9b\xdd\xc6\xeb\x89\x34\x17\x57\xf4\xb0\xd3\xda\x2c\x8a\xd2\x14\xbb\x52\x02\x4c\xc9\x05\xca\x4c\xbc\x83\x72\x5d\x51\xc6\x61\x02\xc0\x8a\xef\x9c\xb1\xbc\xb1\x62\x4d\x35\xed\xa5\x12\x13\x0e\x38\x89\x95\x20\x64\xbe\xaa\xf8\x36\x6d\x1e\x62\x01\x75\xb3\xaf\x24\x43\x30\xaf\x54\x30\xe8\x60\xac\x28\xe9\xad\x95\x92\x79\x77\x90\xa2\x51\xce\x5b\xfe\xb6\x7b\xca\x14\xa5\x69\x1a\x4d\xf4\x2c\x46\xf0\x1f\x37\xb4\x57\xb2\x72\x85\xc9\x8f\x18\xda\xa9\x7b\xbd\xd2\xde\x1a\xc6\xf7\x12\xef\x51\x04\x00\xb5\x72\x4d\xca\x8b\x20\x85\x63\x5d\x81\x1a\x2b\x17\x5f\x43\x68\xb8\x43\x1b\xcc\x9d\xd7\xde\x99\xb6\xcc\x1a\xdf\x90\x42\x39\xfe\x19\xe3\xa7\xab\x1f\x8b\x4b\xcc\xbf\x64\x99\x6f\x9c\xb5\x7c\xe8\xbe\xe1\x91\xa6\xf7\x41\x49\x00\x55\xca\x94\x9f\xd1\x41\x71\x1e\x23\xf7\x70\xde\xca\x36\xa6\x8f\x50\x3e\xf2\x71\xcf\x8a\xe4\x6e\x15\xde\x55\xe7\x6b\x88\x5e\x8f\xa1\x0d\x7c\xbb\xd9\x25\xfd\x7e\x06\x3e\x39\xe0\x66\x33\xc9\x26\x1b\x4b\x0a\xb6\x4f\xf3\xf7\xc7\xf3\x4a\xd6\x83\xb0\xcb\xe7\xc5\xdf\x69\x2e\xf1\xe1\x05\x4e\xaa\x89\xb1\xf6\x53\xb6\x46\xdd\x50\xba\x44\x53\xb7\xde\x4a\xd6\x93\x04\x8e\xd1\xf4\x69\xc1\x4a\x1e\xed\x8e\xb7\x74\x1e\x06\x9f\x69\x1e\xc6\x9f\x29\xbb\xe3\xcc\x94\xc9\x18\xf3\x9e\xa3\x8d\x7c\xe0\xc0\xc1\xeb\x55\xc0\xb8\x85\x61\xb6\x62\x9b\x94\xd7\x54\xe3\xe5\xa9\x94\xee\xa0\x13\x69\x8f\xe6\xbf\x41\x3e\x3d\xdd\xe5\x3f\xbd\xf6\x4e\xef\xc4\xc4\x20\x5b\x3d\x39\xf2\xce\xfc\x25\xba\x44\x7f\x02\x00\x00\xff\xff\x87\x72\xab\xef\x50\x04\x00\x00"

func transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
		"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftForwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x37, 0xe1, 0x63, 0x7e, 0x52, 0x13, 0xf8, 0xde, 0x62, 0x42, 0x10, 0x97, 0x8b, 0x96, 0x25, 0x17, 0x7f, 0xd, 0xd5, 0xa6, 0x9b, 0x28, 0x1b, 0x9c, 0x40, 0x78, 0x73, 0x9a, 0x74, 0x70, 0x1}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\xda\x40\x10\xc5\xef\xfe\x14\xaf\x1c\x22\x23\x11\xb8\x23\x92\xb4\xa5\x41\xea\xa1\x28\x6a\xdc\xdc\x07\x33\xc6\xab\x2e\xbb\xab\xdd\x31\x2e\x8a\xf2\xdd\x2b\xdb\xc1\x36\x0e\x45\xdd\x83\x0f\xbb\xf3\xe7\xf7\xde\x8c\x67\xb3\x19\x92\x5c\x05\x88\x27\x13\x28\x15\x65\x0d\x54\x40\x99\x93\x80\x0c\x28\x4d\x6d\x61\x04\xa5\x2d\xf4\x16\xbe\x30\x51\x95\x21\x16\x81\x05\x4a\x02\xeb\x0c\x85\xab\x2e\x3c\xa7\xac\x0e\x8c\xf5\x2a\x09\x51\xa4\xf6\xce\x7a\xc1\x68\x6d\xcd\xaa\x30\x3b\xb5\xd1\x9c\xd8\xdf\x6c\x46\xed\xcb\xe3\x1f\xda\x3b\xcd\xeb\x55\xd2\xdd\xfd\x60\xa1\x2d\x09\xbd\x28\x2e\xc3\x28\x8a\xfa\x50\xaf\x51\x04\x00\xce\xb3\x23\xcf\x71\x50\x3b\xc3\x7e\x0e\x2a\x24\x8f\xbf\x5a\xef\x6d\xf9\x42\xba\xe0\x09\xbe\x87\x50\xf0\xb3\x58\x4f\x3b\x5e\x92\xa3\x8d\xd2\x4a\x8e\x4b\x6b\xc4\x5b\xad\xd9\x4f\xf0\x54\x6c\xb4\x0a\x79\xf7\x38\xc1\x33\x1d\xf8\x3d\xff\x97\x71\xc3\xf7\x31\x6e\xbe\x34\x46\x8c\xf1\x5a\x63\x54\x47\xb3\x20\xad\x4a\xd6\x80\xdf\x48\x68\x8e\x33\x05\xd3\xf5\x2a\x59\x9e\x05\xe0\x0e\x9d\xee\xe9\x8e\xe5\xfc\x39\x36\x99\x24\x47\xc7\x73\x54\xdf\xc5\xe7\x5e\xec\x7a\x95\xdc\xc7\xe3\x71\xdb\xbc\x3a\x0f\x0f\x70\x64\x54\x1a\xf7\xcc\xc4\x56\x6d\x61\xac\xc0\x73\xb0\xba\x99\xc7\x80\xe1\xa0\xb8\x1c\x75\x95\x66\x33\xfc\x64\x29\xbc\x01\x93\xd7\x47\xa8\x0c\x92\x73\x3b\x79\xd2\x9e\x69\x7b\x44\x4e\x01\xd4\xd3\xdb\xe6\xab\x0c\xcd\x30\xa6\xa1\x31\x7d\xba\xa9\xc7\xb1\xb8\xe9\xe1\x77\x08\xf7\x71\xe6\xed\x7e\x3e\x70\xee\x94\xfb\x44\x92\x8f\xf1\xe9\x0e\x46\xe9\x9e\xd5\xd5\xf1\x35\x64\x7b\xf5\x16\xf5\x15\x2c\x3d\x93\x30\x08\x86\x4b\xf0\xde\xc9\xf1\x12\xea\xf9\xc4\xb0\xb8\xed\x4f\x23\xad\x4b\x3c\x56\xb9\x1d\xed\x7f\x4c\xa4\x8f\x11\xe8\xc0\x50\x52\xfd\x0f\x3d\x0f\xdb\x88\x81\x4f\x55\x74\xbc\xb8\xed\x88\x26\x10\x7b\xd5\x99\xb3\x66\xe9\x49\x73\xbd\xaf\x29\xd2\x76\x5f\x91\x59\x5f\x03\x5c\xf0\xe0\x9d\xa1\x0d\x56\x1c\xa6\xc5\x69\xe5\xe3\x41\xef\xa6\x72\xd3\xfa\xb2\x89\x4b\x72\xb8\xbb\x58\xf4\xa4\x52\x55\xff\xe3\x3f\x97\xe1\x9a\xd8\x6b\xc8\x1f\x81\x97\xe4\x26\x20\xf9\xe0\xdf\x50\xc3\x5b\xf4\x16\xfd\x0d\x00\x00\xff\xff\x4b\x1f\xae\x7a\xf7\x04\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0xe5, 0xa1, 0x7f, 0x9, 0x64, 0xfb, 0xd4, 0x8e, 0x6c, 0xf8, 0xc9, 0x3f, 0xa1, 0x78, 0xb0, 0x83, 0x79, 0x7e, 0xb6, 0xcb, 0x7c, 0x63, 0x59, 0xbd, 0xc9, 0xf0, 0x99, 0xbc, 0x40, 0x61, 0x61}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xc1\x6a\xe3\x30\x10\xbd\xfb\x2b\x5e\x73\x28\x36\xa4\xce\x65\xd9\x43\x48\x5a\x8a\x77\x0b\x3d\x6c\x29\xdb\x6c\xef\x13\x7b\x12\x8b\xba\x92\x91\xe4\x98\x50\xf2\xef\x8b\x2c\xdb\x89\xbc\x5b\xaa\x93\x90\xde\xbc\x79\x33\xf3\x66\xb1\x58\x60\x53\x0a\x03\xab\x49\x1a\xca\xad\x50\x12\xc2\xa0\x2d\xc9\x82\x24\x28\xcf\x55\x23\x2d\x5a\xd5\x54\x05\x74\x23\x23\x17\x61\x15\x0c\x5b\x08\x6b\xb8\xda\xa1\xa9\xdd\x83\xe6\x9c\xc5\x81\xf1\xf4\xb0\x31\xa9\xe7\xdc\x35\xb2\x23\xec\x62\x1a\xc3\x06\x07\xc1\xad\x71\xe8\x37\xa9\x5a\xb4\x25\x6b\x1e\xc8\x1c\x4b\xc9\xc8\x55\x55\xf1\x39\x4a\x48\x18\xab\x34\xed\x19\x24\x0b\x87\xcd\x35\x93\xe5\x0e\xcb\xef\xb5\x3d\x5e\x44\xa4\x51\x24\xde\x6b\xa5\x2d\x9e\x94\x7c\x68\xe4\x5e\x6c\x2b\xde\xa8\x37\x96\xd8\x69\xf5\x8e\xd9\xf4\x79\x36\xe0\x7f\xb1\xa5\x82\x2c\xbd\x76\xfa\x3c\x38\x78\x9b\x45\xd1\x45\x87\x62\x2a\x0a\xcd\xc6\x2c\x71\xef\x2f\x73\xd4\xcd\xb6\x12\xf9\x33\xd9\x72\x89\xe7\xf1\x3e\x87\x28\x96\xf8\xf3\x28\xed\xf7\x6f\x09\x3e\xa2\x08\x00\x6a\xcd\x35\x69\x8e\x8d\xd8\x4b\xd6\x4b\x50\x63\xcb\xf8\xd1\x98\x86\x5f\x7c\xa9\x19\xd5\xb4\x15\x95\xb0\xc7\x4c\x49\xab\x5d\x7d\x7a\xee\x59\x4d\x79\xfe\x9c\xe3\x85\x0e\xfc\x4a\x55\xc3\x09\xae\xef\xfd\xa4\x5c\x16\xf4\xa7\x62\x7b\xd1\x1d\xac\xb1\x67\xdb\xc3\x86\x0a\x92\x34\x1f\xf8\x04\x9b\x74\xab\xb4\x56\xed\xea\xfa\x63\xda\xa9\x34\x1b\x79\x4e\xb7\xf1\xb9\xd8\x64\x4c\xe6\xce\xdd\x1d\x6a\x92\x22\x8f\x67\x59\xe7\x17\xa9\x2c\x3c\x25\x08\x9a\x77\xac\x59\xe6\xdd\xc4\xc3\x51\xcf\x92\x28\x10\xad\xd9\xa8\xea\xc0\x1a\xeb\xcb\xe9\x7a\x26\x37\x8e\xdf\xfd\x7f\xec\xba\x2b\x8a\xe4\xea\x93\x92\x7f\x90\x25\xac\x47\xba\xb4\xbf\x38\x8a\x78\x73\xac\x79\x15\xcc\x38\x7d\x7a\xd8\x64\x41\xec\x6d\x9c\x24\x57\x20\x73\x85\x2f\x80\x67\xf9\x8b\x05\x32\xef\x50\x82\xe4\xf6\x1f\x8f\x9a\x40\x6a\xf7\x7b\xa6\xc2\xea\x66\xa2\x3e\xf5\x76\xff\x19\xe2\xe2\x24\x48\x68\xe8\xc0\x10\x76\xe8\x6b\xbf\xb3\x23\xc2\xfb\x2c\xed\xf7\x28\x75\xe8\x78\x75\x33\x49\x3d\x87\x55\xcb\x69\xf2\x3e\xc4\x0f\xfa\x32\x63\x3e\x94\xe8\x9d\x80\xd1\x44\x47\xec\x94\x9e\x2e\xf2\xff\x87\x93\x51\x8d\xf5\x20\x2e\x70\xe1\xa0\x54\xb8\x9d\xf8\xd2\x8c\x81\x03\xdd\xf9\xbc\x88\x00\x9a\x4c\x1b\x14\x68\xa8\xfd\xb6\xc5\x81\xde\x39\xc8\x2e\x31\x75\xff\x29\x3a\x45\x7f\x03\x00\x00\xff\xff\xf2\xd7\x61\x86\x48\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x69, 0x91, 0x23, 0x5c, 0x8, 0xe1, 0x54, 0xca, 0xe0, 0xc, 0x46, 0x3c, 0xfd, 0x2f, 0x85, 0xf3, 0x45, 0xbc, 0x25, 0xc2, 0xbb, 0xda, 0x6, 0xc4, 0xa9, 0x18, 0x88, 0x19, 0xa6, 0xe5, 0x97}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6b\x2b\x37\x10\x7d\xdf\x5f\x31\xf8\x21\xb1\x61\xb1\xdf\x4d\x53\x48\x5d\x02\x81\x96\x86\x7c\xf5\xd5\x63\xed\xec\xee\x10\x59\x12\xd2\x28\xce\x12\xf2\xdf\x8b\xb4\x1f\xf6\x96\xdc\x0b\xd7\x6f\x5e\xcd\x9c\x39\x73\xce\x99\xcd\x66\x03\xcf\x2d\x07\x10\x8f\x26\xa0\x12\xb6\x06\x38\x00\x82\xd0\xd1\x69\x14\x82\xda\xfa\xf4\xf7\xfc\x5e\xa4\x26\xb1\xa0\x3c\xa5\x77\x04\x43\x27\xd0\x6c\xde\x80\x0d\x48\x4b\xec\x01\x95\xb2\xd1\x48\xaa\x3a\x10\xc4\x40\x55\x86\xf1\xa4\x88\xdf\xd9\x34\xe0\x6d\x87\x5a\x98\x42\xf1\x2d\x03\x85\x66\xd6\x88\xa6\x83\x3a\x9a\x86\x0f\x9a\x40\xec\x1b\x99\x12\x4e\x2d\xab\x36\x71\x0d\x8e\x14\xd7\x4c\x15\x1c\xba\x34\x1f\xf6\xef\x18\xb5\x3c\xa0\xb4\x7b\x40\xdf\xc4\x23\x19\x49\x73\xf2\xac\xfb\x3a\xd7\x8c\x0c\x4f\x68\x24\x24\x9e\x3d\x37\x3a\x33\x4b\xdb\xdc\xfd\xf5\xcf\xbf\x65\xaa\xef\xae\xb5\x4e\x74\x60\xbf\x09\x62\x3d\x36\xb4\xa9\xb5\x3d\x3d\x27\x2a\xaf\x69\xda\xfe\x02\xbc\xcb\xa8\x97\xa0\x2c\x09\xed\xe5\xe9\xcf\x5d\x39\x14\xd8\xa8\xab\x0c\x78\xc7\x28\x19\x66\x9d\x71\x9e\x7a\xf4\x44\x3e\x23\xa2\xa9\x20\x58\xb0\x66\x3d\x28\x45\xe0\x50\xda\xb3\x34\x69\x19\x17\x0f\x9a\xd5\xe0\x41\x18\x1c\xc9\x65\xd2\xa2\x0c\xb6\x40\x1d\x25\x7a\x2a\x53\x05\x7d\x38\x52\x42\xd5\x05\xc7\x69\x5a\x43\x86\x3c\xab\xb9\xcc\x2a\xf3\x3d\xe4\x34\x9c\xd0\x57\x7d\x6b\x16\xd2\x39\x6f\x9d\xe7\x14\x85\xac\x7b\x51\xf0\xd1\x59\x2f\xb0\xb8\x1b\x1c\xcb\xeb\x2d\xa6\xcf\x7f\x93\x60\x85\x82\xaf\x4c\xa7\xb0\x28\x8a\x0b\xe3\x97\x93\x73\x5b\xb8\x50\x62\x05\x9f\x45\x01\x00\xe0\x3c\x39\xf4\xb4\x0c\xdc\x18\xf2\x5b\xc0\x28\xed\xf2\x0f\xeb\xbd\x3d\xbd\xa2\x8e\x54\xc2\x7d\x08\x91\x86\xd6\x1d\x3a\x3c\xb0\x66\xe9\x76\xd6\x88\xb7\x5a\x93\x2f\xe1\x21\x89\x15\xda\xf3\x63\x09\x2f\xc6\xfd\xff\xe3\x0a\xae\x6e\xfb\x88\x4c\xc3\xd3\x6f\xb3\x81\x47\x92\xe8\x0d\x10\x7a\xdd\x01\xcf\xd3\x54\x59\x0a\xe6\x5a\xa0\xc5\xf7\x74\x18\x33\x01\x20\xfb\x3b\x21\x71\x0d\xfd\x16\xeb\x21\x50\xeb\x43\xde\xe3\xb7\xab\xcf\x59\x5b\x1f\x8b\xaf\xdf\x97\xb5\xb7\xc7\x2d\x4c\x02\xad\xe0\xe6\x06\x0c\x6b\xf8\x9c\x20\xb3\x42\x68\x58\x2d\x17\xb7\x7d\xe1\x94\x90\xf3\x8d\xcc\xcf\xa8\x4f\x49\xa2\x0d\xc6\x0a\xd0\x07\x07\x59\xac\x26\xc4\xaf\xd9\xe6\xbb\xf1\xe0\x87\xbc\xa9\x49\xad\x31\x0c\x99\x6b\x1f\x3a\x6b\x74\x97\x72\x66\x03\x85\x4b\x90\x54\x56\x91\xb3\x81\x25\x71\xe9\xef\x5d\x5a\x6f\x63\xd3\xe6\xc7\xc7\x3e\x8f\x1e\xd8\x08\xf9\x1a\x15\x4d\xed\x83\x60\xd3\x5c\xa6\xb0\x8e\xa3\x77\xcb\x59\xae\xd6\x0d\xc9\x63\x3e\xe5\x6e\x04\xcc\xc6\xab\xa4\xdd\x72\x75\x5e\x51\x93\xf4\x5a\xed\xd0\xc1\xcd\xb7\x23\x46\x83\x38\x65\xeb\x87\xfe\x9c\x9d\xf9\x29\xdf\x91\xed\x38\xb3\x04\x94\x2d\xfc\x1a\xf7\xa2\xf7\xe6\xab\xf8\x2f\x00\x00\xff\xff\xac\x58\xbb\x22\xbf\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0xdd, 0x80, 0xbf, 0x19, 0xe8, 0xc2, 0x7d, 0x81, 0x54, 0x36, 0x0, 0xdf, 0xa6, 0xee, 0xfb, 0x66, 0x41, 0x30, 0x35, 0x7c, 0xbf, 0x31, 0xa0, 0x1b, 0xb7, 0x46, 0x66, 0xe4, 0x9a, 0xeb, 0x71}}
	return a, nil
}

var _transactionsTestUpgrade_nft_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\xca\xc2\x40\x10\x84\xfb\x7b\x8a\x25\xc5\xcf\x05\x7e\x52\x4b\x3a\x11\x04\x1b\x2b\x53\x89\x84\x75\xb3\xe8\x61\xb2\x7b\x5c\xf6\x40\x90\xbc\xbb\x5c\x14\xa7\x98\xea\xfb\x86\x71\x96\x50\x66\x24\x0b\x2a\x9e\x74\xe0\x16\xce\xdd\x41\x6c\x73\xa9\xe1\xe5\x1c\x00\x40\x4c\x1c\x31\xb1\x47\x22\x6b\x01\xb3\xdd\x7d\x17\x07\x34\xde\xa9\x58\x42\xb2\x1a\xfe\xb6\x44\x9a\xc5\x7e\x4e\x49\xe1\x1b\xfa\x32\x73\x93\x57\xa7\xef\xf9\x19\x39\x85\x89\xc5\x70\xf4\x82\x13\xb7\x50\x1d\x55\xf6\x59\x6e\xe1\x3a\xf2\x49\x1f\x2c\xd5\x3f\x7c\xbe\x94\xae\xd7\xc5\xc5\x2d\xef\x00\x00\x00\xff\xff\x9c\x3c\x3c\xe2\xac\x00\x00\x00"

func transactionsTestUpgrade_nft_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTestUpgrade_nft_contractCdc,
		"transactions/test/upgrade_nft_contract.cdc",
	)
}

func transactionsTestUpgrade_nft_contractCdc() (*asset, error) {
	bytes, err := transactionsTestUpgrade_nft_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/test/upgrade_nft_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x6c, 0xb5, 0xe2, 0x88, 0x49, 0xf5, 0xa6, 0x52, 0xd8, 0x7a, 0x41, 0x8f, 0x7e, 0xc9, 0x1, 0x30, 0x49, 0x4d, 0x1e, 0x84, 0xe2, 0x4c, 0xb2, 0x13, 0x96, 0x6d, 0xca, 0x1f, 0xa1, 0x17, 0x6c}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x7c\x48\x24\x20\x51\x2e\x45\x0f\x86\xed\x20\x75\x1a\x20\x87\xba\x85\xeb\xa6\xe7\xb1\x34\x92\xd8\xca\xa4\x40\x8e\xed\x04\x41\xfe\xfb\x82\x92\x48\x51\x72\xb2\x59\x60\x7d\x12\x38\x5f\x6f\xde\xcc\x3c\xdf\xde\xde\xc2\xb6\x14\x06\x58\xa3\x34\x98\xb2\x50\x12\x84\x81\x5c\xe9\xf6\x29\x27\xad\x85\x2c\x00\x25\xfc\xfe\x82\xfb\xba\xa2\xf5\xe3\x16\x72\xad\xf6\xa0\x24\x01\xa6\xa9\x3a\x48\x06\x56\x80\x52\x71\x49\x7a\x32\x11\xfb\x5a\x69\x86\xe9\xb3\xa0\xd3\x86\x8c\xaa\x8e\xa4\xa7\xfe\xf5\x0f\x62\xcc\x90\xd1\x5a\x4d\xff\xbc\x56\xf2\xf1\x20\x0b\xb1\xab\x68\xab\xfe\x27\xd9\x5b\xfa\xb2\xd3\xc9\x24\x80\x19\xa5\x4a\xb2\xc6\x94\xef\xb3\x4c\x93\x31\x33\xe8\x3e\xae\xc1\x59\xd6\xb8\xa7\x19\xfc\xcd\xb6\x83\x6b\xd0\x94\x8a\x5a\x90\xe4\xc0\xf3\x24\xb8\xcc\x34\x9e\x9e\x1e\x66\xf0\xcf\x93\xe4\x5f\x7f\x89\xe1\x6d\x32\x01\x00\xb0\xd4\x6c\x28\x27\x4d\x32\x25\xdb\x20\x97\xe4\xfd\x49\x5f\x19\x48\x55\x55\x51\x83\xa5\x09\xa8\x88\xbd\x7d\x43\xf9\x0c\xf0\xc0\x65\x34\x6e\x2c\xf9\xb7\x73\x89\xe1\xf2\xed\xcc\xb8\xf2\x29\xdf\x3f\x42\xa1\xf2\x06\x45\x5f\xd8\xe2\xca\xa8\x56\x46\x70\x63\xb1\xc3\x61\xe5\xe1\x68\x4a\x49\x1c\x49\x37\x70\x3e\x28\xb7\xe9\xec\x5d\xb1\x5a\x53\x8d\x9a\x22\x23\x0a\x49\xba\x6b\xe0\x37\xa5\xb5\x3a\x3d\x63\x75\xa0\x18\x2e\xef\xdb\x81\x7b\x96\x5a\x8c\xb0\x6b\x9c\x3c\x04\x37\x00\x40\x03\xe1\x1a\x80\x76\xad\xf8\x60\x0b\xf3\x18\xba\x2c\xa0\x20\xee\xca\x8c\x67\x1c\x27\xee\xc1\x24\x6d\xc9\xf9\x65\x98\x7f\x19\xc9\x66\xe4\xe1\x02\xc4\xbe\x94\xfd\xdd\xdd\x41\x8d\x52\xa4\xd1\x74\xa5\x0e\x55\x06\x52\xb1\x03\x3f\x00\xaa\x72\x28\xc4\x91\x24\xd8\x84\xed\xbe\x63\x8b\x61\x1a\x0f\x3a\xd7\x6d\x44\xd0\xba\x9f\x8d\x5d\xf3\x36\x74\xcc\xcb\xa0\xfb\x3e\xe2\xc1\x06\x2c\x06\x74\x24\x5d\x7e\x0b\x2e\xda\xbe\xd6\x34\x1f\x1c\x50\xb2\x7e\xdc\xae\x06\xf1\xcb\x28\x8e\x01\xcd\x05\x7c\xe1\x77\xf7\x09\x2d\x03\x16\x32\x45\xa6\xa1\xc8\x75\x79\x96\xa6\x01\x3b\xa2\xa4\xe3\x13\xfb\x69\xbb\xf3\x69\x17\xeb\xca\x8c\x98\xf2\xc1\x86\xaa\x3c\x09\x6e\x08\x16\x5d\x48\x62\x58\x69\x2c\xc8\x4d\xfd\xe7\x4e\x6b\x19\x0d\x9a\xb7\x3f\x3b\xa6\xd9\x68\x14\xae\xe8\x5f\xc8\xe5\x20\x20\x0e\xf8\xea\x36\xb5\xa7\xca\x06\x91\xd5\x4b\xb5\xfb\x8f\xec\x09\xb4\x97\x69\x6a\x4a\x45\x2e\x28\x83\x1a\xb9\x1c\x31\x56\x50\xeb\xe4\x25\xca\x40\x7d\xd8\x55\x22\xf5\x02\xdb\x26\x1b\xec\x8d\x77\x1e\x9e\x8c\x7f\xfe\x64\x28\x5d\xe2\xb3\xd9\x38\xad\x38\xd3\xb5\xb1\x98\xac\xb0\x86\x45\x5f\x3d\x49\xb1\xc6\x9d\xa8\x04\x0b\x32\x49\x41\x3c\xff\x9e\xd0\x2c\xa3\x11\xc7\x2d\x1c\x4b\xf1\xd7\x87\x7a\x46\xd3\x95\x01\x97\x19\x56\x0e\xc6\x6b\x48\x6e\xb3\x51\x81\x0c\xb6\xc8\x5d\x1f\xdd\x3a\x45\x3f\xac\x11\x1f\xb1\xe6\xa1\xb8\xc4\xae\x7e\xa7\xaa\xf4\x42\xe9\x81\x29\x54\x4c\x4b\xa7\xcc\x19\xe6\x37\x67\x2b\xef\xbf\xa3\xf0\xbf\xa9\xff\x8e\x3f\x6d\x2d\xe9\xfe\x08\x22\xb6\x94\xcf\x60\x7e\x23\x73\x1e\x42\xa9\x95\x61\x78\xf3\x19\x2e\xce\x8a\x17\xc4\x4f\x0f\x26\x6a\x75\x16\x85\x34\x01\x8a\x78\x06\xd3\x3f\xb5\x28\x84\xc4\x0a\xd4\x49\x92\x06\x53\x7a\x82\x4a\x0c\x44\x10\xe5\xeb\x5e\x69\x9a\x76\xb5\xdf\x27\xdf\x02\x00\x00\xff\xff\x5a\x09\xf8\x19\x68\x08\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0x3, 0xd3, 0xd3, 0xfe, 0x16, 0x76, 0x2a, 0x4e, 0x15, 0x62, 0x77, 0x5c, 0x87, 0xf3, 0xaa, 0x4c, 0x14, 0x80, 0xf9, 0xa3, 0x9b, 0x87, 0x46, 0xc4, 0xe9, 0xf1, 0x6f, 0xe2, 0xbc, 0xea, 0x21}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x4e\xc3\x30\x10\x86\x77\x3f\xc5\x4f\x06\x48\x96\x74\x47\x40\x85\x0a\xdd\xa8\x2a\x14\xd8\xaf\xee\x41\x2c\x5c\xdb\xb2\x2f\x2d\x15\xea\xbb\xa3\x34\x49\xdb\x88\x81\x1b\x2f\xff\x7d\xf9\x7c\x37\x99\x4c\x50\xd5\x26\x41\x22\xb9\x44\x5a\x8c\x77\x68\x9c\x35\xee\x2b\x21\x99\x4f\xc7\xf1\x26\x21\x34\x2b\x6b\x34\x66\x14\x68\x65\xac\x91\x3d\x48\xa0\xc9\x79\x67\x34\xd9\xe1\x73\x20\xa9\x95\x32\x9b\xe0\xa3\xe0\x85\x85\xd6\x24\xf4\x6e\x78\x97\xf0\x11\xfd\x06\xd9\xa8\x97\x0d\xc9\xe7\x6f\xda\x04\xcb\x8b\x79\xd5\xc7\xce\x8d\x4c\xa9\x4b\xaf\x1f\x05\x00\x21\x72\xa0\xc8\x79\x67\x77\x0b\x6a\xa4\xce\xdf\xdc\x51\x22\xd5\xbd\xa3\xec\x0b\x5c\x3f\x6a\xed\x1b\x27\x45\x3f\xd8\x96\x65\x81\xf6\xd6\xf2\x91\xf8\x44\x42\xb8\xbf\x30\x28\x23\x27\x6f\xb7\xdc\x1a\xe6\xd5\x3e\xf0\xdd\xc8\xb9\x5c\xcc\xab\xd9\x68\xfa\x21\x2f\x0a\x50\xba\xc2\x3f\xb9\xe9\xc9\xa0\xad\xe9\x14\x81\x9c\xd1\x79\xd6\xc6\x5f\xbb\x7f\x46\xac\x3d\x27\x38\x2f\xe8\x2d\xf0\x07\x83\xad\xe1\x5d\x56\x9c\x60\xdd\x0e\x4a\x3d\x1c\xc6\x70\x2a\x9b\x61\x15\xf9\xc5\xbb\xce\x98\xe5\xf1\x58\x4b\x92\xba\xc3\x1c\xd4\x41\xfd\x06\x00\x00\xff\xff\xe0\x54\x0c\x3f\x06\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xca, 0x9a, 0xbf, 0x6c, 0x3d, 0x7c, 0xbb, 0x23, 0x9e, 0x58, 0xb8, 0x35, 0xf3, 0xab, 0x95, 0x5, 0x56, 0xca, 0x34, 0x97, 0x42, 0xb7, 0x4b, 0xc, 0xa6, 0x95, 0x8d, 0x18, 0x7a, 0xb4, 0xcd, 0x7e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                           scriptsBorrow_nftCdc,
	"scripts/get_collection_data.cdc":                                  scriptsGet_collection_dataCdc,
	"scripts/get_collection_ids.cdc":                                   scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                                scriptsGet_collection_lengthCdc,
	"scripts/get_collection_length_from_storage.cdc":                   scriptsGet_collection_length_from_storageCdc,
	"scripts/get_contract_storage_path.cdc":                            scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                     scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                         scriptsGet_nft_viewCdc,
	"transactions/destroy_nft.cdc":                                     transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                        transactionsMint_nftCdc,
	"transactions/nft-forwarding/change_forwarder_recipient.cdc":       transactionsNftForwardingChange_forwarder_recipientCdc,
	"transactions/nft-forwarding/create_forwarder.cdc":                 transactionsNftForwardingCreate_forwarderCdc,
	"transactions/nft-forwarding/transfer_nft_to_receiver.cdc":         transactionsNftForwardingTransfer_nft_to_receiverCdc,
	"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc": transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
	"transactions/setup_account.cdc":                                   transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":                transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":                transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/test/upgrade_nft_contract.cdc":                       transactionsTestUpgrade_nft_contractCdc,
	"transactions/transfer_nft.cdc":                                    transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                               transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_data.cdc": {scriptsGet_collection_dataCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_collection_length_from_storage.cdc": {scriptsGet_collection_length_from_storageCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"nft-forwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftForwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftForwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftForwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftForwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"test": {nil, map[string]*bintree{
			"upgrade_nft_contract.cdc": {transactionsTestUpgrade_nft_contractCdc, map[string]*bintree{}},
		}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
